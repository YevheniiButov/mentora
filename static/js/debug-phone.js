// debug-phone.js - –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
console.log('üîç Debug Phone Script Loaded');

document.addEventListener('DOMContentLoaded', function() {
    console.log('üîç DOM Content Loaded - Debug Phone');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const phoneContainer = document.querySelector('.device-mockup');
    const screenSlides = document.getElementById('screenSlides');
    const indicators = document.querySelectorAll('.indicator');
    
    console.log('üì± Phone Container:', phoneContainer);
    console.log('üñ•Ô∏è Screen Slides:', screenSlides);
    console.log('üîò Indicators:', indicators.length);
    
    if (phoneContainer) {
        console.log('‚úÖ Phone container found');
    } else {
        console.log('‚ùå Phone container NOT found');
    }
    
    if (screenSlides) {
        console.log('‚úÖ Screen slides found');
    } else {
        console.log('‚ùå Screen slides NOT found');
    }
    
    if (indicators.length > 0) {
        console.log('‚úÖ Indicators found:', indicators.length);
    } else {
        console.log('‚ùå Indicators NOT found');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ω–∞—à–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
    console.log('üîç HeroPhoneAnimation available:', typeof HeroPhoneAnimation !== 'undefined');
    console.log('üîç AppInitializer available:', typeof AppInitializer !== 'undefined');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    console.log('üîç window.heroPhoneAnimation:', window.heroPhoneAnimation);
    console.log('üîç window.controlHeroPhone:', window.controlHeroPhone);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä—É—á–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–æ–≤
    if (screenSlides && indicators.length > 0) {
        console.log('üß™ Testing manual screen switching...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
        const testContainer = document.createElement('div');
        testContainer.style.cssText = `
            position: fixed;
            top: 10px;
            right: 10px;
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 10px;
            border-radius: 5px;
            z-index: 10000;
            font-family: monospace;
            font-size: 12px;
        `;
        
        testContainer.innerHTML = `
            <div>üîç Phone Debug</div>
            <button onclick="testScreen(0)">Screen 1</button>
            <button onclick="testScreen(1)">Screen 2</button>
            <button onclick="testScreen(2)">Screen 3</button>
            <button onclick="testScreen(3)">Screen 4</button>
            <button onclick="testAutoAdvance()">Auto</button>
        `;
        
        document.body.appendChild(testContainer);
        
        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        window.testScreen = function(screenIndex) {
            console.log('üß™ Testing screen:', screenIndex);
            if (screenSlides) {
                const offset = -screenIndex * 25;
                screenSlides.style.transform = `translateX(${offset}%)`;
                console.log('‚úÖ Applied transform:', `translateX(${offset}%)`);
            }
            
            indicators.forEach((indicator, index) => {
                indicator.classList.toggle('active', index === screenIndex);
            });
        };
        
        window.testAutoAdvance = function() {
            console.log('üß™ Testing auto advance');
            if (window.heroPhoneAnimation) {
                window.heroPhoneAnimation.startAutoAdvance();
                console.log('‚úÖ Auto advance started');
            } else {
                console.log('‚ùå heroPhoneAnimation not available');
            }
        };
        
        console.log('‚úÖ Debug panel added');
    }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —á–µ—Ä–µ–∑ window.onload
window.addEventListener('load', function() {
    console.log('üîç Window Loaded - Debug Phone');
    console.log('üîç Final check - HeroPhoneAnimation:', typeof HeroPhoneAnimation !== 'undefined');
    console.log('üîç Final check - window.heroPhoneAnimation:', window.heroPhoneAnimation);
}); 