# docker/docker-compose.mobile.yml
# Production-ready Docker Compose for Dental Academy Mobile System
version: '3.8'

services:
  # Main Application with Mobile System
  dental-academy-mobile:
    build:
      context: ..
      dockerfile: docker/Dockerfile.mobile
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VCS_REF=${VCS_REF:-$(git rev-parse --short HEAD)}
    image: dental-academy:mobile-${VERSION:-latest}
    container_name: dental-academy-mobile
    restart: unless-stopped
    
    environment:
      # Flask Configuration
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      
      # Mobile System Configuration
      - MOBILE_FORCE_HTTPS=true
      - MOBILE_ANALYTICS_ENABLED=true
      - MOBILE_REDIS_ENABLED=true
      - MOBILE_REDIS_URL=redis://redis:6379/2
      
      # PWA Configuration
      - PWA_NAME=Dental Academy
      - PWA_SHORT_NAME=Dental Academy
      - PWA_THEME_COLOR=#3ECDC1
      - PWA_BACKGROUND_COLOR=#ffffff
      
      # Push Notifications
      - PUSH_NOTIFICATIONS_ENABLED=${PUSH_NOTIFICATIONS_ENABLED:-false}
      - VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY}
      - VAPID_PRIVATE_KEY=${VAPID_PRIVATE_KEY}
      - VAPID_SUBJECT=${VAPID_SUBJECT}
      
      # Performance
      - MOBILE_IMAGE_OPTIMIZATION=true
      - MOBILE_LAZY_LOADING=true
      - MOBILE_COMPRESS_RESPONSES=true
      
      # Monitoring
      - MOBILE_PERFORMANCE_MONITORING=true
      - SENTRY_DSN=${SENTRY_DSN}
      
    ports:
      - "8080:5000"
    
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs
      - app_cache:/app/cache
    
    networks:
      - dental_network
    
    depends_on:
      - postgres
      - redis
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dental-mobile.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.routers.dental-mobile.tls=true"
      - "traefik.http.routers.dental-mobile.tls.certresolver=letsencrypt"
      - "traefik.http.services.dental-mobile.loadbalancer.server.port=5000"
      
      # PWA specific headers
      - "traefik.http.middlewares.pwa-headers.headers.customrequestheaders.Cache-Control=public, max-age=31536000"
      - "traefik.http.middlewares.pwa-headers.headers.customrequestheaders.Service-Worker-Allowed=/"
      - "traefik.http.routers.dental-mobile.middlewares=pwa-headers"

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dental-postgres
    restart: unless-stopped
    
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-dental_academy}
      - POSTGRES_USER=${POSTGRES_USER:-dental}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    
    networks:
      - dental_network
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dental} -d ${POSTGRES_DB:-dental_academy}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Mobile Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: dental-redis
    restart: unless-stopped
    
    command: >
      redis-server 
      --maxmemory 256mb 
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfsync everysec
    
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    
    networks:
      - dental_network
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Nginx for Mobile-Optimized Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: dental-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx.mobile.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - app_uploads:/var/www/uploads:ro
      - app_cache:/var/www/cache:ro
    
    networks:
      - dental_network
    
    depends_on:
      - dental-academy-mobile
    
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mobile Analytics and Monitoring
  mobile-analytics:
    image: plausible/analytics:latest
    container_name: dental-mobile-analytics
    restart: unless-stopped
    
    environment:
      - BASE_URL=${ANALYTICS_BASE_URL:-http://localhost:8001}
      - SECRET_KEY_BASE=${ANALYTICS_SECRET_KEY}
      - DATABASE_URL=postgres://plausible:${ANALYTICS_DB_PASSWORD}@analytics-postgres:5432/plausible
    
    ports:
      - "8001:8000"
    
    networks:
      - dental_network
    
    depends_on:
      - analytics-postgres

  # Analytics Database
  analytics-postgres:
    image: postgres:15-alpine
    container_name: dental-analytics-postgres
    restart: unless-stopped
    
    environment:
      - POSTGRES_DB=plausible
      - POSTGRES_USER=plausible
      - POSTGRES_PASSWORD=${ANALYTICS_DB_PASSWORD}
    
    volumes:
      - analytics_data:/var/lib/postgresql/data
    
    networks:
      - dental_network

  # ClickHouse for Mobile Performance Metrics
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: dental-clickhouse
    restart: unless-stopped
    
    environment:
      - CLICKHOUSE_DB=mobile_metrics
      - CLICKHOUSE_USER=dental
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql
    
    networks:
      - dental_network
    
    ports:
      - "8123:8123"  # HTTP interface
    
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  # Image Optimization Service
  image-optimizer:
    build:
      context: ./image-optimizer
      dockerfile: Dockerfile
    container_name: dental-image-optimizer
    restart: unless-stopped
    
    environment:
      - REDIS_URL=redis://redis:6379/3
      - MAX_IMAGE_SIZE=10MB
      - SUPPORTED_FORMATS=jpg,jpeg,png,webp
    
    volumes:
      - app_uploads:/app/uploads
      - optimized_images:/app/optimized
    
    networks:
      - dental_network
    
    depends_on:
      - redis

  # Push Notification Service
  push-service:
    build:
      context: ./push-service
      dockerfile: Dockerfile
    container_name: dental-push-service
    restart: unless-stopped
    
    environment:
      - VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY}
      - VAPID_PRIVATE_KEY=${VAPID_PRIVATE_KEY}
      - VAPID_SUBJECT=${VAPID_SUBJECT}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379/4
    
    networks:
      - dental_network
    
    depends_on:
      - postgres
      - redis

  # Mobile Performance Monitor
  performance-monitor:
    image: grafana/grafana:latest
    container_name: dental-performance-monitor
    restart: unless-stopped
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-clickhouse-datasource
    
    ports:
      - "3000:3000"
    
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    
    networks:
      - dental_network
    
    depends_on:
      - clickhouse

# Networks
networks:
  dental_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  postgres_data:
    driver: local
  
  redis_data:
    driver: local
  
  analytics_data:
    driver: local
  
  clickhouse_data:
    driver: local
  
  grafana_data:
    driver: local
  
  app_uploads:
    driver: local
  
  app_logs:
    driver: local
  
  app_cache:
    driver: local
  
  optimized_images:
    driver: local