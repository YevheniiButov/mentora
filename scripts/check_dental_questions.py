#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app import create_app
from models import AssessmentCategory, AssessmentQuestion

def check_dental_questions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ"""
    app = create_app()
    with app.app_context():
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = AssessmentCategory.query.filter_by(is_dutch_specific=False).all()
        
        print(f"üìÇ –ù–∞–π–¥–µ–Ω–æ {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏:")
        for category in categories:
            question_count = AssessmentQuestion.query.filter_by(category_id=category.id).count()
            print(f"  - {category.name} ({category.slug}): {question_count} –≤–æ–ø—Ä–æ—Å–æ–≤")
            print(f"    –û–ø–∏—Å–∞–Ω–∏–µ: {category.description}")
            print(f"    –¶–≤–µ—Ç: {category.color}, –ò–∫–æ–Ω–∫–∞: {category.icon}")
            print(f"    –í–µ—Å: {category.weight}, –í–æ–ø—Ä–æ—Å–æ–≤: {category.min_questions}-{category.max_questions}")
            print()
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_questions = AssessmentQuestion.query.join(AssessmentCategory).filter(
            AssessmentCategory.is_dutch_specific == False
        ).count()
        
        print(f"üìä –í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏: {total_questions}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤
        print("\nüìù –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:")
        for category in categories[:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            questions = AssessmentQuestion.query.filter_by(category_id=category.id).limit(2).all()
            print(f"\n{category.name}:")
            for i, question in enumerate(questions, 1):
                print(f"  {i}. {question.question_text[:80]}...")
                print(f"     –°–ª–æ–∂–Ω–æ—Å—Ç—å: {question.difficulty_level}, –í—Ä–µ–º—è: {question.time_limit}—Å")
                print(f"     –û–ø—Ü–∏–∏: {len(question.get_options())} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")

if __name__ == "__main__":
    check_dental_questions() 