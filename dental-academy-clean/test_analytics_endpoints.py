#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
"""

import requests
import json
from datetime import datetime

def test_endpoint(url, method='GET', data=None, headers=None):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç"""
    try:
        if method == 'GET':
            response = requests.get(url, headers=headers)
        elif method == 'POST':
            response = requests.post(url, json=data, headers=headers)
        
        print(f"üîç {method} {url}")
        print(f"   Status: {response.status_code}")
        
        if response.status_code == 200:
            print(f"   ‚úÖ Success")
            try:
                result = response.json()
                print(f"   üìä Response keys: {list(result.keys()) if isinstance(result, dict) else 'Not a dict'}")
            except:
                print(f"   üìÑ Response length: {len(response.text)} chars")
        else:
            print(f"   ‚ùå Error: {response.text[:200]}")
        
        print()
        return response.status_code == 200
        
    except Exception as e:
        print(f"   üí• Exception: {str(e)}")
        print()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–ù–ê–õ–ò–¢–ò–ß–ï–°–ö–ò–• –≠–ù–î–ü–û–ò–ù–¢–û–í")
    print("=" * 50)
    
    # –ë–∞–∑–æ–≤—ã–π URL (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
    base_url = "http://localhost:5000"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ç—Ä–µ–∫–∏–Ω–≥–∞
    print("üìä –ü–£–ë–õ–ò–ß–ù–´–ï –≠–ù–î–ü–û–ò–ù–¢–´ –¢–†–ï–ö–ò–ù–ì–ê:")
    print("-" * 30)
    
    tracking_endpoints = [
        ("/track-registration-visit", "POST", {"page_type": "test", "timestamp": datetime.now().isoformat()}),
        ("/track-form-start", "POST", {"page_type": "test", "timestamp": datetime.now().isoformat()}),
        ("/track-form-submit", "POST", {"page_type": "test", "timestamp": datetime.now().isoformat()}),
        ("/track-page-exit", "POST", {"page_type": "test", "timestamp": datetime.now().isoformat()}),
        ("/track-email-entry", "POST", {"email": "test@example.com", "page_type": "test", "timestamp": datetime.now().isoformat()}),
        ("/track-name-entry", "POST", {"first_name": "Test", "last_name": "User", "page_type": "test", "timestamp": datetime.now().isoformat()})
    ]
    
    success_count = 0
    total_count = len(tracking_endpoints)
    
    for endpoint, method, data in tracking_endpoints:
        url = f"{base_url}{endpoint}"
        if test_endpoint(url, method, data):
            success_count += 1
    
    print(f"üìà –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–†–ï–ö–ò–ù–ì–ê: {success_count}/{total_count} —É—Å–ø–µ—à–Ω–æ")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã (—Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
    print("üîê –ê–î–ú–ò–ù–°–ö–ò–ï –≠–ù–î–ü–û–ò–ù–¢–´ (—Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏):")
    print("-" * 40)
    
    admin_endpoints = [
        "/admin/monitoring/dashboard",
        "/admin/registration-analytics",
        "/admin/dashboard"
    ]
    
    admin_success = 0
    for endpoint in admin_endpoints:
        url = f"{base_url}{endpoint}"
        if test_endpoint(url):
            admin_success += 1
    
    print(f"üìà –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–î–ú–ò–ù–ö–ò: {admin_success}/{len(admin_endpoints)} –¥–æ—Å—Ç—É–ø–Ω—ã")
    print()
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_success = success_count + admin_success
    total_endpoints = total_count + len(admin_endpoints)
    
    print("üéØ –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ: {total_success}/{total_endpoints}")
    print(f"   üìä –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(total_success/total_endpoints)*100:.1f}%")
    
    if total_success == total_endpoints:
        print("   üéâ –í–°–ï –≠–ù–î–ü–û–ò–ù–¢–´ –†–ê–ë–û–¢–ê–Æ–¢!")
    elif success_count == total_count:
        print("   ‚úÖ –í—Å–µ —Ç—Ä–µ–∫–∏–Ω–≥ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("   ‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã (—Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)")
    else:
        print("   ‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º–∏")

if __name__ == "__main__":
    main()


