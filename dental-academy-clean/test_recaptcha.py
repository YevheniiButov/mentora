#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ reCAPTCHA
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import app
import requests

def test_recaptcha_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ reCAPTCHA"""
    with app.app_context():
        print("üîç –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö reCAPTCHA")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        recaptcha_enabled = app.config.get('RECAPTCHA_ENABLED', False)
        public_key = app.config.get('RECAPTCHA_PUBLIC_KEY', None)
        private_key = app.config.get('RECAPTCHA_PRIVATE_KEY', None)
        domains = app.config.get('RECAPTCHA_DOMAINS', [])
        
        print(f"üìä –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:")
        print(f"   RECAPTCHA_ENABLED: {recaptcha_enabled}")
        print(f"   RECAPTCHA_PUBLIC_KEY: {public_key[:20] + '...' if public_key else 'None'}")
        print(f"   RECAPTCHA_PRIVATE_KEY: {private_key[:20] + '...' if private_key else 'None'}")
        print(f"   RECAPTCHA_DOMAINS: {domains}")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á–∏
        if not public_key or not private_key:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–∏ reCAPTCHA")
            return False
        
        if not recaptcha_enabled:
            print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: reCAPTCHA –æ—Ç–∫–ª—é—á–µ–Ω–∞")
            return False
        
        print("‚úÖ –ö–õ–Æ–ß–ò reCAPTCHA –ù–ê–°–¢–†–û–ï–ù–´")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Å —Ç–µ—Å—Ç–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
        print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ê–õ–ò–î–ê–¶–ò–ò:")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω (–æ–±—ã—á–Ω–æ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π)
        test_token = "test_token_123"
        
        try:
            from routes.auth_routes import verify_recaptcha
            result = verify_recaptcha(test_token)
            print(f"   –¢–µ—Å—Ç —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º: {result}")
            
            if result:
                print("   ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: reCAPTCHA –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –≤ dev —Ä–µ–∂–∏–º–µ)")
            else:
                print("   ‚úÖ reCAPTCHA –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}")
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ reCAPTCHA –≤ —à–∞–±–ª–æ–Ω–∞—Ö
        print("üìÑ –ü–†–û–í–ï–†–ö–ê –®–ê–ë–õ–û–ù–û–í:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º quick_register.html
        try:
            with open('templates/auth/quick_register.html', 'r', encoding='utf-8') as f:
                content = f.read()
                if 'g-recaptcha' in content:
                    print("   ‚úÖ reCAPTCHA –Ω–∞–π–¥–µ–Ω –≤ quick_register.html")
                else:
                    print("   ‚ùå reCAPTCHA –ù–ï –Ω–∞–π–¥–µ–Ω –≤ quick_register.html")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è quick_register.html: {str(e)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º register.html
        try:
            with open('templates/auth/register.html', 'r', encoding='utf-8') as f:
                content = f.read()
                if 'g-recaptcha' in content:
                    print("   ‚úÖ reCAPTCHA –Ω–∞–π–¥–µ–Ω –≤ register.html")
                else:
                    print("   ‚ùå reCAPTCHA –ù–ï –Ω–∞–π–¥–µ–Ω –≤ register.html")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è register.html: {str(e)}")
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–º–µ–Ω—ã
        print("üåê –ü–†–û–í–ï–†–ö–ê –î–û–ú–ï–ù–û–í:")
        current_domain = "bigmentor.nl"  # –¢–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω
        if current_domain in domains:
            print(f"   ‚úÖ –î–æ–º–µ–Ω {current_domain} —Ä–∞–∑—Ä–µ—à–µ–Ω")
        else:
            print(f"   ‚ùå –î–æ–º–µ–Ω {current_domain} –ù–ï —Ä–∞–∑—Ä–µ—à–µ–Ω")
            print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã: {domains}")
        
        print()
        print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
        if recaptcha_enabled and public_key and private_key:
            print("   ‚úÖ reCAPTCHA –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            print("   ‚úÖ –ö–ª—é—á–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            print("   ‚úÖ –®–∞–±–ª–æ–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç reCAPTCHA")
            print("   üéØ –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –∫–∞–ø—á—É")
        else:
            print("   ‚ùå reCAPTCHA –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            print("   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–∏ –∏–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞")

if __name__ == "__main__":
    test_recaptcha_config()


