#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞ mentora.com.in
"""
import os
import subprocess
import json
from pathlib import Path

def create_test_env_file():
    """–°–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞"""
    test_env_content = """# Test Domain Configuration - mentora.com.in
FLASK_ENV=production
FLASK_DEBUG=False

# Database Configuration (Test)
DATABASE_URL=postgresql://mentora_test_user:test_password@localhost:5432/mentora_test_db
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=mentora_test_db
DATABASE_USER=mentora_test_user
DATABASE_PASSWORD=test_password

# Security
SECRET_KEY=test_secret_key_change_in_production
WTF_CSRF_ENABLED=True

# Email Configuration (Test)
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=True
MAIL_USERNAME=test@mentora.com.in
MAIL_PASSWORD=test_email_password

# Resend API (Test)
RESEND_API_KEY=test_resend_api_key

# reCAPTCHA (Test)
RECAPTCHA_PUBLIC_KEY=test_recaptcha_public_key
RECAPTCHA_PRIVATE_KEY=test_recaptcha_private_key

# Domain Configuration
TEST_DOMAIN=mentora.com.in
PRODUCTION_DOMAIN=bigmentor.nl

# Feature Flags
ENABLE_ANALYTICS=True
ENABLE_DIAGNOSTICS=True
ENABLE_IRT_TESTING=True
ENABLE_DEBUG_MODE=False

# Logging
LOG_LEVEL=INFO
LOG_FILE=logs/test_domain.log
"""
    
    with open('.env.test', 'w') as f:
        f.write(test_env_content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω .env.test —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞")

def create_test_database_script():
    """–°–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –ë–î"""
    script_content = """#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –ë–î –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–¥–∞–∫—à–Ω –±—ç–∫–∞–ø–∞

echo "üóÉÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –ë–î..."

# –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ë–î
sudo -u postgres psql -c "CREATE USER mentora_test_user WITH PASSWORD 'test_password';"
sudo -u postgres psql -c "CREATE DATABASE mentora_test_db OWNER mentora_test_user;"
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE mentora_test_db TO mentora_test_user;"

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –±—ç–∫–∞–ø–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –±—ç–∫–∞–ø—É)
echo "üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞..."
PGPASSWORD=test_password psql -h localhost -U mentora_test_user -d mentora_test_db -f backups/latest_production_backup.sql

echo "‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –ë–î —Å–æ–∑–¥–∞–Ω–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
"""
    
    with open('setup_test_database.sh', 'w') as f:
        f.write(script_content)
    
    os.chmod('setup_test_database.sh', 0o755)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç setup_test_database.sh")

def create_deployment_script():
    """–°–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω"""
    script_content = """#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω mentora.com.in

echo "üöÄ –î–µ–ø–ª–æ–π –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω mentora.com.in..."

# –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
cp .env.test .env

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
pip install -r requirements.txt

# –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
python3 -c "from app import create_app, db; app = create_app(); app.app_context().push(); db.create_all()"

# –°–æ–±—Ä–∞—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
python3 -c "from app import create_app; app = create_app(); app.app_context().push()"

# –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üåê –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–º –¥–æ–º–µ–Ω–µ..."
gunicorn --bind 0.0.0.0:5000 --workers 4 --timeout 120 app:app

echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω"
"""
    
    with open('deploy_test_domain.sh', 'w') as f:
        f.write(script_content)
    
    os.chmod('deploy_test_domain.sh', 0o755)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç deploy_test_domain.sh")

def create_nginx_config():
    """–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞"""
    nginx_config = """server {
    listen 80;
    server_name mentora.com.in www.mentora.com.in;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name mentora.com.in www.mentora.com.in;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/mentora.com.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mentora.com.in/privkey.pem;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Static files
    location /static {
        alias /path/to/mentora/static;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Main application
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Logging
    access_log /var/log/nginx/mentora.com.in.access.log;
    error_log /var/log/nginx/mentora.com.in.error.log;
}
"""
    
    with open('nginx_mentora_test.conf', 'w') as f:
        f.write(nginx_config)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx nginx_mentora_test.conf")

def create_test_checklist():
    """–°–æ–∑–¥–∞—Ç—å —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    checklist = {
        "test_domain_setup": [
            "‚úÖ –°–æ–∑–¥–∞—Ç—å .env.test —Ñ–∞–π–ª",
            "‚úÖ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –ë–î",
            "‚úÖ –°–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –¥–µ–ø–ª–æ—è",
            "‚úÖ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é",
            "‚úÖ –ü–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è mentora.com.in"
        ],
        "deployment_steps": [
            "1. –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø—Ä–æ–¥–∞–∫—à–Ω –ë–î",
            "2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –ë–î –Ω–∞ –æ—Å–Ω–æ–≤–µ –±—ç–∫–∞–ø–∞",
            "3. –ó–∞–¥–µ–ø–ª–æ–∏—Ç—å –∫–æ–º–º–∏—Ç—ã –ø–æ—Å–ª–µ d727518 –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω",
            "4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏",
            "5. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –∑–∞–¥–µ–ø–ª–æ–∏—Ç—å –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω"
        ],
        "testing_checklist": [
            "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è PostgreSQL)",
            "üîç –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å IRT –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É",
            "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            "üîç –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å",
            "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É —Ñ–æ—Ä—É–º–∞",
            "üîç –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
            "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
        ],
        "rollback_plan": [
            "1. –í —Å–ª—É—á–∞–µ –ø—Ä–æ–±–ª–µ–º - –æ—Ç–∫–∞—Ç–∏—Ç—å—Å—è –∫ –∫–æ–º–º–∏—Ç—É d727518",
            "2. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ë–î –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏",
            "3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω —Å–∞–π—Ç–∞"
        ]
    }
    
    with open('test_domain_checklist.json', 'w', encoding='utf-8') as f:
        json.dump(checklist, f, indent=2, ensure_ascii=False)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —á–µ–∫-–ª–∏—Å—Ç test_domain_checklist.json")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞ mentora.com.in")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
    create_test_env_file()
    create_test_database_script()
    create_deployment_script()
    create_nginx_config()
    create_test_checklist()
    
    print("\n" + "=" * 50)
    print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø—Ä–æ–¥–∞–∫—à–Ω –ë–î:")
    print("   python3 backup_production_postgresql.py")
    print("\n2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –ë–î:")
    print("   ./setup_test_database.sh")
    print("\n3. –ó–∞–¥–µ–ø–ª–æ–∏—Ç—å –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω:")
    print("   ./deploy_test_domain.sh")
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ–∫-–ª–∏—Å—Ç:")
    print("   cat test_domain_checklist.json")

if __name__ == "__main__":
    main()
