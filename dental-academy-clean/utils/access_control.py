"""
–°–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ Mentora
–ë–ª–æ–∫–∏—Ä—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ "coming soon" —ç–∫—Ä–∞–Ω–∞–º–∏
"""

from functools import wraps
from flask import render_template, request, g, current_app
from flask_login import current_user
import logging

logger = logging.getLogger(__name__)

def coming_soon_required(feature_name, feature_description=None):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π —Å –∫—Ä–∞—Å–∏–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π coming soon
    
    Args:
        feature_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
        feature_description (str): –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    """
    def decorator(f):
        @wraps(f)
        def decorated_function(*args, **kwargs):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            if current_user.is_authenticated and getattr(current_user, 'is_admin', False):
                logger.info(f"üîì Admin access granted to {feature_name}")
                return f(*args, **kwargs)
            
            # –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ–º coming soon
            logger.info(f"üîí Blocking access to {feature_name} for user: {current_user.username if current_user.is_authenticated else 'anonymous'}")
            
            return render_template('coming_soon.html', 
                                 feature_name=feature_name,
                                 feature_description=feature_description,
                                 current_path=request.path,
                                 lang=g.get('lang', 'en'))
        return decorated_function
    return decorator

def block_blueprint_access(blueprint_name, feature_name, feature_description=None):
    """
    –ë–ª–æ–∫–∏—Ä—É–µ—Ç –≤–µ—Å—å blueprint —Ü–µ–ª–∏–∫–æ–º —Å –ø–æ–º–æ—â—å—é before_request
    
    Args:
        blueprint_name: –ò–º—è blueprint –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        feature_name: –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        feature_description: –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
    """
    def block_access():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if current_user.is_authenticated and getattr(current_user, 'is_admin', False):
            return None  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å
        
        # –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ–º coming soon
        logger.info(f"üîí Blocking blueprint {blueprint_name} - {feature_name}")
        
        return render_template('coming_soon.html', 
                             feature_name=feature_name,
                             feature_description=feature_description,
                             current_path=request.path,
                             lang=g.get('lang', 'en'))
    
    return block_access

def is_route_allowed(path):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ä—à—Ä—É—Ç—É
    
    Args:
        path (str): –ü—É—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        bool: True –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω, False –µ—Å–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
    """
    # –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    ALLOWED_ROUTES = [
        '/',
        '/auth/login',
        '/auth/register', 
        '/auth/logout',
        '/profile',
        '/community',
        '/forum',
        '/about',
        '/contact',
        '/privacy',
        '/terms',
        '/faq',
        '/big-info',
        '/daily-learning/knowledge-base',  # –†–∞–∑—Ä–µ—à–∞–µ–º –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
    ]
    
    # –°–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤
    BLOCKED_PREFIXES = [
        '/big-diagnostic',
        '/learning',
        '/lesson', 
        '/content',
        '/tests',
        '/testing',
        '/ai-assistant',
        '/virtual-patient',
        '/admin',  # –ê–¥–º–∏–Ω–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    if path in ALLOWED_ROUTES:
        return True
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å—ã
    for prefix in BLOCKED_PREFIXES:
        if path.startswith(prefix):
            return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã
    for allowed_prefix in ALLOWED_ROUTES:
        if path.startswith(allowed_prefix):
            return True
    
    # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–∑—Ä–µ—à–∞–µ–º (–¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏ —Ç.–¥.)
    return True

def register_access_control(app):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    
    Args:
        app: Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    """
    logger.info("üîí Registering access control system...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–æ–≤
    @app.context_processor
    def inject_access_control():
        return {
            'is_route_allowed': is_route_allowed,
            'BLOCKED_FEATURES': [
                {
                    'name': '–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 
                    'description': '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –∑–Ω–∞–Ω–∏–π',
                    'icon': 'fas fa-brain',
                    'category': 'diagnostic_testing'
                },
                {
                    'name': '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ', 
                    'description': '–ú–æ–¥—É–ª–∏, —É—Ä–æ–∫–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç',
                    'icon': 'fas fa-book-open', 
                    'category': 'learning'
                },
                {
                    'name': '–¢–µ—Å—Ç—ã –∏ —ç–∫–∑–∞–º–µ–Ω—ã', 
                    'description': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º',
                    'icon': 'fas fa-clipboard-list',
                    'category': 'tests_exams'
                },
                {
                    'name': 'AI-–ø–æ–º–æ—â–Ω–∏–∫', 
                    'description': '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è –ø–æ–º–æ—â–∏ –≤ –æ–±—É—á–µ–Ω–∏–∏',
                    'icon': 'fas fa-robot',
                    'category': 'ai_assistant'
                },
                {
                    'name': '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã', 
                    'description': '–ü—Ä–∞–∫—Ç–∏–∫–∞ —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º–∏ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–º–∏ —Å–ª—É—á–∞—è–º–∏',
                    'icon': 'fas fa-user-md',
                    'category': 'virtual_patients'
                }
            ]
        }
    
    logger.info("‚úÖ Access control system registered successfully")