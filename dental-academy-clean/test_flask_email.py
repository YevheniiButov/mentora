#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ email —á–µ—Ä–µ–∑ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å–µ–º –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
"""

import os
import sys
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_flask_email():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É email —á–µ—Ä–µ–∑ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print("üß™ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ email —á–µ—Ä–µ–∑ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from app import app
        from models import User, db
        from utils.email_service import send_email_confirmation
        from werkzeug.security import generate_password_hash
        
        with app.app_context():
            print("‚úÖ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email
            print(f"\nüìß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ email:")
            print(f"MAIL_SERVER: {app.config.get('MAIL_SERVER')}")
            print(f"MAIL_PORT: {app.config.get('MAIL_PORT')}")
            print(f"MAIL_USE_TLS: {app.config.get('MAIL_USE_TLS')}")
            print(f"MAIL_USERNAME: {app.config.get('MAIL_USERNAME')}")
            print(f"MAIL_PASSWORD: {'SET' if app.config.get('MAIL_PASSWORD') else 'NOT SET'}")
            print(f"MAIL_SUPPRESS_SEND: {app.config.get('MAIL_SUPPRESS_SEND')}")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            test_email = 'test@example.com'
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            existing_user = User.query.filter_by(email=test_email).first()
            if existing_user:
                print(f"\nüë§ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {existing_user.email}")
                user = existing_user
            else:
                print(f"\nüë§ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {test_email}")
                user = User(
                    email=test_email,
                    first_name='Test',
                    last_name='User',
                    password_hash=generate_password_hash('testpassword'),
                    role='user',
                    email_confirmed=False,
                    email_confirmation_token='test-token-123',
                    email_confirmation_sent_at=datetime.utcnow()
                )
                db.session.add(user)
                db.session.commit()
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            print(f"\nüìß –û—Ç–ø—Ä–∞–≤–∫–∞ email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...")
            success = send_email_confirmation(user, 'test-token-123')
            
            if success:
                print("‚úÖ Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                return True
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Flask email: {str(e)}")
        import traceback
        print(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:\n{traceback.format_exc()}")
        return False

def test_direct_smtp():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º–æ–µ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"""
    print("\nüîß –ü—Ä—è–º–æ–π SMTP —Ç–µ—Å—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è")
    print("=" * 60)
    
    try:
        import smtplib
        from email.mime.text import MIMEText
        from email.mime.multipart import MIMEMultipart
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ .env
        smtp_server = 'smtp-relay.brevo.com'
        smtp_port = 587
        username = '96d92f001@smtp-brevo.com'
        password = 'JrbVFGpHhgynKMOQ'
        sender_email = 'noreply@mentora.com'
        
        print(f"–°–µ—Ä–≤–µ—Ä: {smtp_server}")
        print(f"–ü–æ—Ä—Ç: {smtp_port}")
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}")
        print(f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender_email}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        print("\nüîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É...")
        server = smtplib.SMTP(smtp_server, smtp_port)
        server.starttls()
        server.login(username, password)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SMTP!")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ
        msg = MIMEMultipart()
        msg['From'] = sender_email
        msg['To'] = 'xapstom@gmail.com'  # –í–∞—à email –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        msg['Subject'] = 'Mentora Flask Email Test'
        
        body = """
–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ email —á–µ—Ä–µ–∑ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

–ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, –∑–Ω–∞—á–∏—Ç:
‚úÖ SMTP —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
‚úÖ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–∏—Å—å–º–∞

–ù–∞—Å—Ç—Ä–æ–π–∫–∏:
- –°–µ—Ä–≤–µ—Ä: smtp-relay.brevo.com
- –ü–æ—Ä—Ç: 587
- TLS: –í–∫–ª—é—á–µ–Ω
- Flask: –†–∞–±–æ—Ç–∞–µ—Ç

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–°–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Mentora
        """
        
        msg.attach(MIMEText(body, 'plain', 'utf-8'))
        
        print("üìß –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞...")
        server.send_message(msg)
        print("‚úÖ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
        server.quit()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º SMTP —Ç–µ—Å—Ç–µ: {str(e)}")
        return False

def main():
    print("ü¶∑ Mentora Flask Email Test")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–µ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    smtp_success = test_direct_smtp()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    flask_success = test_flask_email()
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("=" * 60)
    print(f"–ü—Ä—è–º–æ–µ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: {'‚úÖ –£–°–ü–ï–®–ù–û' if smtp_success else '‚ùå –û–®–ò–ë–ö–ê'}")
    print(f"Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {'‚úÖ –£–°–ü–ï–®–ù–û' if flask_success else '‚ùå –û–®–ò–ë–ö–ê'}")
    
    if smtp_success and flask_success:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("Email –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    elif smtp_success and not flask_success:
        print("\n‚ö†Ô∏è –ü—Ä—è–º–æ–µ SMTP —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–∏—Å—å–º–∞.")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Flask-Mail –∏ –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º.")
    elif not smtp_success and flask_success:
        print("\n‚ö†Ô∏è Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ø—Ä—è–º–æ–µ SMTP –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.")
        print("–≠—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ, –Ω–æ –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç.")
    else:
        print("\n‚ùå –ù–∏ –æ–¥–∏–Ω —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª.")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.")

if __name__ == '__main__':
    main()
