#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

def diagnose_database_issue():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("1. üìã –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø:")
    print(f"   DATABASE_URL: {os.environ.get('DATABASE_URL', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê')}")
    print(f"   FLASK_ENV: {os.environ.get('FLASK_ENV', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê')}")
    print(f"   SQLALCHEMY_DATABASE_URI: {os.environ.get('SQLALCHEMY_DATABASE_URI', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê')}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    database_url = os.environ.get('DATABASE_URL', '')
    if 'sqlite' in database_url.lower():
        print("   ‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–ê SQLITE - —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π!")
    elif 'postgres' in database_url.lower():
        print("   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è PostgreSQL")
    else:
        print(f"   ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ë–î: {database_url}")
    
    print()
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    try:
        from app import app
        from models import db, User
        
        print("2. üîß –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø FLASK:")
        with app.app_context():
            print(f"   SQLALCHEMY_DATABASE_URI: {app.config.get('SQLALCHEMY_DATABASE_URI')}")
            print(f"   DATABASE_URL: {app.config.get('DATABASE_URL')}")
            print(f"   FLASK_ENV: {app.config.get('FLASK_ENV')}")
            print()
            
            # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            print("3. üìä –°–û–°–¢–û–Ø–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–•:")
            try:
                user_count = User.query.count()
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_count}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                recent_users = User.query.order_by(User.created_at.desc()).limit(5).all()
                print(f"   –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
                for user in recent_users:
                    print(f"     - {user.email} ({user.role}) - {user.created_at}")
                
            except Exception as db_error:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ë–î: {str(db_error)}")
            
            print()
            
            # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
            print("4. üóÇÔ∏è –¢–ê–ë–õ–ò–¶–´ –í –ë–ê–ó–ï –î–ê–ù–ù–´–•:")
            try:
                inspector = db.inspect(db.engine)
                tables = inspector.get_table_names()
                print(f"   –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
                for table in sorted(tables):
                    print(f"     - {table}")
            except Exception as table_error:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–∞–±–ª–∏—Ü: {str(table_error)}")
            
            print()
            
    except Exception as app_error:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {str(app_error)}")
    
    # 6. –ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω
    print("5. üîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ü–†–û–ë–õ–ï–ú–´:")
    print()
    
    if 'sqlite' in database_url.lower():
        print("   ‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è SQLite!")
        print("   SQLite —Ñ–∞–π–ª—ã –º–æ–≥—É—Ç:")
        print("     - –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –¥–µ–ø–ª–æ–µ")
        print("     - –ù–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –º–µ–∂–¥—É –¥–µ–ø–ª–æ—è–º–∏")
        print("     - –ë—ã—Ç—å –≤ .gitignore –∏ –Ω–µ –ø–æ–ø–∞–¥–∞—Ç—å –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
        print()
        print("   üîß –†–ï–®–ï–ù–ò–ï: –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ PostgreSQL")
        print("     1. –í Render —Å–æ–∑–¥–∞—Ç—å PostgreSQL –±–∞–∑—É")
        print("     2. –ü–æ–¥–∫–ª—é—á–∏—Ç—å –µ—ë –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é")
        print("     3. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ DATABASE_URL —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ PostgreSQL")
    
    elif not database_url:
        print("   ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
        print("   üîß –†–ï–®–ï–ù–ò–ï: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é DATABASE_URL")
    
    elif 'postgres' in database_url.lower():
        print("   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("   üîç –î—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("     - –°–∫—Ä–∏–ø—Ç—ã –¥–µ–ø–ª–æ—è –æ—á–∏—â–∞—é—Ç –¥–∞–Ω–Ω—ã–µ")
        print("     - –ü—Ä–æ–±–ª–µ–º—ã —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏")
        print("     - –û—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    print()
    print("6. üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ Render")
    print("   2. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è PostgreSQL")
    print("   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –¥–µ–ø–ª–æ—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫")
    print("   4. –î–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ")
    
    print()
    print("=" * 60)
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    diagnose_database_issue()
