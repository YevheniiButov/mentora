#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ is_deleted
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç is_deleted = false –¥–ª—è –≤—Å–µ—Ö NULL –∑–Ω–∞—á–µ–Ω–∏–π
"""

import os
import psycopg2
from urllib.parse import urlparse

def get_production_db_connection():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ DATABASE_URL"""
    try:
        database_url = os.environ.get('DATABASE_URL')
        
        if not database_url:
            print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
            return None
        
        print(f"üîó –ò—Å–ø–æ–ª—å–∑—É–µ–º DATABASE_URL: {database_url[:50]}...")
        
        conn = psycopg2.connect(database_url, sslmode='require')
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return conn
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def fix_is_deleted_filter(conn):
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä is_deleted"""
    cursor = conn.cursor()
    
    print("\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –§–ò–õ–¨–¢–†–ê is_deleted")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print("\nüìä –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:")
    
    cursor.execute("""
        SELECT COUNT(*) 
        FROM forum_posts 
        WHERE is_deleted IS NULL
    """)
    
    null_count = cursor.fetchone()[0]
    print(f"   –ü–æ—Å—Ç–æ–≤ —Å is_deleted = NULL: {null_count}")
    
    cursor.execute("""
        SELECT COUNT(*) 
        FROM forum_posts 
        WHERE is_deleted = true
    """)
    
    deleted_count = cursor.fetchone()[0]
    print(f"   –ü–æ—Å—Ç–æ–≤ —Å is_deleted = true: {deleted_count}")
    
    cursor.execute("""
        SELECT COUNT(*) 
        FROM forum_posts 
        WHERE is_deleted = false
    """)
    
    active_count = cursor.fetchone()[0]
    print(f"   –ü–æ—Å—Ç–æ–≤ —Å is_deleted = false: {active_count}")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º is_deleted = false –¥–ª—è –≤—Å–µ—Ö NULL –∑–Ω–∞—á–µ–Ω–∏–π
    print("\nüîß –£–°–¢–ê–ù–û–í–ö–ê is_deleted = false –î–õ–Ø NULL –ó–ù–ê–ß–ï–ù–ò–ô...")
    
    cursor.execute("""
        UPDATE forum_posts 
        SET is_deleted = false 
        WHERE is_deleted IS NULL
    """)
    
    updated_count = cursor.rowcount
    print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {updated_count}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    
    cursor.execute("""
        SELECT COUNT(*) 
        FROM forum_posts 
        WHERE is_deleted IS NULL
    """)
    
    null_count_after = cursor.fetchone()[0]
    print(f"   –ü–æ—Å—Ç–æ–≤ —Å is_deleted = NULL: {null_count_after}")
    
    cursor.execute("""
        SELECT COUNT(*) 
        FROM forum_posts 
        WHERE is_deleted = true
    """)
    
    deleted_count_after = cursor.fetchone()[0]
    print(f"   –ü–æ—Å—Ç–æ–≤ —Å is_deleted = true: {deleted_count_after}")
    
    cursor.execute("""
        SELECT COUNT(*) 
        FROM forum_posts 
        WHERE is_deleted = false
    """)
    
    active_count_after = cursor.fetchone()[0]
    print(f"   –ü–æ—Å—Ç–æ–≤ —Å is_deleted = false: {active_count_after}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∑–∞–ø—Ä–æ—Å
    print("\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –ó–ê–ü–†–û–°–ê:")
    print("-" * 30)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–º—É ID 40
    topic_id = 40
    print(f"\nüìã –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–º—É ID {topic_id}:")
    
    cursor.execute("""
        SELECT COUNT(*) 
        FROM forum_posts 
        WHERE topic_id = %s AND is_deleted = false
    """, (topic_id,))
    
    api_posts_count = cursor.fetchone()[0]
    print(f"   –ü–æ—Å—Ç–æ–≤ –≤ API –∑–∞–ø—Ä–æ—Å–µ: {api_posts_count}")
    
    if api_posts_count > 0:
        cursor.execute("""
            SELECT fp.id, fp.content, fp.created_at,
                   u.first_name, u.last_name
            FROM forum_posts fp
            LEFT JOIN "user" u ON fp.author_id = u.id
            WHERE fp.topic_id = %s AND fp.is_deleted = false
            ORDER BY fp.created_at
            LIMIT 3
        """, (topic_id,))
        
        sample_posts = cursor.fetchall()
        
        print(f"   –ü—Ä–∏–º–µ—Ä—ã –ø–æ—Å—Ç–æ–≤:")
        for post in sample_posts:
            post_id, content, created_at, first_name, last_name = post
            author_name = f"{first_name} {last_name}".strip() if first_name and last_name else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            print(f"      üìù –ü–æ—Å—Ç ID {post_id}: {content[:30]}... (–ê–≤—Ç–æ—Ä: {author_name})")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–µ–º—ã
    print(f"\nüìã –ü–û–°–¢–´ –ü–û –í–°–ï–ú –¢–ï–ú–ê–ú:")
    cursor.execute("SELECT id, title FROM forum_topics ORDER BY id")
    topics = cursor.fetchall()
    
    for topic_id, title in topics:
        cursor.execute("""
            SELECT COUNT(*) 
            FROM forum_posts 
            WHERE topic_id = %s AND is_deleted = false
        """, (topic_id,))
        
        post_count = cursor.fetchone()[0]
        print(f"   üìã –¢–µ–º–∞ ID {topic_id}: {post_count} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤")
    
    conn.commit()
    print("\n‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –§–ò–õ–¨–¢–†–ê is_deleted –§–û–†–£–ú–ê")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not os.environ.get('DATABASE_URL'):
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return False
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = get_production_db_connection()
    if not conn:
        return False
    
    try:
        fix_is_deleted_filter(conn)
        
        print("\nüéâ –ì–û–¢–û–í–û! –¢–µ–ø–µ—Ä—å —Ñ–æ—Ä—É–º –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ:")
        print("   ‚úÖ –í—Å–µ NULL –∑–Ω–∞—á–µ–Ω–∏—è is_deleted —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ false")
        print("   ‚úÖ API –∑–∞–ø—Ä–æ—Å—ã —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –ø–æ—Å—Ç—ã")
        print("   ‚úÖ –ü–æ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")
        print("\nüì± –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ñ–æ—Ä—É–º–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        conn.rollback()
        return False
        
    finally:
        conn.close()
        print("\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.")

if __name__ == "__main__":
    main()
