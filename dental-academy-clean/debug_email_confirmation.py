#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ send_email_confirmation
–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
"""

import os
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
os.environ['FLASK_ENV'] = 'production'
os.environ['MAIL_SUPPRESS_SEND'] = 'false'
os.environ['MAIL_SERVER'] = 'smtp-relay.brevo.com'
os.environ['MAIL_PORT'] = '587'
os.environ['MAIL_USE_TLS'] = 'True'
os.environ['MAIL_USERNAME'] = '96d92f002@smtp-brevo.com'
os.environ['MAIL_PASSWORD'] = 'AdHL3pP0rkRt1S8N'
os.environ['MAIL_DEFAULT_SENDER'] = 'Mentora <noreply@mentora.com.in>'

try:
    from app import app
    from extensions import db, mail
    from models import User
    from utils.email_service import send_email_confirmation
    from flask_mail import Message
    
    def test_direct_mail():
        """–¢–µ—Å—Ç 1: –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ Flask-Mail (–∫–∞–∫ –≤ test-email)"""
        print("üß™ –¢–µ—Å—Ç 1: –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (–∫–∞–∫ –Ω–∞ test-email —Å—Ç—Ä–∞–Ω–∏—Ü–µ)")
        print("-" * 60)
        
        with app.app_context():
            try:
                msg = Message(
                    subject='ü¶∑ Direct Test Email',
                    recipients=['xapstom@gmail.com'],
                    sender=app.config['MAIL_DEFAULT_SENDER']
                )
                
                msg.body = "–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç email —á–µ—Ä–µ–∑ Flask-Mail"
                msg.html = "<h1>–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç email —á–µ—Ä–µ–∑ Flask-Mail</h1>"
                
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: OK")
                print(f"üìß –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {msg.sender}")
                print(f"üì® –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {msg.recipients}")
                
                mail.send(msg)
                print("‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞!")
                return True
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
                return False
    
    def test_email_confirmation():
        """–¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ send_email_confirmation"""
        print("\nüß™ –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ send_email_confirmation")
        print("-" * 60)
        
        with app.app_context():
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            test_user = User(
                email='test.confirmation@example.com',
                first_name='Test',
                last_name='Confirmation'
            )
            test_user.id = 999  # –§–µ–π–∫–æ–≤—ã–π ID –¥–ª—è —Ç–µ—Å—Ç–∞
            
            test_token = 'test-confirmation-token-123'
            
            print(f"üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.first_name} {test_user.last_name}")
            print(f"üìß Email: {test_user.email}")
            print(f"üîë –¢–æ–∫–µ–Ω: {test_token}")
            
            try:
                result = send_email_confirmation(test_user, test_token)
                
                if result:
                    print("‚úÖ send_email_confirmation –≤–µ—Ä–Ω—É–ª True")
                    return True
                else:
                    print("‚ùå send_email_confirmation –≤–µ—Ä–Ω—É–ª False")
                    return False
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ send_email_confirmation: {e}")
                import traceback
                print(f"üìã –¢—Ä–µ–π—Å–±–µ–∫: {traceback.format_exc()}")
                return False
    
    def check_config_differences():
        """–¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–∏—è –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        print("\nüß™ –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        print("-" * 60)
        
        with app.app_context():
            config_items = [
                'MAIL_SERVER',
                'MAIL_PORT', 
                'MAIL_USE_TLS',
                'MAIL_USE_SSL',
                'MAIL_USERNAME',
                'MAIL_PASSWORD',
                'MAIL_DEFAULT_SENDER',
                'MAIL_SUPPRESS_SEND',
                'FLASK_ENV',
                'BASE_URL'
            ]
            
            print("üìã –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
            for item in config_items:
                value = app.config.get(item)
                if item == 'MAIL_PASSWORD':
                    value = '***' if value else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û'
                print(f"   {item}: {value}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
            print("\nüîç –ê–Ω–∞–ª–∏–∑ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º:")
            
            suppress = app.config.get('MAIL_SUPPRESS_SEND')
            if suppress:
                print(f"‚ö†Ô∏è MAIL_SUPPRESS_SEND = {suppress} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å False)")
            else:
                print(f"‚úÖ MAIL_SUPPRESS_SEND = {suppress}")
            
            sender = app.config.get('MAIL_DEFAULT_SENDER')
            if sender and 'mentora.com.in' in sender:
                print(f"‚úÖ MAIL_DEFAULT_SENDER –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–æ–º–µ–Ω")
            else:
                print(f"‚ö†Ô∏è MAIL_DEFAULT_SENDER: {sender}")
            
            base_url = app.config.get('BASE_URL')
            print(f"üåê BASE_URL: {base_url}")
    
    def test_template_rendering():
        """–¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–æ–≤"""
        print("\nüß™ –¢–µ—Å—Ç 4: –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ email —à–∞–±–ª–æ–Ω–æ–≤")
        print("-" * 60)
        
        with app.app_context():
            from flask import render_template
            
            test_user = User(
                email='test@example.com',
                first_name='Test',
                last_name='User'
            )
            test_user.id = 1
            
            confirmation_url = 'https://mentora.com.in/auth/confirm-email/test-token'
            unsubscribe_url = 'https://mentora.com.in/auth/unsubscribe/1'
            privacy_policy_url = 'https://mentora.com.in/privacy'
            
            try:
                html_content = render_template('emails/confirm_email.html',
                                             user=test_user,
                                             confirmation_url=confirmation_url,
                                             unsubscribe_url=unsubscribe_url,
                                             privacy_policy_url=privacy_policy_url)
                print(f"‚úÖ HTML —à–∞–±–ª–æ–Ω: {len(html_content)} —Å–∏–º–≤–æ–ª–æ–≤")
                
                text_content = render_template('emails/confirm_email.txt',
                                             user=test_user,
                                             confirmation_url=confirmation_url,
                                             unsubscribe_url=unsubscribe_url,
                                             privacy_policy_url=privacy_policy_url)
                print(f"‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω: {len(text_content)} —Å–∏–º–≤–æ–ª–æ–≤")
                return True
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–æ–≤: {e}")
                return False
    
    def run_comprehensive_test():
        """–ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç"""
        print("ü¶∑ Mentora Email Confirmation Diagnosis")
        print("=" * 60)
        print("–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç–∞—é—â—É—é test-email —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π")
        print()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
        test1_result = test_direct_mail()
        test2_result = test_email_confirmation()
        test4_result = test_template_rendering()
        
        check_config_differences()
        
        print("\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–†–ê–í–ù–ï–ù–ò–Ø:")
        print("=" * 40)
        print(f"‚úÖ –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (test-email): {'–†–ê–ë–û–¢–ê–ï–¢' if test1_result else '–ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
        print(f"{'‚úÖ' if test2_result else '‚ùå'} send_email_confirmation: {'–†–ê–ë–û–¢–ê–ï–¢' if test2_result else '–ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
        print(f"‚úÖ –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–æ–≤: {'–†–ê–ë–û–¢–ê–ï–¢' if test4_result else '–ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
        
        if test1_result and not test2_result:
            print("\nüéØ –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê!")
            print("üìß –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ send_email_confirmation –ù–ï –†–ê–ë–û–¢–ê–ï–¢")
            print("\nüîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("1. –û—à–∏–±–∫–∞ –≤ –ª–æ–≥–∏–∫–µ send_email_confirmation")
            print("2. –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º email —à–∞–±–ª–æ–Ω–æ–≤")
            print("3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π")
            print("4. –ü—Ä–æ–±–ª–µ–º–∞ —Å URL –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π")
        elif test1_result and test2_result:
            print("\nüéâ –û–ë–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢!")
            print("üìß –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
        
        return test1_result, test2_result
    
    if __name__ == '__main__':
        run_comprehensive_test()

except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("üîç –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
except Exception as e:
    print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    print(f"üìã –¢—Ä–µ–π—Å–±–µ–∫: {traceback.format_exc()}")
