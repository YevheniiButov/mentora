#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä—É–º–∞
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø–æ—Å—Ç–æ–≤
"""

import os
import psycopg2
from urllib.parse import urlparse

def get_production_db_connection():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ DATABASE_URL"""
    try:
        database_url = os.environ.get('DATABASE_URL')
        
        if not database_url:
            print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
            return None
        
        print(f"üîó –ò—Å–ø–æ–ª—å–∑—É–µ–º DATABASE_URL: {database_url[:50]}...")
        
        conn = psycopg2.connect(database_url, sslmode='require')
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return conn
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def fix_forum_data(conn):
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä—É–º–∞"""
    cursor = conn.cursor()
    
    print("\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–• –§–û–†–£–ú–ê")
    print("=" * 50)
    
    # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\nüë• –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    user_fixes = [
        (57, 'Liliam', 'Silva'),  # liliam@example.com
        (62, 'Shiva', 'Mohammadi'),  # shiva@example.com
        (65, 'Rinsy', 'George'),  # rinsy@example.com
        (67, 'Rami', 'Al-Ali'),  # rami@example.com
    ]
    
    for user_id, first_name, last_name in user_fixes:
        cursor.execute('UPDATE "user" SET first_name = %s, last_name = %s WHERE id = %s', 
                      (first_name, last_name, user_id))
        print(f"   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID {user_id}: {first_name} {last_name}")
    
    # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º replies_count –¥–ª—è –≤—Å–µ—Ö —Ç–µ–º
    print("\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ replies_count –¥–ª—è —Ç–µ–º...")
    
    cursor.execute("""
        UPDATE forum_topics 
        SET replies_count = (
            SELECT COUNT(*) - 1 
            FROM forum_posts 
            WHERE forum_posts.topic_id = forum_topics.id
        )
        WHERE replies_count IS NULL OR replies_count = 0
    """)
    
    updated_topics = cursor.rowcount
    print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–µ–º: {updated_topics}")
    
    # 3. –û–±–Ω–æ–≤–ª—è–µ–º last_reply_at –∏ last_reply_by
    print("\nüïê –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ last_reply_at –∏ last_reply_by...")
    
    cursor.execute("""
        UPDATE forum_topics 
        SET 
            last_reply_at = (
                SELECT MAX(created_at) 
                FROM forum_posts 
                WHERE forum_posts.topic_id = forum_topics.id
            ),
            last_reply_by = (
                SELECT author_id 
                FROM forum_posts 
                WHERE forum_posts.topic_id = forum_topics.id 
                ORDER BY created_at DESC 
                LIMIT 1
            )
        WHERE replies_count > 0
    """)
    
    updated_replies = cursor.rowcount
    print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–µ–º —Å –æ—Ç–≤–µ—Ç–∞–º–∏: {updated_replies}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\nüìä –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê:")
    print("-" * 50)
    
    cursor.execute("""
        SELECT ft.id, ft.title, ft.replies_count, ft.last_reply_at, ft.last_reply_by,
               u.first_name, u.last_name
        FROM forum_topics ft
        LEFT JOIN "user" u ON ft.last_reply_by = u.id
        ORDER BY ft.id
    """)
    
    topics = cursor.fetchall()
    
    for topic in topics:
        topic_id, title, replies_count, last_reply_at, last_reply_by, first_name, last_name = topic
        last_reply_name = f"{first_name} {last_name}".strip() if first_name and last_name else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        
        print(f"   üìã –¢–µ–º–∞ ID {topic_id}:")
        print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {title[:50]}...")
        print(f"      –û—Ç–≤–µ—Ç—ã: {replies_count}")
        print(f"      –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç: {last_reply_at} –æ—Ç {last_reply_name}")
        print()
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç—ã –ø–æ —Ç–µ–º–∞–º
    print("\nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å—Ç–æ–≤ –ø–æ —Ç–µ–º–∞–º:")
    print("-" * 30)
    
    cursor.execute("""
        SELECT ft.id, ft.title, COUNT(fp.id) as post_count
        FROM forum_topics ft
        LEFT JOIN forum_posts fp ON ft.id = fp.topic_id
        GROUP BY ft.id, ft.title
        ORDER BY ft.id
    """)
    
    topic_stats = cursor.fetchall()
    
    for topic_id, title, post_count in topic_stats:
        print(f"   üìã –¢–µ–º–∞ ID {topic_id}: {post_count} –ø–æ—Å—Ç–æ–≤")
    
    conn.commit()
    print("\n‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–• –§–û–†–£–ú–ê")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not os.environ.get('DATABASE_URL'):
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return False
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = get_production_db_connection()
    if not conn:
        return False
    
    try:
        fix_forum_data(conn)
        
        print("\nüéâ –ì–û–¢–û–í–û! –¢–µ–ø–µ—Ä—å —Ñ–æ—Ä—É–º –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ:")
        print("   ‚úÖ replies_count –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –≤—Å–µ—Ö —Ç–µ–º")
        print("   ‚úÖ last_reply_at –∏ last_reply_by —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print("   ‚úÖ –ò–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
        print("   ‚úÖ –ü–æ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")
        print("\nüì± –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ñ–æ—Ä—É–º–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        conn.rollback()
        return False
        
    finally:
        conn.close()
        print("\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.")

if __name__ == "__main__":
    main()
