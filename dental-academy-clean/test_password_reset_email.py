#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ email —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º.
"""

import os
import sys
from datetime import datetime, timezone

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import app
from models import db, User

def test_password_reset_email():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É email —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º"""
    
    with app.app_context():
        try:
            print("üìß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ email —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º...")
            
            # –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            user = User.query.first()
            
            if not user:
                print("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                return False
            
            print(f"üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {user.email} ({user.first_name} {user.last_name})")
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
            import secrets
            import string
            temp_password = ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(12))
            
            print(f"üîë –¢–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: {temp_password}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email
            from utils.email_service import send_admin_password_reset_email
            
            print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email...")
            email_sent = send_admin_password_reset_email(user, temp_password, 'en')
            
            if email_sent:
                print("‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                print(f"üìß –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {user.email}")
                print(f"üîë –ü–∞—Ä–æ–ª—å –≤ –ø–∏—Å—å–º–µ: {temp_password}")
                print(f"üåê –Ø–∑—ã–∫: English")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email")
            
            return email_sent
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}")
            import traceback
            traceback.print_exc()
            return False

def test_template_rendering():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–æ–≤ email"""
    
    with app.app_context():
        try:
            print("üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–æ–≤...")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            test_user = type('User', (), {
                'first_name': '–¢–µ—Å—Ç',
                'last_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                'email': 'test@example.com'
            })()
            
            temp_password = 'TestPassword123'
            login_url = 'https://bigmentor.nl/auth/login'
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º HTML —à–∞–±–ª–æ–Ω
            try:
                from flask import render_template_string
                with open('templates/emails/password_reset_admin_en.html', 'r', encoding='utf-8') as f:
                    html_template = f.read()
                html_body = render_template_string(html_template, 
                                                 user=test_user, 
                                                 temp_password=temp_password,
                                                 login_url=login_url)
                print("‚úÖ HTML —à–∞–±–ª–æ–Ω —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ HTML —à–∞–±–ª–æ–Ω–∞: {str(e)}")
                return False
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω
            try:
                with open('templates/emails/password_reset_admin_en.txt', 'r', encoding='utf-8') as f:
                    text_template = f.read()
                text_body = render_template_string(text_template,
                                                 user=test_user,
                                                 temp_password=temp_password,
                                                 login_url=login_url)
                print("‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞: {str(e)}")
                return False
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤: {str(e)}")
            return False

if __name__ == '__main__':
    import sys
    
    if len(sys.argv) > 1 and sys.argv[1] == '--template':
        success = test_template_rendering()
    else:
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ email —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º")
        print("=" * 50)
        print()
        
        # –°–Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω—ã
        print("1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤...")
        template_success = test_template_rendering()
        
        if template_success:
            print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ email...")
            email_success = test_password_reset_email()
            
            if email_success:
                print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
                print("üìß Email —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            else:
                print("\n‚ùå –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ email –Ω–µ –ø—Ä–æ—à–µ–ª")
        else:
            print("\n‚ùå –¢–µ—Å—Ç —à–∞–±–ª–æ–Ω–æ–≤ –Ω–µ –ø—Ä–æ—à–µ–ª")
