#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è 90 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤ –≤ –æ–¥–∏–Ω JSON —Ñ–∞–π–ª
"""

import json
import os
from pathlib import Path

def load_questions_from_file(file_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            questions = json.load(f)
        return questions
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {file_path}: {e}")
        return []

def combine_all_questions():
    """–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ 90 –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –æ–¥–∏–Ω JSON —Ñ–∞–π–ª"""
    domains_dir = Path("scripts/new_domains")
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
    domain_files = [
        "communication_questions.json",
        "practical_theory_questions.json", 
        "research_method_questions.json",
        "statistics_questions.json",
        "treatment_planning_questions.json"
    ]
    
    all_questions = []
    total_questions = 0
    
    print("üîÑ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ 90 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤...")
    
    for filename in domain_files:
        file_path = domains_dir / filename
        if file_path.exists():
            questions = load_questions_from_file(file_path)
            domain_name = filename.replace("_questions.json", "").replace("_", " ").title()
            
            print(f"‚úÖ {domain_name}: {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤")
            all_questions.extend(questions)
            total_questions += len(questions)
        else:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {filename}")
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ ID
    all_questions.sort(key=lambda x: x.get('id', 0))
    
    # –°–æ–∑–¥–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π JSON
    output_data = {
        "metadata": {
            "version": "1.0",
            "total_questions": total_questions,
            "domains_count": len(domain_files),
            "created_date": "2025-01-27",
            "description": "90 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤ –¥–ª—è IRT —Å–∏—Å—Ç–µ–º—ã",
            "source_files": domain_files
        },
        "questions": all_questions
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    output_file = "90_questions_combined.json"
    with open(output_file, 'w', encoding='utf-8') as f:
        json.dump(output_data, f, ensure_ascii=False, indent=2)
    
    print(f"\nüéØ –ò–¢–û–ì–û: {total_questions} –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–æ")
    print(f"üìÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤: {output_file}")
    
    return output_file, total_questions

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –û–ë–™–ï–î–ò–ù–ï–ù–ò–ï 90 –í–û–ü–†–û–°–û–í –í JSON")
    print("=" * 40)
    
    output_file, total = combine_all_questions()
    
    if total > 0:
        print(f"\n‚úÖ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù JSON –§–ê–ô–õ:")
        print(f"   üìÑ –§–∞–π–ª: {output_file}")
        print(f"   üìä –í–æ–ø—Ä–æ—Å–æ–≤: {total}")
        print(f"   üéØ –ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ IRT —Å–∏—Å—Ç–µ–º–µ")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        file_size = os.path.getsize(output_file)
        print(f"   üìè –†–∞–∑–º–µ—Ä: {file_size:,} –±–∞–π—Ç")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        print(f"\nüìã –°–¢–†–£–ö–¢–£–†–ê –§–ê–ô–õ–ê:")
        print(f"   ‚îú‚îÄ‚îÄ metadata (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ)")
        print(f"   ‚îî‚îÄ‚îÄ questions (–º–∞—Å—Å–∏–≤ –∏–∑ {total} –≤–æ–ø—Ä–æ—Å–æ–≤)")
        
        print(f"\nüéØ –§–∞–π–ª –≥–æ—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ IRT —Å–∏—Å—Ç–µ–º–µ!")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã")

if __name__ == "__main__":
    main()
