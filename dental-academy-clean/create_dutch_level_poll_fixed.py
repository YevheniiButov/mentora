#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–º—ã-–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –æ —É—Ä–æ–≤–Ω—è—Ö –Ω–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
–†–∞–±–æ—Ç–∞–µ—Ç —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏ —Ñ–æ—Ä—É–º–∞ –ë–ï–ó –∫–æ–ª–æ–Ω–∫–∏ is_verified
"""

import os
import sys
import psycopg2
from datetime import datetime, timezone
import hashlib

def create_dutch_level_poll():
    """–°–æ–∑–¥–∞—Ç—å —Ç–µ–º—É —Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º –æ —É—Ä–æ–≤–Ω—è—Ö –Ω–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–æ–≥–æ"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    DATABASE_URL = os.getenv('DATABASE_URL')
    if not DATABASE_URL:
        print("‚ùå DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return False
    
    try:
        conn = psycopg2.connect(DATABASE_URL)
        cur = conn.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–º—ã –æ—Ç –∏–º–µ–Ω–∏ administrator
        print("\nüìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–º—ã-–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è...")
        
        # –ü–æ–ª—É—á–∞–µ–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
        admin_id = get_or_create_admin(cur)
        
        # –ü–æ–ª—É—á–∞–µ–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "Collega Chat"
        category_id = get_collega_chat_category(cur)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ–º—É —Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ
        poll_content = '''Hallo allemaal! üá≥üá±

Ik ben benieuwd op welk niveau iedereen Nederlands spreekt. Dit helpt ons om elkaar beter te begrijpen en eventueel studiepartners te vinden.

**üó≥Ô∏è POLL: Op welk niveau Nederlands spreek je?**

üìä **Huidige resultaten (62 stemmen):**
‚Ä¢ **A1 - Beginner**: 3 stemmen (5%)
‚Ä¢ **A2 - Elementary**: 10 stemmen (16%) 
‚Ä¢ **B1 - Intermediate**: 23 stemmen (37%) ‚≠ê
‚Ä¢ **B2 - Upper Intermediate**: 11 stemmen (18%)
‚Ä¢ **B2+ - Advanced Intermediate**: 8 stemmen (13%)
‚Ä¢ **C1 - Advanced**: 5 stemmen (8%)
‚Ä¢ **C2 - Proficiency**: 2 stemmen (3%)

---
Hello everyone! 

I'm curious about what level of Dutch everyone speaks. This will help us understand each other better and possibly find study partners.

**üó≥Ô∏è POLL: What level of Dutch do you speak?**

üìä **Current results (62 votes):**
‚Ä¢ **A1 - Beginner**: 3 votes (5%)
‚Ä¢ **A2 - Elementary**: 10 votes (16%) 
‚Ä¢ **B1 - Intermediate**: 23 votes (37%) ‚≠ê
‚Ä¢ **B2 - Upper Intermediate**: 11 votes (18%)
‚Ä¢ **B2+ - Advanced Intermediate**: 8 votes (13%)
‚Ä¢ **C1 - Advanced**: 5 votes (8%)
‚Ä¢ **C2 - Proficiency**: 2 votes (3%)

**B1 is the most popular level!** üéâ'''

        topic_data = {
            'title': 'Op welk niveau Nederlands spreek je? (Dutch Level Poll)',
            'content': poll_content,
            'category_id': category_id,
            'author_id': admin_id,
            'created_at': datetime.now(timezone.utc),
            'updated_at': datetime.now(timezone.utc),
            'views_count': 0,
            'replies_count': 0,
            'likes_count': 0,
            'last_reply_at': datetime.now(timezone.utc),
            'last_reply_by': admin_id
        }
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–º—É
        insert_query = """
        INSERT INTO forum_topics (
            title, content, category_id, author_id, created_at, updated_at,
            views_count, replies_count, likes_count, last_reply_at, last_reply_by
        ) VALUES (
            %(title)s, %(content)s, %(category_id)s, %(author_id)s, %(created_at)s, %(updated_at)s,
            %(views_count)s, %(replies_count)s, %(likes_count)s, %(last_reply_at)s, %(last_reply_by)s
        ) RETURNING id
        """
        
        cur.execute(insert_query, topic_data)
        topic_id = cur.fetchone()[0]
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–µ–º–∞ ID: {topic_id}")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –æ—Ç —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\nüí¨ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cur.execute("SELECT id FROM \"user\" WHERE email LIKE '%@example.com' LIMIT 10")
        users = cur.fetchall()
        
        if len(users) < 5:
            print(f"‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ({len(users)}), —Å–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö...")
            # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            for i in range(5 - len(users)):
                user_id = create_demo_user(cur, f"voter_{i+1}")
                users.append((user_id,))
        
        # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ –≥–æ–ª–ª–∞–Ω–¥—Å–∫–æ–º –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
        comments = [
            "Ik ben B1! Wie wil er samen oefenen? üòä",
            "A2 hier. Nederlands is moeilijk maar leuk! üá≥üá±",
            "B2+ here. Happy to help others practice! üí™",
            "C1 niveau. Ik kan jullie helpen met moeilijke grammatica! üìö",
            "A1 beginner. Dank je voor deze poll! üôè"
        ]
        
        for i, comment in enumerate(comments):
            if i < len(users):
                user_id = users[i][0]
                
                comment_data = {
                    'topic_id': topic_id,
                    'author_id': user_id,
                    'content': comment,
                    'created_at': datetime.now(timezone.utc),
                    'is_deleted': False
                }
                
                comment_query = """
                INSERT INTO forum_posts (
                    topic_id, author_id, content, created_at, is_deleted
                ) VALUES (
                    %(topic_id)s, %(author_id)s, %(content)s, %(created_at)s, %(is_deleted)s
                )
                """
                
                cur.execute(comment_query, comment_data)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment[:30]}...")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–º—ã
        cur.execute("""
            UPDATE forum_topics 
            SET replies_count = (SELECT COUNT(*) FROM forum_posts WHERE topic_id = %s AND is_deleted = false)
            WHERE id = %s
        """, (topic_id, topic_id))
        
        # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        print("\nüéâ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!")
        print(f"üìä –¢–µ–º–∞ ID: {topic_id}")
        print(f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}")
        print(f"üë• –í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ: 62")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        if conn:
            conn.rollback()
        return False
    finally:
        if conn:
            conn.close()

def get_or_create_admin(cur):
    """–ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    # –ò—â–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    cur.execute("SELECT id FROM \"user\" WHERE email = 'administrator@mentora.nl'")
    admin = cur.fetchone()
    
    if admin:
        return admin[0]
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ë–ï–ó is_verified
    admin_data = {
        'email': 'administrator@mentora.nl',
        'first_name': 'Admin',
        'last_name': 'Istrator',
        'password_hash': hashlib.sha256('admin123'.encode()).hexdigest(),
        'created_at': datetime.now(timezone.utc),
        'is_active': True
    }
    
    insert_query = """
    INSERT INTO \"user\" (email, first_name, last_name, password_hash, created_at, is_active)
    VALUES (%(email)s, %(first_name)s, %(last_name)s, %(password_hash)s, %(created_at)s, %(is_active)s)
    RETURNING id
    """
    
    cur.execute(insert_query, admin_data)
    admin_id = cur.fetchone()[0]
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ID: {admin_id}")
    return admin_id

def get_collega_chat_category(cur):
    """–ü–æ–ª—É—á–∏—Ç—å ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Collega Chat"""
    cur.execute("SELECT id FROM forum_categories WHERE name = 'Collega Chat'")
    category = cur.fetchone()
    
    if not category:
        raise Exception("–ö–∞—Ç–µ–≥–æ—Ä–∏—è 'Collega Chat' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
    
    return category[0]

def create_demo_user(cur, username):
    """–°–æ–∑–¥–∞—Ç—å –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –ë–ï–ó is_verified"""
    user_data = {
        'email': f'{username}@example.com',
        'first_name': username.title(),
        'last_name': 'Voter',
        'password_hash': hashlib.sha256('demo123'.encode()).hexdigest(),
        'created_at': datetime.now(timezone.utc),
        'is_active': True
    }
    
    insert_query = """
    INSERT INTO \"user\" (email, first_name, last_name, password_hash, created_at, is_active)
    VALUES (%(email)s, %(first_name)s, %(last_name)s, %(password_hash)s, %(created_at)s, %(is_active)s)
    RETURNING id
    """
    
    cur.execute(insert_query, user_data)
    return cur.fetchone()[0]

if __name__ == "__main__":
    print("üá≥üá± –°–û–ó–î–ê–ù–ò–ï –ì–û–õ–û–°–û–í–ê–ù–ò–Ø –û –ù–ò–î–ï–†–õ–ê–ù–î–°–ö–û–ú –Ø–ó–´–ö–ï (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)")
    print("=" * 70)
    
    success = create_dutch_level_poll()
    
    if success:
        print("\n‚úÖ –ì–û–¢–û–í–û! –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("üåê –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–æ–º—å—é–Ω–∏—Ç–∏ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    else:
        print("\n‚ùå –û–®–ò–ë–ö–ê! –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ")
        sys.exit(1)
