#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ email
–û–±–Ω–æ–≤–ª—è–µ—Ç .env —Ñ–∞–π–ª —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Brevo
"""

import os
import shutil
from datetime import datetime

def backup_env_file():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é .env —Ñ–∞–π–ª–∞"""
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    backup_name = f".env.backup_{timestamp}"
    shutil.copy2('.env', backup_name)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_name}")
    return backup_name

def update_env_file():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç .env —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Brevo"""
    print("üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ email –≤ .env —Ñ–∞–π–ª–µ...")
    
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π .env —Ñ–∞–π–ª
    with open('.env', 'r', encoding='utf-8') as f:
        lines = f.readlines()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email
    updated_lines = []
    for line in lines:
        if line.startswith('MAIL_SERVER='):
            updated_lines.append('MAIL_SERVER=smtp-relay.brevo.com\n')
        elif line.startswith('MAIL_USERNAME='):
            updated_lines.append('MAIL_USERNAME=96d92f001@smtp-brevo.com\n')
        elif line.startswith('MAIL_PASSWORD='):
            updated_lines.append('MAIL_PASSWORD=JrbVFGpHhgynKMOQ\n')
        elif line.startswith('# Email Configuration - MailerSend'):
            updated_lines.append('# Email Configuration - Brevo (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É)\n')
        else:
            updated_lines.append(line)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open('.env', 'w', encoding='utf-8') as f:
        f.writelines(updated_lines)
    
    print("‚úÖ .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Brevo")

def test_email_config():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ email...")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    from config import get_config
    config = get_config()
    
    print(f"MAIL_SERVER: {config.MAIL_SERVER}")
    print(f"MAIL_PORT: {config.MAIL_PORT}")
    print(f"MAIL_USE_TLS: {config.MAIL_USE_TLS}")
    print(f"MAIL_USERNAME: {config.MAIL_USERNAME}")
    print(f"MAIL_PASSWORD: {'SET' if config.MAIL_PASSWORD else 'NOT SET'}")
    print(f"MAIL_SUPPRESS_SEND: {config.MAIL_SUPPRESS_SEND}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É
    expected_settings = {
        'MAIL_SERVER': 'smtp-relay.brevo.com',
        'MAIL_PORT': 587,
        'MAIL_USE_TLS': True,
        'MAIL_USERNAME': '96d92f001@smtp-brevo.com'
    }
    
    all_correct = True
    for key, expected_value in expected_settings.items():
        actual_value = getattr(config, key)
        if actual_value != expected_value:
            print(f"‚ùå {key}: –æ–∂–∏–¥–∞–µ—Ç—Å—è {expected_value}, –ø–æ–ª—É—á–µ–Ω–æ {actual_value}")
            all_correct = False
        else:
            print(f"‚úÖ {key}: {actual_value}")
    
    if all_correct:
        print("\n‚úÖ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!")
        return True
    else:
        print("\n‚ùå –ù–∞–π–¥–µ–Ω—ã –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö email")
        return False

def main():
    print("ü¶∑ Mentora Email Configuration Fix")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_file = backup_env_file()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    update_env_file()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    success = test_email_config()
    
    if success:
        print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ email —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –ø–∏—Å–µ–º —á–µ—Ä–µ–∑ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
    else:
        print("\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.")
        print(f"–ú–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {backup_file}")

if __name__ == '__main__':
    main()
