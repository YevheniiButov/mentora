/**
 * Enhanced Template Loader
 * –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞–º–∏
 */

class TemplateLoader {
    constructor(editor, options = {}) {
        this.editor = editor;
        this.options = {
            cacheEnabled: true,
            cacheTimeout: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç
            showPreview: true,
            autoSave: true,
            ...options
        };
        
        this.templates = [];
        this.templateCache = new Map();
        this.currentTemplate = null;
        this.isLoading = false;
        
        this.init();
    }
    
    init() {
        console.log('üîß Template Loader initializing...');
        console.log('üîß Current language:', window.currentLang);
        
        // –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π UI
        this.createEnhancedUI();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this.setupEventListeners();
        
        console.log('‚úÖ Template Loader initialized');
        console.log('üîß Template selector after init:', document.querySelector('.template-selector'));
        console.log('üîß Template dropdown after init:', document.getElementById('template-dropdown'));
    }
    
    createEnhancedUI() {
        // –ò—â–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–≤–æ–¥–Ω–∏–∫"
        const openFileExplorerBtn = document.getElementById('open-file-explorer');
        console.log('üîß Existing open file explorer button found:', openFileExplorerBtn);
        
        // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –µ—ë
        if (!openFileExplorerBtn) {
            console.log('üîß Creating new file explorer button...');
            // –ò—â–µ–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏
            const buttonContainer = document.querySelector('.d-flex.gap-2.align-items-center');
            if (buttonContainer) {
                const newButton = document.createElement('button');
                newButton.className = 'btn btn-outline-primary';
                newButton.id = 'open-file-explorer';
                newButton.title = '–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–≤–æ–¥–Ω–∏–∫';
                newButton.innerHTML = '<i class="bi bi-folder2"></i> –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–≤–æ–¥–Ω–∏–∫';
                buttonContainer.appendChild(newButton);
                console.log('‚úÖ File explorer button created');
            }
        }
    }
    
    setupEventListeners() {
        console.log('üîß Setting up event listeners...');
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞
        document.addEventListener('click', (e) => {
            if (e.target.id === 'open-file-explorer' || e.target.closest('#open-file-explorer')) {
                console.log('üîß Opening File Explorer...');
                e.preventDefault();
                e.stopPropagation();
                
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º FileExplorer
                if (window.fileExplorer) {
                    window.fileExplorer.open();
                } else {
                    console.error('‚ùå FileExplorer instance not found');
                    alert('–§–∞–π–ª–æ–≤—ã–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
                }
            }
        });
        
        console.log('‚úÖ Event listeners set up with delegation');
    }
    
    enableButtons() {
        const buttons = ['undo-btn', 'redo-btn', 'preview-btn', 'save-btn'];
        buttons.forEach(btnId => {
            const btn = document.getElementById(btnId);
            if (btn) {
                btn.disabled = false;
            }
        });
    }
    
    updateStatus(type, text) {
        const statusDot = document.getElementById('status-dot');
        const statusText = document.getElementById('status-text');
        
        if (statusDot && statusText) {
            statusDot.className = `status-dot ${type}`;
            statusText.textContent = text;
        }
    }
    
    showNotification(message, type = 'info') {
        // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.innerHTML = `
            <i class="bi bi-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-triangle' : 'info-circle'}"></i>
            ${message}
        `;
        document.body.appendChild(notification);
        
        // –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            if (notification.parentElement) {
                notification.remove();
            }
        }, 3000);
    }
    
    getCSRFToken() {
        return document.querySelector('meta[name="csrf-token"]')?.content || '';
    }
    
    getTemplateIcon(category) {
        const icons = {
            'core': 'file-earmark-text',
            'learning': 'book',
            'virtual_patient': 'person-heart',
            'tests': 'question-circle',
            'includes': 'code-slash'
        };
        return icons[category] || 'file-earmark';
    }
    
    getCategoryName(category) {
        const names = {
            'core': '–û—Å–Ω–æ–≤–Ω—ã–µ',
            'learning': '–û–±—É—á–µ–Ω–∏–µ',
            'virtual_patient': '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç',
            'tests': '–¢–µ—Å—Ç—ã',
            'includes': '–í–∫–ª—é—á–µ–Ω–∏—è'
        };
        return names[category] || category;
    }
    
    destroy() {
        console.log('üîß Template Loader destroyed');
        // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º FileExplorer –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (window.fileExplorer) {
            window.fileExplorer.destroy();
            window.fileExplorer = null;
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.TemplateLoader = TemplateLoader;

// Auto-initialize
document.addEventListener('DOMContentLoaded', () => {
    console.log('üîß DOM loaded, waiting for editor and FileExplorer...');
    
    let attempts = 0;
    const maxAttempts = 20; // –ú–∞–∫—Å–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥ (20 * 500ms)
    
    // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∏ FileExplorer
    const checkEditor = setInterval(() => {
        attempts++;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ window.editor
        const editor = window.editor;
        const fileExplorer = typeof FileExplorer !== 'undefined';
        console.log(`üîß Checking for editor and FileExplorer... (attempt ${attempts}/${maxAttempts})`, { editor: !!editor, fileExplorer });
        
        if (editor && editor.getComponents && fileExplorer) {
            clearInterval(checkEditor);
            
            // –°–æ–∑–¥–∞–µ–º template loader
            window.templateLoader = new TemplateLoader(editor, {
                cacheEnabled: true,
                cacheTimeout: 5 * 60 * 1000,
                showPreview: true,
                autoSave: true
            });
            
            console.log('üîß Template Loader auto-initialized');
        } else if (attempts >= maxAttempts) {
            clearInterval(checkEditor);
            console.error('‚ùå Template Loader failed to initialize: editor or FileExplorer not found after maximum attempts');
        }
    }, 500);
}); 