#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ—Å—Ç—ã, –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω—ã–µ
"""

import os
import psycopg2
from urllib.parse import urlparse

def get_production_db_connection():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ DATABASE_URL"""
    try:
        database_url = os.environ.get('DATABASE_URL')
        
        if not database_url:
            print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
            return None
        
        print(f"üîó –ò—Å–ø–æ–ª—å–∑—É–µ–º DATABASE_URL: {database_url[:50]}...")
        
        conn = psycopg2.connect(database_url, sslmode='require')
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return conn
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def fix_deleted_posts(conn):
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã"""
    cursor = conn.cursor()
    
    print("\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–î–ê–õ–ï–ù–ù–´–• –ü–û–°–¢–û–í")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print("\nüìä –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:")
    
    cursor.execute("""
        SELECT COUNT(*) 
        FROM forum_posts 
        WHERE is_deleted = true
    """)
    
    deleted_count = cursor.fetchone()[0]
    print(f"   –£–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {deleted_count}")
    
    cursor.execute("""
        SELECT COUNT(*) 
        FROM forum_posts 
        WHERE is_deleted = false OR is_deleted IS NULL
    """)
    
    active_count = cursor.fetchone()[0]
    print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {active_count}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç—ã –ø–æ —Ç–µ–º–∞–º –î–û –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print("\nüìã –ü–û–°–¢–´ –ü–û –¢–ï–ú–ê–ú –î–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    cursor.execute("SELECT id, title FROM forum_topics ORDER BY id")
    topics = cursor.fetchall()
    
    for topic_id, title in topics:
        cursor.execute("""
            SELECT COUNT(*) 
            FROM forum_posts 
            WHERE topic_id = %s AND (is_deleted = false OR is_deleted IS NULL)
        """, (topic_id,))
        
        post_count = cursor.fetchone()[0]
        print(f"   üìã –¢–µ–º–∞ ID {topic_id}: {post_count} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —É–¥–∞–ª–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
    print("\nüîß –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –£–î–ê–õ–ï–ù–ù–´–• –ü–û–°–¢–û–í...")
    
    cursor.execute("""
        UPDATE forum_posts 
        SET is_deleted = false 
        WHERE is_deleted = true
    """)
    
    restored_count = cursor.rowcount
    print(f"   ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {restored_count}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç—ã –ø–æ —Ç–µ–º–∞–º –ü–û–°–õ–ï –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print("\nüìã –ü–û–°–¢–´ –ü–û –¢–ï–ú–ê–ú –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    
    for topic_id, title in topics:
        cursor.execute("""
            SELECT COUNT(*) 
            FROM forum_posts 
            WHERE topic_id = %s AND (is_deleted = false OR is_deleted IS NULL)
        """, (topic_id,))
        
        post_count = cursor.fetchone()[0]
        print(f"   üìã –¢–µ–º–∞ ID {topic_id}: {post_count} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º replies_count –¥–ª—è –≤—Å–µ—Ö —Ç–µ–º
    print("\nüìä –û–ë–ù–û–í–õ–ï–ù–ò–ï replies_count...")
    
    cursor.execute("""
        UPDATE forum_topics 
        SET replies_count = (
            SELECT COUNT(*) - 1 
            FROM forum_posts 
            WHERE forum_posts.topic_id = forum_topics.id 
            AND (forum_posts.is_deleted = false OR forum_posts.is_deleted IS NULL)
        )
    """)
    
    updated_topics = cursor.rowcount
    print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–µ–º: {updated_topics}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º last_reply_at –∏ last_reply_by
    print("\nüïê –û–ë–ù–û–í–õ–ï–ù–ò–ï last_reply_at –∏ last_reply_by...")
    
    cursor.execute("""
        UPDATE forum_topics 
        SET 
            last_reply_at = (
                SELECT MAX(created_at) 
                FROM forum_posts 
                WHERE forum_posts.topic_id = forum_topics.id 
                AND (forum_posts.is_deleted = false OR forum_posts.is_deleted IS NULL)
            ),
            last_reply_by = (
                SELECT author_id 
                FROM forum_posts 
                WHERE forum_posts.topic_id = forum_topics.id 
                AND (forum_posts.is_deleted = false OR forum_posts.is_deleted IS NULL)
                ORDER BY created_at DESC 
                LIMIT 1
            )
        WHERE replies_count > 0
    """)
    
    updated_replies = cursor.rowcount
    print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–µ–º —Å –æ—Ç–≤–µ—Ç–∞–º–∏: {updated_replies}")
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print("\nüìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:")
    print("-" * 30)
    
    cursor.execute("""
        SELECT ft.id, ft.title, ft.replies_count, ft.last_reply_at, ft.last_reply_by,
               u.first_name, u.last_name
        FROM forum_topics ft
        LEFT JOIN "user" u ON ft.last_reply_by = u.id
        ORDER BY ft.id
    """)
    
    topics_final = cursor.fetchall()
    
    for topic in topics_final:
        topic_id, title, replies_count, last_reply_at, last_reply_by, first_name, last_name = topic
        last_reply_name = f"{first_name} {last_name}".strip() if first_name and last_name else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        
        print(f"   üìã –¢–µ–º–∞ ID {topic_id}:")
        print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {title[:50]}...")
        print(f"      –û—Ç–≤–µ—Ç—ã: {replies_count}")
        print(f"      –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç: {last_reply_at} –æ—Ç {last_reply_name}")
        print()
    
    conn.commit()
    print("‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–î–ê–õ–ï–ù–ù–´–• –ü–û–°–¢–û–í –§–û–†–£–ú–ê")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not os.environ.get('DATABASE_URL'):
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return False
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = get_production_db_connection()
    if not conn:
        return False
    
    try:
        fix_deleted_posts(conn)
        
        print("\nüéâ –ì–û–¢–û–í–û! –¢–µ–ø–µ—Ä—å —Ñ–æ—Ä—É–º –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ:")
        print("   ‚úÖ –í—Å–µ —É–¥–∞–ª–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print("   ‚úÖ replies_count –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –≤—Å–µ—Ö —Ç–µ–º")
        print("   ‚úÖ last_reply_at –∏ last_reply_by —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print("   ‚úÖ –ü–æ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")
        print("\nüì± –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ñ–æ—Ä—É–º–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        conn.rollback()
        return False
        
    finally:
        conn.close()
        print("\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.")

if __name__ == "__main__":
    main()
