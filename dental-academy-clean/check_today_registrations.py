#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import app
from extensions import db
from models import User, RegistrationVisitor
from datetime import datetime, date, timedelta

def check_today_registrations():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è"""
    with app.app_context():
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
            today = date.today()
            print(f"üìÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ {today}")
            print("=" * 50)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è
            today_users = User.query.filter(
                db.func.date(User.created_at) == today
            ).all()
            
            print(f"üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –°–û–ó–î–ê–ù–ù–´–ï –°–ï–ì–û–î–ù–Ø: {len(today_users)}")
            for user in today_users:
                print(f"   - ID: {user.id}, Email: {user.email}, –°–æ–∑–¥–∞–Ω: {user.created_at}")
                print(f"     –ò–º—è: {user.first_name} {user.last_name}")
                print(f"     –ü—Ä–æ—Ñ–µ—Å—Å–∏—è: {user.profession}")
                print(f"     –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {user.registration_completed}")
                print()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
            today_visitors = RegistrationVisitor.query.filter(
                db.func.date(RegistrationVisitor.entry_time) == today
            ).all()
            
            print(f"üåê –ü–û–°–ï–¢–ò–¢–ï–õ–ò –°–¢–†–ê–ù–ò–¶ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –°–ï–ì–û–î–ù–Ø: {len(today_visitors)}")
            for visitor in today_visitors:
                print(f"   - ID: {visitor.id}, IP: {visitor.ip_address}")
                print(f"     –°—Ç—Ä–∞–Ω–∏—Ü–∞: {visitor.page_type}")
                print(f"     –í—Ä–µ–º—è: {visitor.entry_time}")
                print(f"     Email –≤–≤–µ–¥–µ–Ω: {visitor.email_entered}")
                print(f"     –ò–º—è –≤–≤–µ–¥–µ–Ω–æ: {visitor.first_name_entered} {visitor.last_name_entered}")
                print(f"     –§–æ—Ä–º–∞ –Ω–∞—á–∞—Ç–∞: {visitor.form_started}")
                print(f"     –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {visitor.registration_completed}")
                print()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
            week_ago = today - timedelta(days=7)
            week_users = User.query.filter(
                db.func.date(User.created_at) >= week_ago
            ).count()
            
            week_visitors = RegistrationVisitor.query.filter(
                db.func.date(RegistrationVisitor.entry_time) >= week_ago
            ).count()
            
            print(f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 7 –î–ù–ï–ô:")
            print(f"   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {week_users}")
            print(f"   - –ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏: {week_visitors}")
            print()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            total_users = User.query.count()
            total_visitors = RegistrationVisitor.query.count()
            
            print(f"üìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            print(f"   - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
            print(f"   - –í—Å–µ–≥–æ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π: {total_visitors}")
            print()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
            print(f"üïê –ü–û–°–õ–ï–î–ù–ò–ï 10 –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:")
            recent_users = User.query.order_by(User.created_at.desc()).limit(10).all()
            for user in recent_users:
                print(f"   - {user.created_at.strftime('%Y-%m-%d %H:%M')} | {user.email} | {user.first_name} {user.last_name}")
            
            print()
            print(f"üïê –ü–û–°–õ–ï–î–ù–ò–ï 10 –ü–û–°–ï–¢–ò–¢–ï–õ–ï–ô:")
            recent_visitors = RegistrationVisitor.query.order_by(RegistrationVisitor.entry_time.desc()).limit(10).all()
            for visitor in recent_visitors:
                print(f"   - {visitor.entry_time.strftime('%Y-%m-%d %H:%M')} | {visitor.ip_address} | {visitor.page_type}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
            import traceback
            traceback.print_exc()

if __name__ == "__main__":
    check_today_registrations()


