#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è mentora.com.in
"""
import os
import sys
from datetime import datetime, timezone

# –î–æ–±–∞–≤–∏—Ç—å –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from models import User

def create_test_user():
    """–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è mentora.com.in"""
    app = create_app()
    
    with app.app_context():
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        existing_user = User.query.filter_by(email='test@mentora.com').first()
        if existing_user:
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:")
            print(f"   Email: {existing_user.email}")
            print(f"   Username: {existing_user.username}")
            print(f"   ID: {existing_user.id}")
            print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {existing_user.is_active}")
            return existing_user
        
        # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user = User(
            email='test@mentora.com',
            username='mentora_test',
            first_name='Test',
            last_name='User',
            is_active=True,
            role='user',
            email_confirmed=True,
            registration_completed=True,
            profession='tandarts',  # —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥
            created_at=datetime.now(timezone.utc)
        )
        
        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å
        test_user.set_password('mentora123')
        
        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î
        db.session.add(test_user)
        db.session.commit()
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"   Email: {test_user.email}")
        print(f"   Username: {test_user.username}")
        print(f"   Password: mentora123")
        print(f"   ID: {test_user.id}")
        
        return test_user

def create_admin_user():
    """–°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è mentora.com.in"""
    app = create_app()
    
    with app.app_context():
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        existing_admin = User.query.filter_by(email='admin@mentora.com').first()
        if existing_admin:
            print(f"‚úÖ –ê–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:")
            print(f"   Email: {existing_admin.email}")
            print(f"   Username: {existing_admin.username}")
            print(f"   ID: {existing_admin.id}")
            print(f"   –†–æ–ª—å: {existing_admin.role}")
            return existing_admin
        
        # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        admin_user = User(
            email='admin@mentora.com',
            username='mentora_admin',
            first_name='Admin',
            last_name='User',
            is_active=True,
            role='admin',
            email_confirmed=True,
            registration_completed=True,
            profession='tandarts',
            created_at=datetime.now(timezone.utc)
        )
        
        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å
        admin_user.set_password('admin123')
        
        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î
        db.session.add(admin_user)
        db.session.commit()
        
        print("‚úÖ –ê–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"   Email: {admin_user.email}")
        print(f"   Username: {admin_user.username}")
        print(f"   Password: admin123")
        print(f"   ID: {admin_user.id}")
        print(f"   –†–æ–ª—å: {admin_user.role}")
        
        return admin_user

def list_all_users():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    app = create_app()
    
    with app.app_context():
        users = User.query.all()
        
        print(f"üìã –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: {len(users)}")
        print("=" * 60)
        
        for user in users:
            print(f"ID: {user.id}")
            print(f"Email: {user.email}")
            print(f"Username: {user.username}")
            print(f"Name: {user.first_name} {user.last_name}")
            print(f"Role: {user.role}")
            print(f"Active: {user.is_active}")
            print(f"Email Confirmed: {user.email_confirmed}")
            print(f"Created: {user.created_at}")
            print("-" * 40)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è mentora.com.in")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        test_user = create_test_user()
        
        print("\n2. –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        admin_user = create_admin_user()
        
        print("\n3. –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
        list_all_users()
        
        print("\n" + "=" * 60)
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥–æ—Ç–æ–≤—ã!")
        print("\nüîë –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
        print("   –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
        print("   - Email: test@mentora.com")
        print("   - Username: mentora_test")
        print("   - Password: mentora123")
        print("\n   –ê–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
        print("   - Email: admin@mentora.com")
        print("   - Username: mentora_admin")
        print("   - Password: admin123")
        
        print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ https://mentora.com.in")
        print("2. –í–≤–µ–¥–∏—Ç–µ –ª—é–±—ã–µ –∏–∑ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤—ã—à–µ")
        print("3. –ù–∞–∂–º–∏—Ç–µ 'Come In'")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
