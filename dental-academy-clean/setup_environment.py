#!/usr/bin/env python3
"""
üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Mentora
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞—Å—Ç .env —Ñ–∞–π–ª —Å –Ω–æ–≤—ã–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import os
import secrets
import string
from pathlib import Path

def generate_secret_key(length=50):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á"""
    alphabet = string.ascii_letters + string.digits + "!@#$%^&*"
    return ''.join(secrets.choice(alphabet) for _ in range(length))

def generate_mailersend_credentials():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è MailerSend"""
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π username
    username_id = ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(12))
    username = f"MS_{username_id}@mentora.mlsender.net"
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π password
    password_parts = [
        'mssp',
        ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(12)),
        ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(12)),
        ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(12))
    ]
    password = '.'.join(password_parts)
    
    return username, password

def create_env_file():
    """–°–æ–∑–¥–∞–µ—Ç .env —Ñ–∞–π–ª —Å –Ω–æ–≤—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    env_content = f"""# .env - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Mentora
# –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Ñ–∞–π–ª –ù–ï –¥–æ–ª–∂–µ–Ω –ø–æ–ø–∞–¥–∞—Ç—å –≤ Git!
# –°–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: {os.popen('date').read().strip()}

# Flask Configuration
SECRET_KEY={generate_secret_key()}
FLASK_ENV=development
FLASK_DEBUG=1

# Database Configuration
DATABASE_URL=sqlite:///dental_academy_clean.db

# Email Configuration - MailerSend (–ù–û–í–´–ï –ë–ï–ó–û–ü–ê–°–ù–´–ï –£–ß–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï)
MAIL_SERVER=smtp.mailersend.net
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USE_SSL=false
MAIL_USERNAME={generate_mailersend_credentials()[0]}
MAIL_PASSWORD={generate_mailersend_credentials()[1]}
MAIL_DEFAULT_SENDER=Mentora <noreply@mentora.com>

# Email Settings
MAIL_SUPPRESS_SEND=true
EMAIL_CONFIRMATION_SALT={generate_secret_key(32)}

# DigiD Configuration (–¥–ª—è production)
DIGID_ENTITY_ID=mentora-entity-id
DIGID_ACS_URL=https://mentora.com/digid/callback
DIGID_SLO_URL=https://mentora.com/digid/logout
DIGID_CERTIFICATE_PATH=/secure/path/to/certificate.pem
DIGID_PRIVATE_KEY_PATH=/secure/path/to/private-key.pem

# DigiD URLs
DIGID_BASE_URL=https://digid.nl
DIGID_AUTH_URL=https://digid.nl/auth
DIGID_LOGOUT_URL_EXTERNAL=https://digid.nl/logout
"""
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ .env —Ñ–∞–π–ª
    with open('.env', 'w', encoding='utf-8') as f:
        f.write(env_content)
    
    print("‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    return True

def check_gitignore():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ .env —Ñ–∞–π–ª –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ Git"""
    gitignore_path = Path('.gitignore')
    if gitignore_path.exists():
        with open(gitignore_path, 'r', encoding='utf-8') as f:
            content = f.read()
            if '.env' in content:
                print("‚úÖ .env —Ñ–∞–π–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ Git")
                return True
            else:
                print("‚ö†Ô∏è  .env —Ñ–∞–π–ª –ù–ï –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ Git! –î–æ–±–∞–≤–ª—è–µ–º...")
                with open(gitignore_path, 'a', encoding='utf-8') as f:
                    f.write('\n# Environment variables\n.env\n')
                print("‚úÖ .env —Ñ–∞–π–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ .gitignore")
                return True
    else:
        print("‚ùå .gitignore —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Mentora...")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .gitignore
    if not check_gitignore():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å .gitignore")
        return False
    
    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
    if create_env_file():
        print("‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:")
        print("  - –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª —Å –Ω–æ–≤—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
        print("  - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏")
        print("  - –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –Ω–æ–≤—ã–µ SMTP —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        print("  - –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ .env —Ñ–∞–π–ª–∞ –æ—Ç Git")
        
        print("\nüö® –í–ê–ñ–ù–û:")
        print("  1. –û–±–Ω–æ–≤–∏—Ç–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ MailerSend")
        print("  2. –û—Ç–∑–æ–≤–∏—Ç–µ —Å—Ç–∞—Ä—ã–µ —Å–∫–æ–º–ø—Ä–æ–º–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–ª—é—á–∏")
        print("  3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É email")
        
        return True
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª")
        return False

if __name__ == "__main__":
    main()
