#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ 500 –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import app
from models import User
from extensions import db

def debug_deleted_users():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    with app.app_context():
        print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –£–î–ê–õ–ï–ù–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
        print("=" * 50)
        
        try:
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ –ø–æ–ª—è –¥–ª—è –º—è–≥–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
            print("\nüìä –ü–†–û–í–ï–†–ö–ê –ü–û–õ–ï–ô –ë–ê–ó–´ –î–ê–ù–ù–´–•:")
            inspector = db.inspect(db.engine)
            columns = [col['name'] for col in inspector.get_columns('user')]
            
            required_fields = ['is_deleted', 'deleted_at', 'deleted_by']
            for field in required_fields:
                if field in columns:
                    print(f"   ‚úÖ {field}: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    print(f"   ‚ùå {field}: –ù–ï –ù–ê–ô–î–ï–ù–û!")
            
            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            print(f"\nüë• –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:")
            total_users = User.query.count()
            active_users = User.query.filter(User.is_deleted == False).count()
            deleted_users = User.query.filter(User.is_deleted == True).count()
            
            print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
            print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö: {active_users}")
            print(f"   –£–¥–∞–ª–µ–Ω–Ω—ã—Ö: {deleted_users}")
            
            # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            print(f"\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–ü–†–û–°–ê:")
            try:
                deleted_query = User.query.filter(User.is_deleted == True)
                deleted_count = deleted_query.count()
                print(f"   ‚úÖ –ó–∞–ø—Ä–æ—Å —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç: {deleted_count} –∑–∞–ø–∏—Å–µ–π")
                
                # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                page = deleted_query.paginate(page=1, per_page=20, error_out=False)
                print(f"   ‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç: {page.total} –∑–∞–ø–∏—Å–µ–π, {len(page.items)} –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ: {str(e)}")
                return False
            
            # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω
            print(f"\nüìÑ –ü–†–û–í–ï–†–ö–ê –®–ê–ë–õ–û–ù–ê:")
            template_path = "templates/admin/deleted_users.html"
            if os.path.exists(template_path):
                print(f"   ‚úÖ –®–∞–±–ª–æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {template_path}")
            else:
                print(f"   ‚ùå –®–∞–±–ª–æ–Ω –ù–ï –ù–ê–ô–î–ï–ù: {template_path}")
                return False
            
            # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–∞
            print(f"\nüé® –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ï–ù–î–ï–†–ò–ù–ì–ê:")
            try:
                from flask import render_template
                from datetime import datetime
                
                # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                test_data = {
                    'users': page,
                    'stats': {
                        'total_deleted': deleted_count,
                        'deleted_admins': User.query.filter(User.is_deleted == True, User.role == 'admin').count(),
                        'deleted_users': User.query.filter(User.is_deleted == True, User.role == 'user').count(),
                    },
                    'search': '',
                    'role_filter': 'all',
                    'sort_by': 'deleted_at',
                    'sort_order': 'desc'
                }
                
                # –ü—Ä–æ–±—É–µ–º —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å —à–∞–±–ª–æ–Ω
                rendered = render_template('admin/deleted_users.html', **test_data)
                print(f"   ‚úÖ –®–∞–±–ª–æ–Ω —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è —É—Å–ø–µ—à–Ω–æ ({len(rendered)} —Å–∏–º–≤–æ–ª–æ–≤)")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞: {str(e)}")
                import traceback
                traceback.print_exc()
                return False
            
            print(f"\n‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
            return True
            
        except Exception as e:
            print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {str(e)}")
            import traceback
            traceback.print_exc()
            return False

if __name__ == "__main__":
    if debug_deleted_users():
        print("\nüéâ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã!")
