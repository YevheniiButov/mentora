#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è –∫–æ–º–º–∏—Ç–æ–≤ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω mentora.com.in
"""
import subprocess
import os
import sys
from datetime import datetime

def get_commits_after_base(base_commit="d727518"):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∏—Ç–æ–≤ –ø–æ—Å–ª–µ –±–∞–∑–æ–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞"""
    try:
        result = subprocess.run(
            ['git', 'log', '--oneline', f'{base_commit}..HEAD'],
            capture_output=True, text=True, check=True
        )
        commits = result.stdout.strip().split('\n') if result.stdout.strip() else []
        return commits
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–æ–≤: {e}")
        return []

def create_deployment_branch():
    """–°–æ–∑–¥–∞—Ç—å –≤–µ—Ç–∫—É –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω"""
    branch_name = f"deploy-test-{datetime.now().strftime('%Y%m%d-%H%M%S')}"
    
    try:
        # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ç–∫—É
        subprocess.run(['git', 'checkout', '-b', branch_name], check=True)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –≤–µ—Ç–∫–∞ –¥–ª—è –¥–µ–ø–ª–æ—è: {branch_name}")
        return branch_name
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ—Ç–∫–∏: {e}")
        return None

def backup_current_state():
    """–°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    backup_branch = f"backup-before-test-deploy-{timestamp}"
    
    try:
        subprocess.run(['git', 'checkout', '-b', backup_branch], check=True)
        subprocess.run(['git', 'checkout', 'main'], check=True)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø –≤ –≤–µ—Ç–∫–µ: {backup_branch}")
        return backup_branch
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞: {e}")
        return None

def deploy_to_test_domain():
    """–î–µ–ø–ª–æ–π –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω...")
    
    # –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if os.path.exists('mentora_test_config.env'):
        os.system('cp mentora_test_config.env .env')
        print("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é mentora.com.in")
    elif os.path.exists('.env.test'):
        os.system('cp .env.test .env')
        print("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
    else:
        print("‚ùå –§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    try:
        subprocess.run(['pip', 'install', '-r', 'requirements.txt'], check=True)
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return False
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
    print("üóÉÔ∏è –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î...")
    try:
        subprocess.run([
            'python3', '-c', 
            'from app import create_app, db; app = create_app(); app.app_context().push(); db.create_all()'
        ], check=True)
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ë–î –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î: {e}")
        return False
    
    print("‚úÖ –î–µ–ø–ª–æ–π –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω")
    return True

def run_tests():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"""
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
    
    tests = [
        "python3 -c \"from routes.admin_routes import admin_bp; print('Admin routes OK')\"",
        "python3 -c \"from models import db; print('Models OK')\"",
        "python3 -c \"from app import create_app; app = create_app(); print('App creation OK')\"",
        "python3 -c \"import os; print('Mentora landing config:', 'mentora.com.in' in os.environ.get('TEST_DOMAIN', ''))\""
    ]
    
    for test in tests:
        try:
            result = subprocess.run(test, shell=True, capture_output=True, text=True, check=True)
            print(f"‚úÖ {test.split(';')[-1].strip()}")
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: {test}")
            print(f"   –û—à–∏–±–∫–∞: {e.stderr}")
            return False
    
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã")
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω mentora.com.in")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∏—Ç–æ–≤ –¥–ª—è –¥–µ–ø–ª–æ—è
    commits = get_commits_after_base("d727518")
    if not commits:
        print("‚ùå –ù–µ—Ç –∫–æ–º–º–∏—Ç–æ–≤ –¥–ª—è –¥–µ–ø–ª–æ—è –ø–æ—Å–ª–µ d727518")
        return False
    
    print(f"üìã –ö–æ–º–º–∏—Ç—ã –¥–ª—è –¥–µ–ø–ª–æ—è ({len(commits)}):")
    for i, commit in enumerate(commits, 1):
        print(f"   {i}. {commit}")
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    response = input("\n‚ùì –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–µ–ø–ª–æ–π? (y/N): ")
    if response.lower() != 'y':
        print("‚ùå –î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω")
        return False
    
    # –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    backup_branch = backup_current_state()
    if not backup_branch:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø")
        return False
    
    # –°–æ–∑–¥–∞—Ç—å –≤–µ—Ç–∫—É –¥–ª—è –¥–µ–ø–ª–æ—è
    deploy_branch = create_deployment_branch()
    if not deploy_branch:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–µ—Ç–∫—É –¥–ª—è –¥–µ–ø–ª–æ—è")
        return False
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
    if not run_tests():
        print("‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã, –¥–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω")
        return False
    
    # –î–µ–ø–ª–æ–π –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω
    if not deploy_to_test_domain():
        print("‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω")
        return False
    
    print("\n" + "=" * 60)
    print("‚úÖ –î–µ–ø–ª–æ–π –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    print(f"üåê –¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω: mentora.com.in")
    print(f"üìã –ö–æ–º–º–∏—Ç—ã –∑–∞–¥–µ–ø–ª–æ–µ–Ω—ã: {len(commits)}")
    print(f"üíæ –ë—ç–∫–∞–ø –≤ –≤–µ—Ç–∫–µ: {backup_branch}")
    print(f"üöÄ –í–µ—Ç–∫–∞ –¥–µ–ø–ª–æ—è: {deploy_branch}")
    
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞ mentora.com.in")
    print("2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è PostgreSQL)")
    print("3. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –∑–∞–¥–µ–ø–ª–æ–∏—Ç—å –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω")
    print("4. –í —Å–ª—É—á–∞–µ –ø—Ä–æ–±–ª–µ–º - –æ—Ç–∫–∞—Ç–∏—Ç—å—Å—è –∫ –≤–µ—Ç–∫–µ –±—ç–∫–∞–ø–∞")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
