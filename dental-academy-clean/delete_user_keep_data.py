#!/usr/bin/env python3
"""
–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–∞–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏—è)
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import app, db
from models import User, RegistrationVisitor
from sqlalchemy import text

def delete_user_keep_data(user_id):
    """–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ"""
    
    with app.app_context():
        try:
            print(f"üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: {user_id} —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            user = User.query.get(user_id)
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
            
            print(f"üë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.email}")
            
            # 1. –û–±–Ω—É–ª—è–µ–º user_id –≤ –∑–∞–ø–∏—Å—è—Ö registration_visitors (–º–æ–∂–µ—Ç –±—ã—Ç—å NULL)
            registration_visitors = RegistrationVisitor.query.filter_by(user_id=user_id).all()
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ registration_visitors: {len(registration_visitors)}")
            
            for visitor in registration_visitors:
                visitor.user_id = None  # –û–±–Ω—É–ª—è–µ–º –≤–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è
                print(f"   ‚úÖ –ê–Ω–æ–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∑–∞–ø–∏—Å—å visitor ID: {visitor.id}")
            
            # 2. –£–¥–∞–ª—è–µ–º –ø–æ—Å—Ç—ã —Ñ–æ—Ä—É–º–∞ (author_id –ù–ï –º–æ–∂–µ—Ç –±—ã—Ç—å NULL)
            try:
                from models import ForumPost
                forum_posts = ForumPost.query.filter_by(author_id=user_id).all()
                print(f"üìù –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ —Ñ–æ—Ä—É–º–∞: {len(forum_posts)}")
                
                for post in forum_posts:
                    print(f"   ‚ö†Ô∏è –£–¥–∞–ª—è–µ–º –ø–æ—Å—Ç ID: {post.id} (author_id –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å NULL)")
                    db.session.delete(post)
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–æ–≤ —Ñ–æ—Ä—É–º–∞: {e}")
            
            # 3. –£–¥–∞–ª—è–µ–º –ª–∞–π–∫–∏ –ø–æ—Å—Ç–æ–≤ (user_id –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å NULL)
            try:
                from models import ForumPostLike
                post_likes = ForumPostLike.query.filter_by(user_id=user_id).all()
                print(f"üëç –ù–∞–π–¥–µ–Ω–æ –ª–∞–π–∫–æ–≤ –ø–æ—Å—Ç–æ–≤: {len(post_likes)}")
                
                for like in post_likes:
                    print(f"   ‚ö†Ô∏è –£–¥–∞–ª—è–µ–º –ª–∞–π–∫ –ø–æ—Å—Ç–∞ ID: {like.id}")
                    db.session.delete(like)
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–∞–π–∫–æ–≤ –ø–æ—Å—Ç–æ–≤: {e}")
            
            # 4. –£–¥–∞–ª—è–µ–º –ª–∞–π–∫–∏ —Ç–µ–º (user_id –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å NULL)
            try:
                from models import ForumTopicLike
                topic_likes = ForumTopicLike.query.filter_by(user_id=user_id).all()
                print(f"üëç –ù–∞–π–¥–µ–Ω–æ –ª–∞–π–∫–æ–≤ —Ç–µ–º: {len(topic_likes)}")
                
                for like in topic_likes:
                    print(f"   ‚ö†Ô∏è –£–¥–∞–ª—è–µ–º –ª–∞–π–∫ —Ç–µ–º—ã ID: {like.id}")
                    db.session.delete(like)
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–∞–π–∫–æ–≤ —Ç–µ–º: {e}")
            
            # 5. –£–¥–∞–ª—è–µ–º —Ç–µ–º—ã —Ñ–æ—Ä—É–º–∞ (author_id –ù–ï –º–æ–∂–µ—Ç –±—ã—Ç—å NULL)
            try:
                from models import ForumTopic
                forum_topics = ForumTopic.query.filter_by(author_id=user_id).all()
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ —Ç–µ–º —Ñ–æ—Ä—É–º–∞: {len(forum_topics)}")
                
                for topic in forum_topics:
                    print(f"   ‚ö†Ô∏è –£–¥–∞–ª—è–µ–º —Ç–µ–º—É ID: {topic.id} (author_id –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å NULL)")
                    db.session.delete(topic)
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–µ–º —Ñ–æ—Ä—É–º–∞: {e}")
            
            # 6. –û–±–Ω—É–ª—è–µ–º user_id –≤ –¥—Ä—É–≥–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö (–≥–¥–µ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ)
            try:
                # –¢–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã - –æ–±–Ω—É–ª—è–µ–º user_id
                from models import TestResult
                test_results = TestResult.query.filter_by(user_id=user_id).all()
                if test_results:
                    print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤: {len(test_results)}")
                    for result in test_results:
                        result.user_id = None  # –û–±–Ω—É–ª—è–µ–º –≤–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è
                    print(f"   ‚úÖ –ê–Ω–æ–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤")
                
                # –°–µ—Å—Å–∏–∏ —Ç–µ—Å—Ç–æ–≤ - –æ–±–Ω—É–ª—è–µ–º user_id
                from models import TestSession
                test_sessions = TestSession.query.filter_by(user_id=user_id).all()
                if test_sessions:
                    print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–µ—Å—Å–∏–π —Ç–µ—Å—Ç–æ–≤: {len(test_sessions)}")
                    for session in test_sessions:
                        session.user_id = None  # –û–±–Ω—É–ª—è–µ–º –≤–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è
                    print(f"   ‚úÖ –ê–Ω–æ–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å–µ—Å—Å–∏–∏ —Ç–µ—Å—Ç–æ–≤")
                
                # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ª–æ–≥–∏ - –æ–±–Ω—É–ª—è–µ–º user_id
                from models import RegistrationLogs
                reg_logs = RegistrationLogs.query.filter_by(user_id=user_id).all()
                if reg_logs:
                    print(f"üìù –ù–∞–π–¥–µ–Ω–æ –ª–æ–≥–æ–≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {len(reg_logs)}")
                    for log in reg_logs:
                        log.user_id = None  # –û–±–Ω—É–ª—è–µ–º –≤–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è
                    print(f"   ‚úÖ –ê–Ω–æ–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –ª–æ–≥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
                
                # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - —É–¥–∞–ª—è–µ–º (–æ–±—ã—á–Ω–æ –Ω–µ –Ω—É–∂–Ω–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è)
                from models import UserActivity
                user_activities = UserActivity.query.filter_by(user_id=user_id).all()
                if user_activities:
                    print(f"üìà –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {len(user_activities)}")
                    for activity in user_activities:
                        db.session.delete(activity)
                    print(f"   ‚ö†Ô∏è –£–¥–∞–ª–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
                
                # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è - –æ–±–Ω—É–ª—è–µ–º user_id
                from models import UserAchievement
                achievements = UserAchievement.query.filter_by(user_id=user_id).all()
                if achievements:
                    print(f"üèÜ –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: {len(achievements)}")
                    for achievement in achievements:
                        achievement.user_id = None  # –û–±–Ω—É–ª—è–µ–º –≤–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è
                    print(f"   ‚úÖ –ê–Ω–æ–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è")
                
                # –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è - –æ–±–Ω—É–ª—è–µ–º user_id
                from models import UserProgress
                progress_records = UserProgress.query.filter_by(user_id=user_id).all()
                if progress_records:
                    print(f"üìö –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {len(progress_records)}")
                    for progress in progress_records:
                        progress.user_id = None  # –û–±–Ω—É–ª—è–µ–º –≤–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è
                    print(f"   ‚úÖ –ê–Ω–æ–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è")
                
                # –ö–æ–Ω—Ç–∞–∫—Ç—ã - –æ–±–Ω—É–ª—è–µ–º user_id –∏ assigned_to
                from models import Contact
                contacts = Contact.query.filter(
                    (Contact.user_id == user_id) | (Contact.assigned_to == user_id)
                ).all()
                if contacts:
                    print(f"üìû –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: {len(contacts)}")
                    for contact in contacts:
                        if contact.user_id == user_id:
                            contact.user_id = None
                        if contact.assigned_to == user_id:
                            contact.assigned_to = None
                    print(f"   ‚úÖ –ê–Ω–æ–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∫–æ–Ω—Ç–∞–∫—Ç—ã")
                
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {e}")
            
            # 7. –¢–µ–ø–µ—Ä—å —É–¥–∞–ª—è–µ–º —Å–∞–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            db.session.delete(user)
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.email} —É–¥–∞–ª–µ–Ω")
            
            # 8. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            db.session.commit()
            print("üíæ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            print("üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∫–∞–∫ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            db.session.rollback()
            return False

def show_user_data(user_id):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    
    with app.app_context():
        try:
            user = User.query.get(user_id)
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.email}")
            print("üìä –î–∞–Ω–Ω—ã–µ, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
            tables_to_check = [
                ('RegistrationVisitor', 'registration_visitors', 'user_id'),
                ('ForumPost', 'forum_posts', 'author_id'),
                ('ForumPostLike', 'forum_post_likes', 'user_id'),
                ('ForumTopicLike', 'forum_topic_likes', 'user_id'),
                ('ForumTopic', 'forum_topics', 'author_id'),
                ('TestResult', 'test_results', 'user_id'),
                ('TestSessions', 'test_sessions', 'user_id'),
                ('RegistrationLogs', 'registration_logs', 'user_id'),
                ('UserActivity', 'user_activity', 'user_id'),
                ('UserAchievement', 'user_achievement', 'user_id'),
                ('UserProgress', 'user_progress', 'user_id'),
                ('Contact', 'contact', 'user_id'),
            ]
            
            for model_name, table_name, column_name in tables_to_check:
                try:
                    from models import globals as models_globals
                    model_class = getattr(models_globals, model_name, None)
                    if model_class:
                        if column_name == 'author_id':
                            records = model_class.query.filter_by(author_id=user_id).count()
                        else:
                            records = model_class.query.filter_by(**{column_name: user_id}).count()
                        
                        if records > 0:
                            print(f"   üìã {table_name}: {records} –∑–∞–ø–∏—Å–µ–π")
                except Exception as e:
                    print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {table_name}: {e}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

def test_user_deletion():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö"""
    
    with app.app_context():
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            from models import User, RegistrationVisitor, ForumPost
            from datetime import datetime
            
            test_user = User(
                email="test_anonymize@example.com",
                password_hash="test_hash",
                first_name="Test",
                last_name="Anonymize"
            )
            db.session.add(test_user)
            db.session.flush()
            user_id = test_user.id
            print(f"üë§ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {user_id}")
            
            # –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
            visitor = RegistrationVisitor(
                ip_address="127.0.0.1",
                page_type="test",
                entry_time=datetime.utcnow(),
                user_id=user_id,
                email_entered="test_anonymize@example.com"
            )
            db.session.add(visitor)
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç —Ñ–æ—Ä—É–º–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–º–∞)
            from models import ForumTopic
            topic = ForumTopic.query.first()
            if topic:
                post = ForumPost(
                    content="Test post for anonymization",
                    topic_id=topic.id,
                    author_id=user_id
                )
                db.session.add(post)
                print(f"üìù –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Ñ–æ—Ä—É–º–∞")
            
            db.session.commit()
            print(f"üìä –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å visitor")
            
            print(f"üóëÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: {user_id}")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à –º–µ—Ç–æ–¥ –∞–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏–∏
            success = delete_user_keep_data(user_id)
            
            if success:
                print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω, –¥–∞–Ω–Ω—ã–µ –∞–Ω–æ–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
                print("üéâ –ê–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
                return True
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–Ω–æ–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                return False
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏–∏: {e}")
            db.session.rollback()
            return False

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python3 delete_user_keep_data.py <user_id>        - —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö")
        print("  python3 delete_user_keep_data.py show <user_id>    - –ø–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("  python3 delete_user_keep_data.py test              - –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏—é")
        sys.exit(1)
    
    command = sys.argv[1]
    
    if command == "test":
        success = test_user_deletion()
        if not success:
            sys.exit(1)
    elif command == "show":
        if len(sys.argv) < 3:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö")
            sys.exit(1)
        try:
            user_id = int(sys.argv[2])
            show_user_data(user_id)
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ.")
            sys.exit(1)
    else:
        try:
            user_id = int(command)
            success = delete_user_keep_data(user_id)
            if success:
                print("üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω, –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∫–∞–∫ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ!")
            else:
                print("üí• –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                sys.exit(1)
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ.")
            sys.exit(1)
