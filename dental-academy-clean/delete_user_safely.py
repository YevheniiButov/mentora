#!/usr/bin/env python3
"""
–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ—á–∏—Å—Ç–∫–æ–π —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import app, db
from models import User, RegistrationVisitor
from sqlalchemy import text

def delete_user_safely(user_id):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏"""
    
    with app.app_context():
        try:
            print(f"üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: {user_id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            user = User.query.get(user_id)
            if not user:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
            
            print(f"üë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.email}")
            
            # 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –≤ registration_visitors
            registration_visitors = RegistrationVisitor.query.filter_by(user_id=user_id).all()
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ registration_visitors: {len(registration_visitors)}")
            
            for visitor in registration_visitors:
                db.session.delete(visitor)
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å visitor ID: {visitor.id}")
            
            # 2. –£–¥–∞–ª—è–µ–º –ø–æ—Å—Ç—ã —Ñ–æ—Ä—É–º–∞
            try:
                from models import ForumPost
                forum_posts = ForumPost.query.filter_by(author_id=user_id).all()
                print(f"üìù –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ —Ñ–æ—Ä—É–º–∞: {len(forum_posts)}")
                
                for post in forum_posts:
                    db.session.delete(post)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω –ø–æ—Å—Ç ID: {post.id}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–æ–≤ —Ñ–æ—Ä—É–º–∞: {e}")
            
            # 3. –£–¥–∞–ª—è–µ–º –ª–∞–π–∫–∏ –ø–æ—Å—Ç–æ–≤
            try:
                from models import ForumPostLike
                post_likes = ForumPostLike.query.filter_by(user_id=user_id).all()
                print(f"üëç –ù–∞–π–¥–µ–Ω–æ –ª–∞–π–∫–æ–≤ –ø–æ—Å—Ç–æ–≤: {len(post_likes)}")
                
                for like in post_likes:
                    db.session.delete(like)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω –ª–∞–π–∫ –ø–æ—Å—Ç–∞ ID: {like.id}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–∞–π–∫–æ–≤ –ø–æ—Å—Ç–æ–≤: {e}")
            
            # 4. –£–¥–∞–ª—è–µ–º –ª–∞–π–∫–∏ —Ç–µ–º —Ñ–æ—Ä—É–º–∞
            try:
                from models import ForumTopicLike
                topic_likes = ForumTopicLike.query.filter_by(user_id=user_id).all()
                print(f"üëç –ù–∞–π–¥–µ–Ω–æ –ª–∞–π–∫–æ–≤ —Ç–µ–º: {len(topic_likes)}")
                
                for like in topic_likes:
                    db.session.delete(like)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω –ª–∞–π–∫ —Ç–µ–º—ã ID: {like.id}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–∞–π–∫–æ–≤ —Ç–µ–º: {e}")
            
            # 5. –£–¥–∞–ª—è–µ–º —Ç–µ–º—ã —Ñ–æ—Ä—É–º–∞
            try:
                from models import ForumTopic
                forum_topics = ForumTopic.query.filter_by(author_id=user_id).all()
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ —Ç–µ–º —Ñ–æ—Ä—É–º–∞: {len(forum_topics)}")
                
                for topic in forum_topics:
                    db.session.delete(topic)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Ç–µ–º–∞ ID: {topic.id}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–µ–º —Ñ–æ—Ä—É–º–∞: {e}")
            
            # 6. –£–¥–∞–ª—è–µ–º –¥—Ä—É–≥–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
            try:
                # –¢–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                from models import TestResult
                test_results = TestResult.query.filter_by(user_id=user_id).all()
                if test_results:
                    print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤: {len(test_results)}")
                    for result in test_results:
                        db.session.delete(result)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤")
                
                # –°–µ—Å—Å–∏–∏ —Ç–µ—Å—Ç–æ–≤
                from models import TestSessions
                test_sessions = TestSessions.query.filter_by(user_id=user_id).all()
                if test_sessions:
                    print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–µ—Å—Å–∏–π —Ç–µ—Å—Ç–æ–≤: {len(test_sessions)}")
                    for session in test_sessions:
                        db.session.delete(session)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω—ã —Å–µ—Å—Å–∏–∏ —Ç–µ—Å—Ç–æ–≤")
                
                # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ª–æ–≥–∏
                from models import RegistrationLogs
                reg_logs = RegistrationLogs.query.filter_by(user_id=user_id).all()
                if reg_logs:
                    print(f"üìù –ù–∞–π–¥–µ–Ω–æ –ª–æ–≥–æ–≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {len(reg_logs)}")
                    for log in reg_logs:
                        db.session.delete(log)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω—ã –ª–æ–≥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
                
                # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                from models import UserActivity
                user_activities = UserActivity.query.filter_by(user_id=user_id).all()
                if user_activities:
                    print(f"üìà –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {len(user_activities)}")
                    for activity in user_activities:
                        db.session.delete(activity)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
                
                # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                from models import UserAchievement
                achievements = UserAchievement.query.filter_by(user_id=user_id).all()
                if achievements:
                    print(f"üèÜ –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: {len(achievements)}")
                    for achievement in achievements:
                        db.session.delete(achievement)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è")
                
                # –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è
                from models import UserProgress
                progress_records = UserProgress.query.filter_by(user_id=user_id).all()
                if progress_records:
                    print(f"üìö –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {len(progress_records)}")
                    for progress in progress_records:
                        db.session.delete(progress)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞")
                
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {e}")
            
            # 5. –¢–µ–ø–µ—Ä—å —É–¥–∞–ª—è–µ–º —Å–∞–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            db.session.delete(user)
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.email} —É–¥–∞–ª–µ–Ω")
            
            # 6. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            db.session.commit()
            print("üíæ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            db.session.rollback()
            return False

def list_users_with_registration_data():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ registration_visitors"""
    
    with app.app_context():
        try:
            print("üìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")
            
            # SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–∞–ø–∏—Å–µ–π –≤ registration_visitors
            result = db.session.execute(text("""
                SELECT u.id, u.email, u.first_name, u.last_name, COUNT(rv.id) as visitor_records
                FROM "user" u
                LEFT JOIN registration_visitors rv ON u.id = rv.user_id
                WHERE rv.user_id IS NOT NULL
                GROUP BY u.id, u.email, u.first_name, u.last_name
                ORDER BY visitor_records DESC
            """))
            
            users = result.fetchall()
            
            if not users:
                print("   ‚ÑπÔ∏è –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
                return
            
            for user in users:
                user_id, email, first_name, last_name, visitor_records = user
                name = f"{first_name} {last_name}".strip() if first_name or last_name else "–ë–µ–∑ –∏–º–µ–Ω–∏"
                print(f"   üë§ ID: {user_id} | Email: {email} | –ò–º—è: {name} | –ó–∞–ø–∏—Å–µ–π: {visitor_records}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python delete_user_safely.py <user_id>     - —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("  python delete_user_safely.py list          - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
        sys.exit(1)
    
    command = sys.argv[1]
    
    if command == "list":
        list_users_with_registration_data()
    else:
        try:
            user_id = int(command)
            success = delete_user_safely(user_id)
            if success:
                print("üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")
            else:
                print("üí• –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                sys.exit(1)
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ.")
            sys.exit(1)
