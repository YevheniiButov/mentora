#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import app, db
from models import User, DiagnosticSession, PersonalLearningPlan
from utils.learning_plan_generator import convert_diagnostic_to_planner_format

def debug_test():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏"""
    
    with app.app_context():
        print("üîç –û–¢–õ–ê–î–ö–ê: –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç...")
        
        # –ù–∞—Ö–æ–¥–∏–º –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User.query.first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.email} (ID: {user.id})")
        
        # –ù–∞—Ö–æ–¥–∏–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é —Å–µ—Å—Å–∏—é
        diagnostic_session = DiagnosticSession.query.filter_by(
            user_id=user.id,
            status='completed'
        ).first()
        
        if not diagnostic_session:
            print("‚ùå –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è —Å–µ—Å—Å–∏—è: {diagnostic_session.id}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º generate_results
        print("\nüîç –û–¢–õ–ê–î–ö–ê: –¢–µ—Å—Ç–∏—Ä—É–µ–º generate_results()...")
        diagnostic_data = diagnostic_session.generate_results()
        print(f"üîç –û–¢–õ–ê–î–ö–ê: diagnostic_data keys = {list(diagnostic_data.keys())}")
        print(f"üîç –û–¢–õ–ê–î–ö–ê: domain_statistics = {diagnostic_data.get('domain_statistics', {})}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
        print("\nüîç –û–¢–õ–ê–î–ö–ê: –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä...")
        converted = convert_diagnostic_to_planner_format(diagnostic_data)
        print(f"üîç –û–¢–õ–ê–î–ö–ê: converted = {converted}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è
        print("\nüîç –û–¢–õ–ê–î–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è...")
        learning_plan = PersonalLearningPlan.query.filter_by(
            user_id=user.id,
            status='active'
        ).first()
        
        if learning_plan:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è: {learning_plan.id}")
            print(f"üîç –û–¢–õ–ê–î–ö–ê: plan.domain_analysis = {learning_plan.domain_analysis}")
            domain_analysis = learning_plan.get_domain_analysis()
            print(f"üîç –û–¢–õ–ê–î–ö–ê: plan.get_domain_analysis() = {domain_analysis}")
        else:
            print("‚ùå –ü–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")

if __name__ == '__main__':
    debug_test() 