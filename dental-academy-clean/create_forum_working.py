#!/usr/bin/env python3
"""
–†–∞–±–æ—á–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ä—É–º–∞
–£–±–∏—Ä–∞–µ—Ç –ø–æ–ª–µ slug –∏–∑ forum_topics, —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ –Ω–µ—Ç –≤ —Å—Ö–µ–º–µ
"""

import os
import sys
import psycopg2
from datetime import datetime, timedelta
import re

def get_production_db_connection():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ DATABASE_URL"""
    try:
        database_url = os.environ.get('DATABASE_URL')
        
        if not database_url:
            print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
            return None
        
        print(f"üîó –ò—Å–ø–æ–ª—å–∑—É–µ–º DATABASE_URL: {database_url[:50]}...")
        
        conn = psycopg2.connect(database_url, sslmode='require')
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return conn
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def create_slug(text):
    """–°–æ–∑–¥–∞—Ç—å slug –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ lowercase –∏ –∑–∞–º–µ–Ω—è–µ–º –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –¥–µ—Ñ–∏—Å—ã
    slug = text.lower()
    slug = re.sub(r'[^\w\s-]', '', slug)  # –£–¥–∞–ª—è–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã
    slug = re.sub(r'[-\s]+', '-', slug)   # –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–µ—Ñ–∏—Å—ã
    return slug.strip('-')

def create_forum_categories(conn):
    """–°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–æ—Ä—É–º–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏"""
    cursor = conn.cursor()
    
    print("üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–æ—Ä—É–º–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã forum_categories
    cursor.execute("""
        SELECT column_name 
        FROM information_schema.columns 
        WHERE table_name = 'forum_categories'
        ORDER BY ordinal_position;
    """)
    
    columns = [row[0] for row in cursor.fetchall()]
    print(f"üìã –ö–æ–ª–æ–Ω–∫–∏ forum_categories: {columns}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    try:
        category_name = 'Collega Chat'
        category_slug = create_slug(category_name)
        
        cursor.execute("""
            INSERT INTO forum_categories (
                name, slug, description, is_active, created_at
            ) VALUES (%s, %s, %s, %s, %s)
            RETURNING id
        """, (
            category_name,
            category_slug,
            'Discussie tussen collega\'s over BIG registratie, examens en carri√®re',
            True,
            datetime.now()
        ))
        
        category_id = cursor.fetchone()[0]
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category_name} (slug: {category_slug}, ID: {category_id})")
        return category_id
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {e}")
        return None

def create_forum_topics(conn, category_id):
    """–°–æ–∑–¥–∞—Ç—å —Ç–µ–º—ã —Ñ–æ—Ä—É–º–∞"""
    cursor = conn.cursor()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–º
    cursor.execute("SELECT id, first_name, last_name FROM \"user\" WHERE email LIKE '%@example.com' ORDER BY id DESC LIMIT 11")
    users = cursor.fetchall()
    
    print(f"üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
    
    # –°–æ–∑–¥–∞–µ–º lookup –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_lookup = {}
    for user in users:
        user_id, first_name, last_name = user
        name = f"{first_name} {last_name}".strip()
        user_lookup[name] = user_id
        print(f"   üë§ {name} (ID: {user_id})")
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–º –∏ –ø–æ—Å—Ç–æ–≤
    topics_data = [
        {
            'title': 'Taal certificaten en diploma erkenning',
            'description': 'Discussie over welke taal certificaten nodig zijn voor diploma erkenning',
            'author': 'Liliam',
            'posts': [
                {
                    'user': 'Liliam',
                    'content': "Goedemiddag collega's heeft iemand material voor lezen exam van BGB academy?",
                    'timestamp': '13:13',
                    'date_offset': 0
                },
                {
                    'user': '√úmit Isiklar',
                    'content': "Goedemiddag Collega's. Ik wil aan Nederland aanvragen om diploma gelijkwaardig te hebben.Welke niveau taal certificaat moet ik hebben? Engels en Nederlands.Alvast bedankt.",
                    'timestamp': '13:22',
                    'date_offset': 0
                },
                {
                    'user': '√úmit Isiklar',
                    'content': "ik ben een nieuwe lid hier",
                    'timestamp': '13:22',
                    'date_offset': 0
                },
                {
                    'user': 'Liliam',
                    'content': "B2+",
                    'timestamp': '13:22',
                    'date_offset': 0
                },
                {
                    'user': '√úmit Isiklar',
                    'content': "Engels ook?",
                    'timestamp': '13:23',
                    'date_offset': 0
                },
                {
                    'user': 'Liliam',
                    'content': "Volgens mij wel",
                    'timestamp': '13:23',
                    'date_offset': 0
                },
                {
                    'user': 'Bahar Yƒ±ldƒ±z',
                    'content': "B2 lezen voor Engels ook heb jij nodig",
                    'timestamp': '13:27',
                    'date_offset': 0
                },
                {
                    'user': '√úmit Isiklar',
                    'content': "Ok,dank u wel",
                    'timestamp': '13:24',
                    'date_offset': 0
                },
                {
                    'user': '√úmit Isiklar',
                    'content': "Dank u wel.",
                    'timestamp': '13:34',
                    'date_offset': 0
                },
                {
                    'user': 'Drs. B.',
                    'content': "C1 Nederlands",
                    'timestamp': '20:01',
                    'date_offset': 0
                }
            ]
        },
        {
            'title': 'BIG Registratie en werkprocessen',
            'description': 'Informatie over BIG registratie en nieuwe regels voor IND',
            'author': 'Karlien Bruwer',
            'posts': [
                {
                    'user': 'Karlien Bruwer',
                    'content': 'Dag, heeft iemand informatie over het proces van een tijdelijk "onoffici√´le" BIG registratie?',
                    'timestamp': '10:10',
                    'date_offset': -1
                },
                {
                    'user': 'Karlien Bruwer',
                    'content': 'Dag, heeft iemand informatie over het proces van een tijdelijk "onoffici√´le" BIG registratie? Ik wel ge√Ønteresseerd... mag ik je vragen waar je over deze informatie hebt gehoord? Alvast bedankt',
                    'timestamp': '11:22',
                    'date_offset': -1
                },
                {
                    'user': 'Pelin Babayigit',
                    'content': 'Kan ik hier meer over leren, alstublieft? Alvast bedankt',
                    'timestamp': '11:44',
                    'date_offset': -1
                },
                {
                    'user': 'Karlien Bruwer',
                    'content': 'Ik heb gehoort dat het een nieuwe "regel" is voor de IND (om te werken voordat je BIG registratie hebt) maar ik weet niet veel. Ik zal laat weten als Ik meer weet.',
                    'timestamp': '12:06',
                    'date_offset': -1
                },
                {
                    'user': 'Rinsy',
                    'content': 'Zeer geinteresseerd',
                    'timestamp': '12:07',
                    'date_offset': -1
                },
                {
                    'user': 'Yuliya Termonia',
                    'content': 'Ik heb in januari in webinar deel genomen. Ze hebben niets erover gezegd. Misschien praat je over het werk onder supervisie (stage) als een deel van het geheel proces?',
                    'timestamp': '12:29',
                    'date_offset': -1
                },
                {
                    'user': 'Rami',
                    'content': 'Hallo allemaal is er iemand die het spreken-examen op de Babel School wil doen? En Is er iemand die de test heeft gedaan en informatie met ons kan delen?',
                    'timestamp': '09:58',
                    'date_offset': -4
                }
            ]
        },
        {
            'title': 'BGB Examen materialen en ervaringen',
            'description': 'Delen van materialen en ervaringen voor BGB examens',
            'author': 'Shiva',
            'posts': [
                {
                    'user': 'Shiva',
                    'content': 'Hello, Heeft iemand van mijn vrienden onlangs het BGB-examen gedaan, specifiek de onderdelen Lezen en Spreken?',
                    'timestamp': '21:50',
                    'date_offset': -1
                },
                {
                    'user': '√úmit Isiklar',
                    'content': 'Betekent het 4.1 mondeling?Dank u wel.',
                    'timestamp': '19:16',
                    'date_offset': -2
                }
            ]
        }
    ]
    
    created_topics = []
    
    print("üí¨ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–º –∏ –ø–æ—Å—Ç–æ–≤...")
    for topic_data in topics_data:
        # –ü–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ—Ä–∞ —Ç–µ–º—ã
        topic_author_id = user_lookup.get(topic_data['author'])
        if not topic_author_id:
            print(f"‚ùå –ê–≤—Ç–æ—Ä —Ç–µ–º—ã {topic_data['author']} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            continue
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã forum_topics
        cursor.execute("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'forum_topics'
            ORDER BY ordinal_position;
        """)
        
        topic_columns = [row[0] for row in cursor.fetchall()]
        print(f"üìã –ö–æ–ª–æ–Ω–∫–∏ forum_topics: {topic_columns}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ–º—É –ë–ï–ó –ø–æ–ª—è slug (–µ–≥–æ –Ω–µ—Ç –≤ —Å—Ö–µ–º–µ)
        try:
            topic_title = topic_data['title']
            
            cursor.execute("""
                INSERT INTO forum_topics (
                    title, content, category_id, author_id, created_at, updated_at
                ) VALUES (%s, %s, %s, %s, %s, %s)
                RETURNING id
            """, (
                topic_title,
                topic_data['description'],
                category_id,
                topic_author_id,
                datetime.now(),
                datetime.now()
            ))
            
            topic_id = cursor.fetchone()[0]
            created_topics.append(topic_id)
            
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–µ–º–∞: {topic_title} (ID: {topic_id})")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–º—ã {topic_data['title']}: {e}")
            continue
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç—ã
        for i, post_data in enumerate(topic_data['posts']):
            user_id = user_lookup.get(post_data['user'])
            if not user_id:
                print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {post_data['user']} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ—Å—Ç")
                continue
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
            base_date = datetime.now() + timedelta(days=post_data['date_offset'])
            hour, minute = map(int, post_data['timestamp'].split(':'))
            post_time = base_date.replace(hour=hour, minute=minute, second=0, microsecond=0)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –ø–æ—Å—Ç–∞–º–∏
            post_time += timedelta(minutes=i * 2)
            
            try:
                cursor.execute("""
                    INSERT INTO forum_posts (
                        content, topic_id, author_id, created_at, updated_at
                    ) VALUES (%s, %s, %s, %s, %s)
                """, (
                    post_data['content'],
                    topic_id,
                    user_id,
                    post_time,
                    post_time
                ))
                
                print(f"   üìù –î–æ–±–∞–≤–ª–µ–Ω –ø–æ—Å—Ç –æ—Ç {post_data['user']}: {post_data['content'][:50]}...")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞: {e}")
                continue
    
    conn.commit()
    print(f"\nüéâ –°–æ–∑–¥–∞–Ω–æ {len(created_topics)} —Ç–µ–º —Å –ø–æ—Å—Ç–∞–º–∏!")
    
    return len(created_topics)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –†–ê–ë–û–ß–ò–ô –°–ö–†–ò–ü–¢ –§–û–†–£–ú–ê (–ë–ï–ó SLUG –í –¢–ï–ú–ê–•)")
    print("=" * 60)
    print(f"‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not os.environ.get('DATABASE_URL'):
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return False
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = get_production_db_connection()
    if not conn:
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ñ–æ—Ä—É–º–∞
        print("\nüìÇ –®–ê–ì 1: –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–æ—Ä—É–º–∞")
        category_id = create_forum_categories(conn)
        
        if not category_id:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é!")
            return False
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ–º—ã —Ñ–æ—Ä—É–º–∞
        print("\nüí¨ –®–ê–ì 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–º —Ñ–æ—Ä—É–º–∞")
        topics_count = create_forum_topics(conn, category_id)
        
        print(f"\nüéâ –ì–û–¢–û–í–û! –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"   - –ö–∞—Ç–µ–≥–æ—Ä–∏–π: 1")
        print(f"   - –¢–µ–º: {topics_count}")
        print("   - –ü–æ—Å—Ç–æ–≤: –º–Ω–æ–∂–µ—Å—Ç–≤–æ")
        print("\n–§–æ—Ä—É–º —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ! üì±")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        conn.rollback()
        return False
        
    finally:
        conn.close()
        print("\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.")

if __name__ == "__main__":
    main()
