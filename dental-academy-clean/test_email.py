#!/usr/bin/env python3
"""
Email Test Script for Mentora
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ email —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Brevo
"""

import os
import sys
from datetime import datetime

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ Render
os.environ['MAIL_SERVER'] = 'smtp-relay.brevo.com'
os.environ['MAIL_PORT'] = '587'
os.environ['MAIL_USE_TLS'] = 'True'
os.environ['MAIL_USERNAME'] = '96d92f002@smtp-brevo.com'  # –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Brevo
os.environ['MAIL_PASSWORD'] = 'AdHL3pP0rkRt1S8N'
os.environ['MAIL_DEFAULT_SENDER'] = 'noreply@mentora.com.in'
os.environ['FLASK_ENV'] = 'development'

# –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∞
os.environ['MAIL_SUPPRESS_SEND'] = 'False'

try:
    from app import app
    from extensions import mail
    from flask_mail import Message
    
    def test_email_configuration():
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ email"""
        print("üîß Testing Email Configuration")
        print("=" * 50)
        
        with app.app_context():
            print(f"MAIL_SERVER: {app.config.get('MAIL_SERVER')}")
            print(f"MAIL_PORT: {app.config.get('MAIL_PORT')}")
            print(f"MAIL_USE_TLS: {app.config.get('MAIL_USE_TLS')}")
            print(f"MAIL_USERNAME: {app.config.get('MAIL_USERNAME')}")
            print(f"MAIL_DEFAULT_SENDER: {app.config.get('MAIL_DEFAULT_SENDER')}")
            print(f"MAIL_SUPPRESS_SEND: {app.config.get('MAIL_SUPPRESS_SEND')}")
            print("=" * 50)
    
    def send_test_email():
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ email"""
        print("üìß Sending Test Email...")
        
        with app.app_context():
            try:
                msg = Message(
                    subject='Mentora Test Email',
                    sender=app.config['MAIL_DEFAULT_SENDER'],
                    recipients=['xapstom@gmail.com']  # –í–∞—à –ª–∏—á–Ω—ã–π email –¥–ª—è —Ç–µ—Å—Ç–∞
                )
                
                msg.body = f"""
–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç Mentora

–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {datetime.now()}
–°–µ—Ä–≤–µ—Ä: {app.config.get('MAIL_SERVER')}
–ü–æ—Ä—Ç: {app.config.get('MAIL_PORT')}
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {app.config.get('MAIL_USERNAME')}

–ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, –∑–Ω–∞—á–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ email —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Mentora
                """
                
                msg.html = f"""
                <html>
                <body>
                    <h2>ü¶∑ Mentora - –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ</h2>
                    <p>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: <strong>{datetime.now()}</strong></p>
                    
                    <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP:</h3>
                    <ul>
                        <li>–°–µ—Ä–≤–µ—Ä: {app.config.get('MAIL_SERVER')}</li>
                        <li>–ü–æ—Ä—Ç: {app.config.get('MAIL_PORT')}</li>
                        <li>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {app.config.get('MAIL_USERNAME')}</li>
                    </ul>
                    
                    <p><strong>‚úÖ –ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, –∑–Ω–∞—á–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ email —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!</strong></p>
                    
                    <hr>
                    <p><em>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ Mentora</em></p>
                </body>
                </html>
                """
                
                mail.send(msg)
                print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                return True
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞: {e}")
                print(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
                if "authentication" in str(e).lower():
                    print("üîç –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π SMTP")
                    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ MAIL_USERNAME –∏ MAIL_PASSWORD")
                elif "connection" in str(e).lower():
                    print("üîç –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É")
                    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ MAIL_SERVER –∏ MAIL_PORT")
                elif "tls" in str(e).lower() or "ssl" in str(e).lower():
                    print("üîç –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å TLS/SSL")
                    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ MAIL_USE_TLS –∏ MAIL_USE_SSL")
                
                return False
    
    def test_brevo_api_connection():
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Brevo API (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±)"""
        print("üîÑ Testing Brevo API Connection...")
        
        try:
            import requests
            
            # –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å API –∫–ª—é—á Brevo, –º–æ–∂–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ API
            # –≠—Ç–æ –±–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
            response = requests.get('https://api.brevo.com/v3/account', timeout=10)
            print(f"Brevo API response status: {response.status_code}")
            
            if response.status_code == 401:
                print("‚úÖ Brevo API —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç 401 - –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)")
            else:
                print(f"‚ÑπÔ∏è Brevo API –æ—Ç–≤–µ—Ç–∏–ª —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: {response.status_code}")
                
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Brevo API: {e}")
        except ImportError:
            print("‚ÑπÔ∏è –ú–æ–¥—É–ª—å requests –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç API")

    if __name__ == '__main__':
        print("ü¶∑ Mentora Email Test")
        print("=" * 50)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        test_email_configuration()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Brevo
        test_brevo_api_connection()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ
        print("\n")
        choice = input("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ? (y/n): ").lower().strip()
        
        if choice in ['y', 'yes', '–¥–∞', '–¥']:
            recipient = input("–í–≤–µ–¥–∏—Ç–µ email –ø–æ–ª—É—á–∞—Ç–µ–ª—è (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è xapstom@gmail.com): ").strip()
            if recipient:
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
                pass
            
            success = send_test_email()
            
            if success:
                print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç–æ–≤—ã–π —è—â–∏–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—è.")
            else:
                print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω.")
                print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –≤ Render Environment Variables.")
        else:
            print("–¢–µ—Å—Ç –æ—Ç–º–µ–Ω–µ–Ω.")

except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:")
    print("/Users/evgenijbutov/Desktop/demo/flask-app 2/dental-academy-clean/")
except Exception as e:
    print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    print(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
