#!/usr/bin/env python3
"""
–§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
"""

import os
import sys

print("ü¶∑ Mentora Registration Email Final Test")
print("=" * 60)
print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –í–°–ï —à–∞–≥–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
print()

print("üìã –ü–†–û–ë–õ–ï–ú–´ –ö–û–¢–û–†–´–ï –ë–´–õ–ò –ò–°–ü–†–ê–í–õ–ï–ù–´:")
print("-" * 40)
print("‚úÖ 1. –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –¥–æ–º–µ–Ω–æ–≤: mentora.com vs mentora.com.in")
print("‚úÖ 2. –û—à–∏–±–∫–∏ –≤ email —à–∞–±–ª–æ–Ω–∞—Ö: url_for() –≤ email")
print("‚úÖ 3. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ email_service.py")
print("‚úÖ 4. –î–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ auth_routes.py")
print()

print("üîç –ß–¢–û –¢–ï–ü–ï–†–¨ –ü–†–û–í–ï–†–Ø–ï–ú:")
print("-" * 40)
print("1. –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ email (–∫–∞–∫ –Ω–∞ /test-email)")
print("2. –§—É–Ω–∫—Ü–∏—è send_email_confirmation")
print("3. –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
print("4. –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–ª–∏—á–∏–π")
print()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
os.environ['FLASK_ENV'] = 'production'
os.environ['MAIL_SUPPRESS_SEND'] = 'false'
os.environ['MAIL_SERVER'] = 'smtp-relay.brevo.com'
os.environ['MAIL_PORT'] = '587'
os.environ['MAIL_USE_TLS'] = 'True'
os.environ['MAIL_USERNAME'] = '96d92f002@smtp-brevo.com'
os.environ['MAIL_PASSWORD'] = 'AdHL3pP0rkRt1S8N'
os.environ['MAIL_DEFAULT_SENDER'] = 'Mentora <noreply@mentora.com.in>'

try:
    from app import app
    from extensions import db, mail
    from models import User
    from utils.email_service import send_email_confirmation
    from flask_mail import Message
    
    def test_direct_email():
        """–¢–µ—Å—Ç –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ (–∫–∞–∫ test-email —Ä–∞–±–æ—Ç–∞–µ—Ç)"""
        print("üß™ –¢–ï–°–¢ 1: –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ email")
        print("-" * 50)
        
        with app.app_context():
            try:
                # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ email_test_routes.py
                msg = Message(
                    subject='üß™ Final Test - Direct Email',
                    recipients=['xapstom@gmail.com']
                )
                
                msg.html = """
                <h1>üß™ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏</h1>
                <p>–ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, –∑–Ω–∞—á–∏—Ç –ø—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ Flask-Mail —Ä–∞–±–æ—Ç–∞–µ—Ç!</p>
                """
                
                msg.body = "–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ Flask-Mail"
                
                print(f"üìß –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: OK")
                print(f"üì® –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {msg.recipients}")
                print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞...")
                
                mail.send(msg)
                
                print("‚úÖ –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –£–°–ü–ï–®–ù–ê!")
                return True
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
                return False
    
    def test_email_confirmation_function():
        """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ send_email_confirmation"""
        print("\nüß™ –¢–ï–°–¢ 2: –§—É–Ω–∫—Ü–∏—è send_email_confirmation")
        print("-" * 50)
        
        with app.app_context():
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            test_user = User(
                email='test.final@example.com',
                first_name='Final',
                last_name='Test'
            )
            test_user.id = 999
            
            test_token = 'final-test-token-123'
            
            print(f"üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.email}")
            print(f"üîë –¢–æ–∫–µ–Ω: {test_token}")
            print(f"üì§ –í—ã–∑–æ–≤ send_email_confirmation...")
            
            try:
                result = send_email_confirmation(test_user, test_token)
                
                if result:
                    print("‚úÖ send_email_confirmation –£–°–ü–ï–®–ù–ê!")
                    return True
                else:
                    print("‚ùå send_email_confirmation –≤–µ—Ä–Ω—É–ª–∞ False!")
                    return False
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ send_email_confirmation: {e}")
                import traceback
                print(f"üìã –¢—Ä–µ–π—Å–±–µ–∫: {traceback.format_exc()}")
                return False
    
    def analyze_differences():
        """–ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–ª–∏—á–∏–π –º–µ–∂–¥—É —Ä–∞–±–æ—Ç–∞—é—â–∏–º –∏ –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â–∏–º"""
        print("\nüìä –ê–ù–ê–õ–ò–ó –†–ê–ó–õ–ò–ß–ò–ô")
        print("-" * 50)
        
        print("üîÑ –†–∞–±–æ—Ç–∞—é—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å (test-email):")
        print("   1. Flask app context")
        print("   2. Message() —Å–æ–∑–¥–∞–Ω–∏–µ") 
        print("   3. mail.send() –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤")
        print("   4. ‚úÖ –£—Å–ø–µ—Ö")
        print()
        
        print("üîÑ –ü—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")
        print("   1. Flask app context")
        print("   2. send_email_confirmation() –≤—ã–∑–æ–≤")
        print("   3. ‚îî‚îÄ render_template() –¥–ª—è HTML/Text")
        print("   4. ‚îî‚îÄ Message() —Å–æ–∑–¥–∞–Ω–∏–µ")
        print("   5. ‚îî‚îÄ mail.send() –≤—ã–∑–æ–≤")
        print("   6. ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
        print()
        
        print("üí° –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:")
        print("   ‚Ä¢ –û—à–∏–±–∫–∞ –≤ render_template()")
        print("   ‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ URL –≤ —à–∞–±–ª–æ–Ω–∞—Ö") 
        print("   ‚Ä¢ –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è")
        print("   ‚Ä¢ mail –æ–±—ä–µ–∫—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    
    def recommendations():
        """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
        print("\nüìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò")
        print("-" * 50)
        
        print("üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ")
        print("2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é")
        print("3. –°–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ - —Ç–µ–ø–µ—Ä—å –≤—Å–µ –¥–µ—Ç–∞–ª—å–Ω–æ –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è")
        print("4. –ï—Å–ª–∏ email_sent = False:")
        print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç—Ä–µ–π—Å–±–µ–∫ –≤ –ª–æ–≥–∞—Ö")
        print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —à–∞–±–ª–æ–Ω—ã emails/")
        print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ mail –æ–±—ä–µ–∫—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print()
        
        print("üîß –ï–°–õ–ò –ü–†–û–ë–õ–ï–ú–ê –û–°–¢–ê–ï–¢–°–Ø:")
        print("1. –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º–µ–Ω–∏—Ç–µ send_email_confirmation –Ω–∞ –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤:")
        print("   msg = Message(...)")
        print("   mail.send(msg)")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ MAIL_SUPPRESS_SEND=false")
        print("3. –î–æ–±–∞–≤—å—Ç–µ try/except –≤ –∫–∞–∂–¥—ã–π —à–∞–≥ send_email_confirmation")
        print()
        
        print("üìß –ë–´–°–¢–†–´–ô WORKAROUND:")
        print("–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ, –º–æ–∂–Ω–æ:")
        print("‚Ä¢ –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –∏–∑ email_test_routes.py")
        print("‚Ä¢ –ó–∞–º–µ–Ω–∏—Ç—å send_email_confirmation –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π")
        print("‚Ä¢ –ò–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ")
    
    def run_final_test():
        """–ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞"""
        print("üöÄ –ó–ê–ü–£–°–ö –§–ò–ù–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ê")
        print("=" * 60)
        
        # –¢–µ—Å—Ç—ã
        test1_success = test_direct_email()
        test2_success = test_email_confirmation_function()
        
        # –ê–Ω–∞–ª–∏–∑
        analyze_differences()
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print("\nüìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´")
        print("=" * 40)
        print(f"‚úÖ –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞: {'–†–ê–ë–û–¢–ê–ï–¢' if test1_success else '–ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
        print(f"{'‚úÖ' if test2_success else '‚ùå'} Email confirmation: {'–†–ê–ë–û–¢–ê–ï–¢' if test2_success else '–ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
        
        if test1_success and test2_success:
            print("\nüéâ –û–ë–ê –¢–ï–°–¢–ê –ü–†–û–®–õ–ò!")
            print("üìß Email –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
            print("üîç –ï—Å–ª–∏ –ø–∏—Å—å–º–∞ –≤—Å–µ –µ—â–µ –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –ª–æ–≥–∏")
        elif test1_success and not test2_success:
            print("\n‚ö†Ô∏è –ù–ê–ô–î–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê!")
            print("üìß –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ send_email_confirmation –ù–ï–¢")
            print("üéØ –ü—Ä–æ–±–ª–µ–º–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ send_email_confirmation –∏–ª–∏ —à–∞–±–ª–æ–Ω–∞—Ö")
        else:
            print("\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê!")
            print("üìß –î–∞–∂–µ –ø—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations()
        
        return test1_success, test2_success
    
    if __name__ == '__main__':
        run_final_test()

except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("üîç –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
except Exception as e:
    print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    print(f"üìã –¢—Ä–µ–π—Å–±–µ–∫: {traceback.format_exc()}")
