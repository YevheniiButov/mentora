#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å email –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —à–∞–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
"""

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['MAIL_SERVER'] = 'smtp-relay.brevo.com'
os.environ['MAIL_PORT'] = '587'
os.environ['MAIL_USE_TLS'] = 'True'
os.environ['MAIL_USERNAME'] = '96d92f002@smtp-brevo.com'
os.environ['MAIL_PASSWORD'] = 'AdHL3pP0rkRt1S8N'
os.environ['MAIL_DEFAULT_SENDER'] = 'Mentora <noreply@mentora.com.in>'
os.environ['FLASK_ENV'] = 'development'

def step1_check_imports():
    """–®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã"""
    print("üìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤")
    print("-" * 40)
    
    try:
        from app import app
        print("‚úÖ app –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        from extensions import db, mail
        print("‚úÖ extensions –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        from models import User
        print("‚úÖ models –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        from utils.email_service import send_email_confirmation
        print("‚úÖ email_service –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        from flask_mail import Message
        print("‚úÖ Flask-Mail –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        return True, (app, db, mail, User, send_email_confirmation, Message)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False, None

def step2_check_config(app):
    """–®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    print("\nüìã –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print("-" * 40)
    
    with app.app_context():
        config_items = [
            ('MAIL_SERVER', app.config.get('MAIL_SERVER')),
            ('MAIL_PORT', app.config.get('MAIL_PORT')),
            ('MAIL_USE_TLS', app.config.get('MAIL_USE_TLS')),
            ('MAIL_USE_SSL', app.config.get('MAIL_USE_SSL')),
            ('MAIL_USERNAME', app.config.get('MAIL_USERNAME')),
            ('MAIL_PASSWORD', '***' if app.config.get('MAIL_PASSWORD') else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û'),
            ('MAIL_DEFAULT_SENDER', app.config.get('MAIL_DEFAULT_SENDER')),
            ('MAIL_SUPPRESS_SEND', app.config.get('MAIL_SUPPRESS_SEND')),
        ]
        
        all_ok = True
        for key, value in config_items:
            if key == 'MAIL_PASSWORD':
                status = "‚úÖ" if app.config.get('MAIL_PASSWORD') else "‚ùå"
            elif value is None:
                status = "‚ùå"
                all_ok = False
            else:
                status = "‚úÖ"
            
            print(f"{status} {key}: {value}")
        
        return all_ok

def step3_test_templates(app):
    """–®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω—ã email"""
    print("\nüìã –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ email")
    print("-" * 40)
    
    with app.app_context():
        from flask import render_template
        
        test_user = type('User', (), {
            'first_name': 'Test',
            'last_name': 'User',
            'email': 'test@example.com'
        })()
        
        confirmation_url = 'http://localhost:5000/auth/confirm-email/test-token'
        unsubscribe_url = 'http://localhost:5000/auth/unsubscribe/1'
        privacy_policy_url = 'http://localhost:5000/privacy'
        
        try:
            html_content = render_template('emails/confirm_email.html',
                                         user=test_user,
                                         confirmation_url=confirmation_url,
                                         unsubscribe_url=unsubscribe_url,
                                         privacy_policy_url=privacy_policy_url)
            print(f"‚úÖ HTML —à–∞–±–ª–æ–Ω: {len(html_content)} —Å–∏–º–≤–æ–ª–æ–≤")
            html_ok = True
        except Exception as e:
            print(f"‚ùå HTML —à–∞–±–ª–æ–Ω: {e}")
            html_ok = False
        
        try:
            text_content = render_template('emails/confirm_email.txt',
                                         user=test_user,
                                         confirmation_url=confirmation_url,
                                         unsubscribe_url=unsubscribe_url,
                                         privacy_policy_url=privacy_policy_url)
            print(f"‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω: {len(text_content)} —Å–∏–º–≤–æ–ª–æ–≤")
            text_ok = True
        except Exception as e:
            print(f"‚ùå –¢–µ–∫—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω: {e}")
            text_ok = False
        
        return html_ok and text_ok

def step4_test_mail_object(app, mail):
    """–®–∞–≥ 4: –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç Mail"""
    print("\nüìã –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä–µ–∫—Ç–∞ Mail")
    print("-" * 40)
    
    with app.app_context():
        try:
            print(f"‚úÖ Mail –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω: {mail is not None}")
            print(f"‚úÖ Mail –ø—Ä–∏–≤—è–∑–∞–Ω –∫ app: {hasattr(mail, 'app') and mail.app is not None}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ Mail –æ–±—ä–µ–∫—Ç–∞: {e}")
            return False

def step5_test_message_creation(app, mail, Message):
    """–®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    print("\nüìã –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
    print("-" * 40)
    
    with app.app_context():
        try:
            msg = Message(
                subject='Test Email - Mentora',
                recipients=['test@example.com'],
                sender=app.config['MAIL_DEFAULT_SENDER']
            )
            
            msg.body = "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
            msg.html = "<h1>–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</h1>"
            
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            print(f"üìß –¢–µ–º–∞: {msg.subject}")
            print(f"üì® –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {msg.recipients}")
            print(f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {msg.sender}")
            
            return True, msg
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return False, None

def step6_test_smtp_connection():
    """–®–∞–≥ 6: –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SMTP"""
    print("\nüìã –®–∞–≥ 6: –ü—Ä—è–º–æ–µ SMTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
    print("-" * 40)
    
    import smtplib
    
    try:
        server = smtplib.SMTP('smtp-relay.brevo.com', 587)
        server.starttls()
        server.login('96d92f002@smtp-brevo.com', 'AdHL3pP0rkRt1S8N')
        print("‚úÖ SMTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
        server.quit()
        return True
    except Exception as e:
        print(f"‚ùå SMTP –æ—à–∏–±–∫–∞: {e}")
        return False

def step7_test_email_service(app, send_email_confirmation, User):
    """–®–∞–≥ 7: –¢–µ—Å—Ç–∏—Ä—É–µ–º email service"""
    print("\nüìã –®–∞–≥ 7: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ email service")
    print("-" * 40)
    
    with app.app_context():
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î)
        test_user = User(
            email='test.diagnosis@example.com',
            first_name='Test',
            last_name='Diagnosis'
        )
        test_user.id = 999  # –§–µ–π–∫–æ–≤—ã–π ID
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω
        test_token = 'test-token-123'
        
        try:
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤ —Ä–µ–∂–∏–º –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è —Ç–µ—Å—Ç–∞
            original_suppress = app.config.get('MAIL_SUPPRESS_SEND')
            app.config['MAIL_SUPPRESS_SEND'] = True
            
            result = send_email_confirmation(test_user, test_token)
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            app.config['MAIL_SUPPRESS_SEND'] = original_suppress
            
            if result:
                print("‚úÖ Email service —Ä–∞–±–æ—Ç–∞–µ—Ç")
                return True
            else:
                print("‚ùå Email service –≤–µ—Ä–Ω—É–ª False")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ email service: {e}")
            return False

def run_diagnosis():
    """–ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É"""
    print("ü¶∑ Mentora Email Diagnosis")
    print("=" * 50)
    print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —à–∞–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email\n")
    
    # –®–∞–≥ 1: –ò–º–ø–æ—Ä—Ç—ã
    imports_ok, modules = step1_check_imports()
    if not imports_ok:
        print("‚ùå –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–∞")
        return
    
    app, db, mail, User, send_email_confirmation, Message = modules
    
    # –®–∞–≥ 2: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    config_ok = step2_check_config(app)
    
    # –®–∞–≥ 3: –®–∞–±–ª–æ–Ω—ã
    templates_ok = step3_test_templates(app)
    
    # –®–∞–≥ 4: Mail –æ–±—ä–µ–∫—Ç
    mail_ok = step4_test_mail_object(app, mail)
    
    # –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    message_ok, test_msg = step5_test_message_creation(app, mail, Message)
    
    # –®–∞–≥ 6: SMTP
    smtp_ok = step6_test_smtp_connection()
    
    # –®–∞–≥ 7: Email service
    service_ok = step7_test_email_service(app, send_email_confirmation, User)
    
    # –ò—Ç–æ–≥–∏
    print("\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò")
    print("=" * 50)
    
    results = [
        ("–ò–º–ø–æ—Ä—Ç—ã", imports_ok),
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", config_ok),
        ("–®–∞–±–ª–æ–Ω—ã", templates_ok),
        ("Mail –æ–±—ä–µ–∫—Ç", mail_ok),
        ("–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è", message_ok),
        ("SMTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ", smtp_ok),
        ("Email service", service_ok)
    ]
    
    all_ok = True
    for step, result in results:
        status = "‚úÖ" if result else "‚ùå"
        print(f"{status} {step}")
        if not result:
            all_ok = False
    
    print("\nüìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("-" * 30)
    
    if not config_ok:
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env —Ñ–∞–π–ª–µ")
    
    if not templates_ok:
        print("üé® –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —à–∞–±–ª–æ–Ω—ã emails –≤ templates/emails/")
    
    if not smtp_ok:
        print("üìß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –≤ Brevo –ø–∞–Ω–µ–ª–∏")
    
    if not service_ok:
        print("‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–∫—É –≤ utils/email_service.py")
    
    if all_ok:
        print("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üìß Email –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("\nüí° –ï—Å–ª–∏ –ø–∏—Å—å–º–∞ –≤—Å–µ –µ—â–µ –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ø–∞–º-–ø–∞–ø–∫—É")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ MAIL_SUPPRESS_SEND=false –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Render.com")
    else:
        print("‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å")

if __name__ == '__main__':
    try:
        run_diagnosis()
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        import traceback
        print(f"üìã –¢—Ä–µ–π—Å–±–µ–∫:\n{traceback.format_exc()}")
