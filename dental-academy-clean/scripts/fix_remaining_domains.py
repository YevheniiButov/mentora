#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–æ–º–µ–Ω–æ–≤
–î–æ–±–∞–≤–ª—è–µ—Ç DIAGNOSIS_SPECIAL –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –º–∞–ø–ø–∏–Ω–≥ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app import app
from models import BIGDomain, Question
from extensions import db

def add_missing_domain():
    """–î–æ–±–∞–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π –¥–æ–º–µ–Ω DIAGNOSIS_SPECIAL"""
    
    print('üîß –î–û–ë–ê–í–õ–ï–ù–ò–ï –î–û–ú–ï–ù–ê DIAGNOSIS_SPECIAL')
    print('=' * 50)
    
    with app.app_context():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –¥–æ–º–µ–Ω
        existing_domain = BIGDomain.query.filter_by(code='DIAGNOSIS_SPECIAL').first()
        
        if existing_domain:
            print('‚ö†Ô∏è  –î–æ–º–µ–Ω DIAGNOSIS_SPECIAL —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            return existing_domain
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–æ–º–µ–Ω
        new_domain = BIGDomain(
            code='DIAGNOSIS_SPECIAL',
            name='Special Diagnosis',
            description='Special diagnostic procedures and techniques',
            weight_percentage=5.0,
            is_active=True
        )
        
        try:
            db.session.add(new_domain)
            db.session.commit()
            print(f'‚úÖ –î–æ–º–µ–Ω DIAGNOSIS_SPECIAL —Å–æ–∑–¥–∞–Ω (ID: {new_domain.id})')
            return new_domain
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ–º–µ–Ω–∞: {e}')
            db.session.rollback()
            return None

def fix_domain_mappings():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –º–∞–ø–ø–∏–Ω–≥ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤"""
    
    print('\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ê–ü–ü–ò–ù–ì–ê –û–°–¢–ê–õ–¨–ù–´–• –î–û–ú–ï–ù–û–í')
    print('=' * 60)
    
    with app.app_context():
        # –ú–∞–ø–ø–∏–Ω–≥ –¥–æ–º–µ–Ω–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        domain_mappings = {
            'DUTCH': 'DUTCH',
            'PROFESSIONAL': 'PROFESSIONAL', 
            'SPECIAL': 'SPECIAL'
        }
        
        fixed_count = 0
        
        for old_domain, new_domain_code in domain_mappings.items():
            print(f'\nüìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞ {old_domain} -> {new_domain_code}')
            
            # –ù–∞–π–¥–µ–º —Ü–µ–ª–µ–≤–æ–π –¥–æ–º–µ–Ω
            target_domain = BIGDomain.query.filter_by(code=new_domain_code).first()
            
            if not target_domain:
                print(f'   ‚ùå –î–æ–º–µ–Ω {new_domain_code} –Ω–µ –Ω–∞–π–¥–µ–Ω')
                continue
            
            # –ù–∞–π–¥–µ–º –≤–æ–ø—Ä–æ—Å—ã —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –º–∞–ø–ø–∏–Ω–≥–æ–º
            questions = Question.query.filter_by(domain=old_domain).all()
            
            if not questions:
                print(f'   ‚ö†Ô∏è  –ù–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ —Å domain="{old_domain}"')
                continue
            
            print(f'   üìä –ù–∞–π–¥–µ–Ω–æ {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è')
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –º–∞–ø–ø–∏–Ω–≥
            for question in questions:
                old_big_domain_id = question.big_domain_id
                question.big_domain_id = target_domain.id
                question.domain = new_domain_code
                fixed_count += 1
                print(f'   ‚úÖ –í–æ–ø—Ä–æ—Å {question.id}: {old_domain} -> {new_domain_code}')
            
            try:
                db.session.commit()
                print(f'   ‚úÖ –ú–∞–ø–ø–∏–Ω–≥ –¥–ª—è {old_domain} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω')
                
            except Exception as e:
                print(f'   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}')
                db.session.rollback()
        
        return fixed_count

def verify_fixes():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"""
    
    print('\nüîç –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í')
    print('=' * 40)
    
    with app.app_context():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–º–µ–Ω DIAGNOSIS_SPECIAL
        diag_special = BIGDomain.query.filter_by(code='DIAGNOSIS_SPECIAL').first()
        if diag_special:
            questions_count = Question.query.filter_by(big_domain_id=diag_special.id).count()
            print(f'üìä –î–æ–º–µ–Ω DIAGNOSIS_SPECIAL: {questions_count} –≤–æ–ø—Ä–æ—Å–æ–≤')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã
        domains_to_check = ['DUTCH', 'PROFESSIONAL', 'SPECIAL']
        
        for domain_code in domains_to_check:
            domain = BIGDomain.query.filter_by(code=domain_code).first()
            if domain:
                questions_count = Question.query.filter_by(big_domain_id=domain.id).count()
                print(f'üìä –î–æ–º–µ–Ω {domain_code}: {questions_count} –≤–æ–ø—Ä–æ—Å–æ–≤')
            else:
                print(f'‚ùå –î–æ–º–µ–Ω {domain_code} –Ω–µ –Ω–∞–π–¥–µ–Ω')
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print(f'\nüìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:')
        domains = BIGDomain.query.filter_by(is_active=True).order_by(BIGDomain.code).all()
        
        total_questions = 0
        domains_with_questions = 0
        
        for domain in domains:
            questions_count = Question.query.filter_by(big_domain_id=domain.id).count()
            total_questions += questions_count
            
            if questions_count > 0:
                domains_with_questions += 1
                print(f'   ‚úÖ {domain.code}: {questions_count} –≤–æ–ø—Ä–æ—Å–æ–≤')
            else:
                print(f'   ‚ö†Ô∏è  {domain.code}: 0 –≤–æ–ø—Ä–æ—Å–æ–≤ (–ø—É—Å—Ç–æ–π)')
        
        print(f'\nüìä –ò–¢–û–ì–û:')
        print(f'   –í—Å–µ–≥–æ –¥–æ–º–µ–Ω–æ–≤: {len(domains)}')
        print(f'   –î–æ–º–µ–Ω–æ–≤ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏: {domains_with_questions}')
        print(f'   –ü—É—Å—Ç—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {len(domains) - domains_with_questions}')
        print(f'   –í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {total_questions}')

if __name__ == '__main__':
    print('üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–æ–º–µ–Ω–æ–≤...')
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π –¥–æ–º–µ–Ω
    new_domain = add_missing_domain()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –º–∞–ø–ø–∏–Ω–≥
    fixed_count = fix_domain_mappings()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    verify_fixes()
    
    print('\n‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')


