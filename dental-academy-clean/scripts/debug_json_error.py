#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –æ—à–∏–±–∫–∏ JSON —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏
"""
import os
import sys
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from app import app
from models import db, User, WebsiteVisit, UserSession, PageView

def debug_json_error():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É JSON —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏"""
    
    with app.app_context():
        try:
            print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–®–ò–ë–ö–ò JSON –°–ï–†–ò–ê–õ–ò–ó–ê–¶–ò–ò")
            print("=" * 60)
            
            # –¢–µ—Å—Ç 1: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º)
            print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
            try:
                # –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å Row –æ–±—ä–µ–∫—Ç—ã
                popular_pages = db.session.query(
                    PageView.page_url,
                    db.func.count(PageView.id).label('visits'),
                    db.func.count(db.func.distinct(PageView.user_id)).label('unique_visitors')
                ).group_by(PageView.page_url).order_by(
                    db.func.count(PageView.id).desc()
                ).limit(10).all()
                
                print(f"   –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {len(popular_pages)}")
                
                # –ü—Ä–æ–±—É–µ–º —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å Row –æ–±—ä–µ–∫—Ç—ã
                pages_data = []
                for page in popular_pages:
                    pages_data.append({
                        'page_url': page.page_url,
                        'visits': page.visits,
                        'unique_visitors': page.unique_visitors
                    })
                
                json.dumps(pages_data)
                print("   ‚úÖ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã - OK")
                
            except Exception as e:
                print(f"   ‚ùå –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –û–®–ò–ë–ö–ê: {e}")
                print(f"   –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
                
                # –ü—Ä–æ–±—É–µ–º —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å Row –æ–±—ä–µ–∫—Ç—ã –Ω–∞–ø—Ä—è–º—É—é
                try:
                    json.dumps(popular_pages)
                    print("   ‚ùå Row –æ–±—ä–µ–∫—Ç—ã –Ω–∞–ø—Ä—è–º—É—é - –û–®–ò–ë–ö–ê")
                except Exception as e2:
                    print(f"   ‚ùå Row –æ–±—ä–µ–∫—Ç—ã –Ω–∞–ø—Ä—è–º—É—é - –û–®–ò–ë–ö–ê: {e2}")
            
            # –¢–µ—Å—Ç 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º
            print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å—Ç—Ä–∞–Ω–∞–º...")
            try:
                country_stats = db.session.query(
                    WebsiteVisit.country,
                    db.func.count(WebsiteVisit.id).label('visits'),
                    db.func.count(db.func.distinct(WebsiteVisit.user_id)).label('unique_visitors')
                ).group_by(WebsiteVisit.country).order_by(
                    db.func.count(WebsiteVisit.id).desc()
                ).limit(10).all()
                
                print(f"   –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–∞–Ω: {len(country_stats)}")
                
                # –ü—Ä–æ–±—É–µ–º —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å Row –æ–±—ä–µ–∫—Ç—ã
                countries_data = []
                for country in country_stats:
                    countries_data.append({
                        'country': country.country,
                        'visits': country.visits,
                        'unique_visitors': country.unique_visitors
                    })
                
                json.dumps(countries_data)
                print("   ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º - OK")
                
            except Exception as e:
                print(f"   ‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º - –û–®–ò–ë–ö–ê: {e}")
                print(f"   –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
            
            # –¢–µ—Å—Ç 3: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±—Ä–∞—É–∑–µ—Ä–∞–º
            print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –±—Ä–∞—É–∑–µ—Ä–∞–º...")
            try:
                browser_stats = db.session.query(
                    WebsiteVisit.browser,
                    db.func.count(WebsiteVisit.id).label('visits')
                ).group_by(WebsiteVisit.browser).order_by(
                    db.func.count(WebsiteVisit.id).desc()
                ).limit(10).all()
                
                print(f"   –ù–∞–π–¥–µ–Ω–æ –±—Ä–∞—É–∑–µ—Ä–æ–≤: {len(browser_stats)}")
                
                # –ü—Ä–æ–±—É–µ–º —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å Row –æ–±—ä–µ–∫—Ç—ã
                browsers_data = []
                for browser in browser_stats:
                    browsers_data.append({
                        'browser': browser.browser,
                        'visits': browser.visits
                    })
                
                json.dumps(browsers_data)
                print("   ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±—Ä–∞—É–∑–µ—Ä–∞–º - OK")
                
            except Exception as e:
                print(f"   ‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±—Ä–∞—É–∑–µ—Ä–∞–º - –û–®–ò–ë–ö–ê: {e}")
                print(f"   –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
            
            # –¢–µ—Å—Ç 4: –ü–æ—á–∞—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—á–∞—Å–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
            try:
                hourly_stats = db.session.query(
                    db.func.extract('hour', WebsiteVisit.created_at).label('hour'),
                    db.func.count(WebsiteVisit.id).label('visits')
                ).group_by(
                    db.func.extract('hour', WebsiteVisit.created_at)
                ).order_by('hour').all()
                
                print(f"   –ù–∞–π–¥–µ–Ω–æ —á–∞—Å–æ–≤: {len(hourly_stats)}")
                
                # –ü—Ä–æ–±—É–µ–º —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å Row –æ–±—ä–µ–∫—Ç—ã
                hours_data = []
                for hour in hourly_stats:
                    hours_data.append({
                        'hour': int(hour.hour) if hour.hour else 0,
                        'visits': hour.visits
                    })
                
                json.dumps(hours_data)
                print("   ‚úÖ –ü–æ—á–∞—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - OK")
                
            except Exception as e:
                print(f"   ‚ùå –ü–æ—á–∞—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –û–®–ò–ë–ö–ê: {e}")
                print(f"   –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
            
            print("\n‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {str(e)}")
            import traceback
            traceback.print_exc()
            sys.exit(1)

if __name__ == "__main__":
    debug_json_error()
