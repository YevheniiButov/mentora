#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–ª–∞–Ω–æ–≤ –æ–±—É—á–µ–Ω–∏—è
–î–æ–±–∞–≤–ª—è–µ—Ç –¥–∞—Ç—ã –ø–µ—Ä–µ–æ—Ü–µ–Ω–∫–∏ –¥–ª—è –ø–ª–∞–Ω–æ–≤ –±–µ–∑ –Ω–∏—Ö
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app import app
from models import db, PersonalLearningPlan
from datetime import date, timedelta

def update_existing_plans():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–ª–∞–Ω—ã –æ–±—É—á–µ–Ω–∏—è —Å –¥–∞—Ç–∞–º–∏ –ø–µ—Ä–µ–æ—Ü–µ–Ω–∫–∏"""
    
    with app.app_context():
        print("üîç –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–ª–∞–Ω–æ–≤ –æ–±—É—á–µ–Ω–∏—è...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–ª–∞–Ω—ã –±–µ–∑ –¥–∞—Ç—ã –ø–µ—Ä–µ–æ—Ü–µ–Ω–∫–∏
        plans_to_update = PersonalLearningPlan.query.filter(
            PersonalLearningPlan.status == 'active',
            PersonalLearningPlan.next_diagnostic_date.is_(None)
        ).all()
        
        print(f"üîç –ù–∞–π–¥–µ–Ω–æ –ø–ª–∞–Ω–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {len(plans_to_update)}")
        
        updated_count = 0
        for plan in plans_to_update:
            try:
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –ø–µ—Ä–µ–æ—Ü–µ–Ω–∫–∏ –Ω–∞ 14 –¥–Ω–µ–π –æ—Ç —Å–µ–≥–æ–¥–Ω—è
                plan.next_diagnostic_date = date.today() + timedelta(days=14)
                plan.diagnostic_reminder_sent = False
                
                print(f"üîç –û–±–Ω–æ–≤–ª–µ–Ω –ø–ª–∞–Ω {plan.id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {plan.user_id}")
                updated_count += 1
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞ {plan.id}: {e}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        try:
            db.session.commit()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø–ª–∞–Ω–æ–≤: {updated_count}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π: {e}")
            db.session.rollback()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞–Ω—ã —Å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –ø–µ—Ä–µ–æ—Ü–µ–Ω–∫–æ–π
        overdue_plans = PersonalLearningPlan.query.filter(
            PersonalLearningPlan.status == 'active',
            PersonalLearningPlan.next_diagnostic_date <= date.today()
        ).all()
        
        print(f"üîç –ü–ª–∞–Ω–æ–≤ —Å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –ø–µ—Ä–µ–æ—Ü–µ–Ω–∫–æ–π: {len(overdue_plans)}")
        
        for plan in overdue_plans:
            print(f"‚ö†Ô∏è  –ü–ª–∞–Ω {plan.id} (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {plan.user_id}): –ø–µ—Ä–µ–æ—Ü–µ–Ω–∫–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ —Å {plan.next_diagnostic_date}")

if __name__ == '__main__':
    update_existing_plans() 