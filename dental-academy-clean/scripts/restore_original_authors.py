#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤ —Ç–µ–º
"""

import os
import sys

def restore_original_authors():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤ —Ç–µ–º"""
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
        project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        sys.path.insert(0, project_root)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from app import app
        from extensions import db
        from models import ForumCategory, ForumTopic, User
        
        print("üîç Restoring original topic authors...")
        
        with app.app_context():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
            try:
                db.session.execute(db.text("SELECT 1"))
                print("‚úÖ Database connection successful")
            except Exception as e:
                print(f"‚ùå Database connection failed: {str(e)}")
                return False
            
            # –ù–∞—Ö–æ–¥–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
            admin_user = User.query.filter_by(email='admin@mentora.com').first()
            if not admin_user:
                print("‚ùå Admin user not found!")
                return False
            
            print(f"‚úÖ Found admin user: {admin_user.first_name} {admin_user.last_name}")
            
            # –ù–∞—Ö–æ–¥–∏–º –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç
            your_user = User.query.filter_by(email='test@mentora.com.in').first()
            if not your_user:
                print("‚ùå Your user account not found!")
                return False
            
            print(f"‚úÖ Found your user: {your_user.first_name} {your_user.last_name}")
            
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ä–æ–≤ —Ç–µ–º
            print(f"\nüîÑ Restoring topic authors...")
            
            all_topics = ForumTopic.query.all()
            
            for topic in all_topics:
                # –¢–µ–º–∞ "bi exam" –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏
                if topic.title == 'bi exam':
                    topic.author_id = your_user.id
                    print(f"‚úÖ '{topic.title}' -> {your_user.first_name} {your_user.last_name}")
                else:
                    # –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã –æ—Ç –∞–¥–º–∏–Ω–∞
                    topic.author_id = admin_user.id
                    print(f"‚úÖ '{topic.title}' -> {admin_user.first_name} {admin_user.last_name}")
            
            db.session.commit()
            print(f"\nüéâ Successfully restored original authors!")
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —É–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            print(f"\nüóëÔ∏è Removing Ukrainian users...")
            
            ukrainian_emails = [
                'oleksandr.petrenko@example.com',
                'maria.kovalenko@example.com',
                'andrii.shevchenko@example.com',
                'olena.bondarenko@example.com',
                'dmytro.melnyk@example.com',
                'natalia.tkachenko@example.com',
                'serhii.morozhenko@example.com',
                'irina.levchenko@example.com'
            ]
            
            for email in ukrainian_emails:
                user = User.query.filter_by(email=email).first()
                if user:
                    print(f"üóëÔ∏è Removing user: {user.first_name} {user.last_name} ({email})")
                    db.session.delete(user)
            
            db.session.commit()
            print(f"‚úÖ Removed all Ukrainian users!")
            
            return True
            
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ Original Authors Restorer")
    print("=" * 50)
    
    success = restore_original_authors()
    
    if success:
        print("‚úÖ Script completed successfully!")
        sys.exit(0)
    else:
        print("‚ùå Script failed!")
        sys.exit(1)

if __name__ == '__main__':
    main()
