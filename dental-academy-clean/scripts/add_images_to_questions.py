#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫ –≤–æ–ø—Ä–æ—Å–∞–º
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app import app
from models import Question
from extensions import db

def add_images_to_questions():
    """–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ –≤–æ–ø—Ä–æ—Å–∞–º"""
    
    print('üñºÔ∏è  –î–û–ë–ê–í–õ–ï–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ö –í–û–ü–†–û–°–ê–ú')
    print('=' * 50)
    
    # –ú–∞–ø–ø–∏–Ω–≥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫ –≤–æ–ø—Ä–æ—Å–∞–º
    image_mapping = {
        # COMMUNICATION –≤–æ–ø—Ä–æ—Å—ã
        1: 'xray_healthy_teeth.jpg',  # –í–æ–ø—Ä–æ—Å –æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º
        2: 'xray_filling.jpg',        # –í–æ–ø—Ä–æ—Å –æ–± –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–æ–≥–ª–∞—Å–∏–∏
        3: 'xray_healthy_teeth.jpg',  # –í–æ–ø—Ä–æ—Å –æ –∫—É–ª—å—Ç—É—Ä–Ω–æ–π —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        4: 'xray_endodontic.jpg',     # –í–æ–ø—Ä–æ—Å –æ –ø–µ—Ä–µ–¥–∞—á–µ –ø–ª–æ—Ö–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
        5: 'xray_healthy_teeth.jpg',  # –í–æ–ø—Ä–æ—Å –æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏
        
        # PRACTICAL_SKILLS –≤–æ–ø—Ä–æ—Å—ã
        6: 'xray_filling.jpg',        # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–Ω—Ç–≥–µ–Ω–æ–≥—Ä–∞–º–º
        7: 'xray_endodontic.jpg',     # –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏
        8: 'xray_healthy_teeth.jpg',  # –ö–æ–Ω—Ç—Ä–æ–ª—å –∏–Ω—Ñ–µ–∫—Ü–∏–∏
        9: 'xray_healthy_teeth.jpg',  # –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
        10: 'xray_healthy_teeth.jpg', # –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏
        
        # STATISTICS –≤–æ–ø—Ä–æ—Å—ã
        11: 'xray_filling.jpg',       # –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
        12: 'xray_healthy_teeth.jpg', # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        13: 'xray_healthy_teeth.jpg', # –≠–ø–∏–¥–µ–º–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏
        14: 'xray_healthy_teeth.jpg', # –û—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞—Ö —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è
        15: 'xray_healthy_teeth.jpg', # –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å
        
        # TREATMENT_PLANNING –≤–æ–ø—Ä–æ—Å—ã
        16: 'xray_endodontic.jpg',    # –ê–Ω–∞–ª–∏–∑ —Å–ª—É—á–∞—è –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        17: 'xray_filling.jpg',       # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ª–µ—á–µ–Ω–∏—è
        18: 'xray_healthy_teeth.jpg', # –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤
        19: 'xray_filling.jpg',       # –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞
        20: 'xray_endodontic.jpg',    # –ú—É–ª—å—Ç–∏–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞—Ä–Ω–∞—è –ø–æ–º–æ—â—å
    }
    
    with app.app_context():
        updated_count = 0
        
        for question_id, image_filename in image_mapping.items():
            question = Question.query.get(question_id)
            
            if question:
                old_image = question.image_url
                question.image_url = image_filename
                
                print(f'‚úÖ –í–æ–ø—Ä–æ—Å {question_id}: {old_image or "–Ω–µ—Ç"} -> {image_filename}')
                updated_count += 1
            else:
                print(f'‚ùå –í–æ–ø—Ä–æ—Å {question_id} –Ω–µ –Ω–∞–π–¥–µ–Ω')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        try:
            db.session.commit()
            print(f'\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:')
            print(f'   –û–±–Ω–æ–≤–ª–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {updated_count}')
            print(f'   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–æ: {updated_count}')
            return True
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}')
            db.session.rollback()
            return False

def verify_images():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    
    print('\nüîç –ü–†–û–í–ï–†–ö–ê –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô')
    print('=' * 40)
    
    with app.app_context():
        questions_with_images = Question.query.filter(Question.image_url.isnot(None)).all()
        
        print(f'üìä –í–æ–ø—Ä–æ—Å–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {len(questions_with_images)}')
        
        if questions_with_images:
            print('\nüìã –°–ü–ò–°–û–ö –í–û–ü–†–û–°–û–í –° –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò:')
            for question in questions_with_images:
                print(f'   –í–æ–ø—Ä–æ—Å {question.id}: {question.image_url}')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –ø–∞–ø–∫–µ static
        static_images_dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static', 'images')
        
        if os.path.exists(static_images_dir):
            print(f'\nüìÅ –ü–∞–ø–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {static_images_dir}')
            
            # –°–ø–∏—Å–æ–∫ —Ç—Ä–µ–±—É–µ–º—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            required_images = ['xray_healthy_teeth.jpg', 'xray_filling.jpg', 'xray_endodontic.jpg']
            
            for image in required_images:
                image_path = os.path.join(static_images_dir, image)
                if os.path.exists(image_path):
                    print(f'   ‚úÖ {image} - –Ω–∞–π–¥–µ–Ω')
                else:
                    print(f'   ‚ùå {image} - –ù–ï –ù–ê–ô–î–ï–ù')
        else:
            print(f'\n‚ùå –ü–∞–ø–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {static_images_dir}')

if __name__ == '__main__':
    print('üöÄ –ó–∞–ø—É—Å–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫ –≤–æ–ø—Ä–æ—Å–∞–º...')
    
    success = add_images_to_questions()
    
    if success:
        verify_images()
        print('\n‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!')
    else:
        print('\n‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!')


