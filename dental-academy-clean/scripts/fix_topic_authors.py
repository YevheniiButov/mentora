#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–æ–≤ —Ç–µ–º
"""

import os
import sys

def fix_topic_authors():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∞–≤—Ç–æ—Ä–æ–≤ —Ç–µ–º"""
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
        project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        sys.path.insert(0, project_root)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from app import app
        from extensions import db
        from models import ForumCategory, ForumTopic, User
        
        print("üîç Fixing topic authors...")
        
        with app.app_context():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
            try:
                db.session.execute(db.text("SELECT 1"))
                print("‚úÖ Database connection successful")
            except Exception as e:
                print(f"‚ùå Database connection failed: {str(e)}")
                return False
            
            # –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —É–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            ukrainian_users = [
                {'first_name': '–û–ª–µ–∫—Å–∞–Ω–¥—Ä', 'last_name': '–ü–µ—Ç—Ä–µ–Ω–∫–æ', 'email': 'oleksandr.petrenko@example.com'},
                {'first_name': '–ú–∞—Ä—ñ—è', 'last_name': '–ö–æ–≤–∞–ª–µ–Ω–∫–æ', 'email': 'maria.kovalenko@example.com'},
                {'first_name': '–ê–Ω–¥—Ä—ñ–π', 'last_name': '–®–µ–≤—á–µ–Ω–∫–æ', 'email': 'andrii.shevchenko@example.com'},
                {'first_name': '–û–ª–µ–Ω–∞', 'last_name': '–ë–æ–Ω–¥–∞—Ä–µ–Ω–∫–æ', 'email': 'olena.bondarenko@example.com'},
                {'first_name': '–î–º–∏—Ç—Ä–æ', 'last_name': '–ú–µ–ª—å–Ω–∏–∫', 'email': 'dmytro.melnyk@example.com'},
                {'first_name': '–ù–∞—Ç–∞–ª—ñ—è', 'last_name': '–¢–∫–∞—á–µ–Ω–∫–æ', 'email': 'natalia.tkachenko@example.com'},
                {'first_name': '–°–µ—Ä–≥—ñ–π', 'last_name': '–ú–æ—Ä–æ–∑–µ–Ω–∫–æ', 'email': 'serhii.morozhenko@example.com'},
                {'first_name': '–Ü—Ä–∏–Ω–∞', 'last_name': '–õ–µ–≤—á–µ–Ω–∫–æ', 'email': 'irina.levchenko@example.com'}
            ]
            
            created_users = []
            
            for user_data in ukrainian_users:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                existing_user = User.query.filter_by(email=user_data['email']).first()
                
                if not existing_user:
                    print(f"üë§ Creating Ukrainian user: {user_data['first_name']} {user_data['last_name']}")
                    new_user = User(
                        email=user_data['email'],
                        first_name=user_data['first_name'],
                        last_name=user_data['last_name'],
                        role='user',
                        is_active=True
                    )
                    db.session.add(new_user)
                    db.session.commit()
                    created_users.append(new_user)
                    print(f"‚úÖ Created user: {new_user.first_name} {new_user.last_name}")
                else:
                    created_users.append(existing_user)
                    print(f"‚è≠Ô∏è User already exists: {existing_user.first_name} {existing_user.last_name}")
            
            # –ù–∞—Ö–æ–¥–∏–º —Ç–µ–º—É —Å –≤–∞—à–∏–º –∏–º–µ–Ω–µ–º
            your_topic = ForumTopic.query.filter_by(title='bi exam').first()
            
            if your_topic:
                print(f"\nüîß Found topic with your name: '{your_topic.title}'")
                print(f"Current author: {your_topic.author.first_name} {your_topic.author.last_name}")
                
                # –ú–µ–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∞ –Ω–∞ –ø–µ—Ä–≤–æ–≥–æ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if created_users:
                    new_author = created_users[0]
                    old_author = your_topic.author
                    
                    your_topic.author_id = new_author.id
                    db.session.commit()
                    
                    print(f"‚úÖ Changed author from '{old_author.first_name} {old_author.last_name}' to '{new_author.first_name} {new_author.last_name}'")
                else:
                    print("‚ùå No Ukrainian users available")
            else:
                print("‚ùå Topic 'bi exam' not found")
            
            # –ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã –º–µ–∂–¥—É —É–∫—Ä–∞–∏–Ω—Å–∫–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
            print(f"\nüîÑ Redistributing other topics...")
            
            all_topics = ForumTopic.query.all()
            ukrainian_user_index = 0
            
            for topic in all_topics:
                if topic.title != 'bi exam':  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ç–µ–º—É
                    # –ú–µ–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    new_author = created_users[ukrainian_user_index % len(created_users)]
                    old_author = topic.author
                    
                    topic.author_id = new_author.id
                    db.session.commit()
                    
                    print(f"‚úÖ '{topic.title}' -> {new_author.first_name} {new_author.last_name}")
                    
                    ukrainian_user_index += 1
            
            print(f"\nüéâ Successfully fixed all topic authors!")
            return True
            
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ Topic Authors Fixer")
    print("=" * 50)
    
    success = fix_topic_authors()
    
    if success:
        print("‚úÖ Script completed successfully!")
        sys.exit(0)
    else:
        print("‚ùå Script failed!")
        sys.exit(1)

if __name__ == '__main__':
    main()
