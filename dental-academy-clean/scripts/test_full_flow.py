import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app import app
from extensions import db
from models import User
from datetime import datetime, timezone

def create_test_user():
    with app.app_context():
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_email = f"test_{datetime.now().strftime('%Y%m%d_%H%M%S')}@example.com"
        
        user = User(
            email=test_email,
            username=f"test_user_{datetime.now().strftime('%H%M%S')}",
            first_name="Test",
            last_name="User",
            requires_diagnostic=True,  # –í–∞–∂–Ω–æ!
            registration_completed=True,
            email_verified=True
        )
        user.set_password("testpass123")
        
        db.session.add(user)
        db.session.commit()
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_email}")
        print(f"   ID: {user.id}")
        print(f"   –ü–∞—Ä–æ–ª—å: testpass123")
        print(f"   requires_diagnostic: {user.requires_diagnostic}")
        print("\nüîó –¢–µ–ø–µ—Ä—å:")
        print(f"   1. –í–æ–π–¥–∏ –≤ —Å–∏—Å—Ç–µ–º—É —Å —ç—Ç–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
        print(f"   2. –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É")
        print(f"   3. –ü–æ—Å–ª–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä—å daily plan")
        
        return user.id, test_email

def test_integration_with_new_user():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    with app.app_context():
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id, email = create_test_user()
        
        print(f"\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–ê –ù–û–í–û–ú –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï: {email}")
        print("=" * 70)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        from scripts.check_integration import run_integration_check
        run_integration_check(email)

if __name__ == '__main__':
    test_integration_with_new_user() 