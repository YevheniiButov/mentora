#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å –ø–ª–∞–Ω–∞–º–∏ –æ–±—É—á–µ–Ω–∏—è
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –Ω–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app import app
from utils.calendar_plan_integration import CalendarPlanIntegration
from utils.daily_learning_algorithm import DailyLearningAlgorithm
import json

def test_calendar_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å –ø–ª–∞–Ω–∞–º–∏"""
    print("üß™ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ö–ê–õ–ï–ù–î–ê–†–Ø –° –ü–õ–ê–ù–ê–ú–ò")
    print("=" * 50)
    
    with app.app_context():
        # –¢–µ—Å—Ç 1: CalendarPlanIntegration
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç CalendarPlanIntegration...")
        integration = CalendarPlanIntegration()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω
        plan_result = integration.get_detailed_plan_for_calendar(6, 30)
        
        if plan_result.get('success'):
            print("‚úÖ CalendarPlanIntegration —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            plan = plan_result.get('plan', {})
            summary = plan.get('summary', {})
            sections = plan.get('sections', {})
            
            print(f"   üìä –û–±—â–µ–µ –≤—Ä–µ–º—è: {summary.get('total_time', 0)} –º–∏–Ω")
            print(f"   üìö –°–ª–∞–±—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {len(summary.get('weak_domains', []))}")
            print(f"   üìã –°–µ–∫—Ü–∏–π: {len(sections)}")
            
            for section_type, section in sections.items():
                print(f"      - {section.get('title', section_type)}: {section.get('total_items', 0)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ CalendarPlanIntegration: {plan_result.get('error')}")
            return False
        
        # –¢–µ—Å—Ç 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞–Ω–∞
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–ª–∞–Ω–∞...")
        stats = integration.get_plan_statistics(6)
        
        if stats.get('success'):
            print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"   üìà –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: {stats.get('total_sessions', 0)}")
            print(f"   ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {stats.get('completed_sessions', 0)}")
            print(f"   üìä –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {stats.get('completion_rate', 0):.1f}%")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {stats.get('error')}")
        
        # –¢–µ—Å—Ç 3: –°–µ—Å—Å–∏–∏ –æ–±—É—á–µ–Ω–∏—è
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Å–µ—Å—Å–∏–π –æ–±—É—á–µ–Ω–∏—è...")
        sessions = integration.get_user_study_sessions(6, 7)
        
        print(f"‚úÖ –°–µ—Å—Å–∏–∏ –æ–±—É—á–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã: {len(sessions)} —Å–µ—Å—Å–∏–π")
        if sessions:
            print(f"   üìÖ –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è: {sessions[0].get('title', 'N/A')}")
        
        # –¢–µ—Å—Ç 4: DailyLearningAlgorithm
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç DailyLearningAlgorithm...")
        algo = DailyLearningAlgorithm()
        algo_result = algo.generate_daily_plan(6, 30)
        
        if algo_result.get('success'):
            print("‚úÖ DailyLearningAlgorithm —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"   üìä –û–±—â–µ–µ –≤—Ä–µ–º—è: {algo_result.get('total_estimated_time', 0)} –º–∏–Ω")
            print(f"   üìö –°–ª–∞–±—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {len(algo_result.get('weak_domains', []))}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ DailyLearningAlgorithm: {algo_result.get('error')}")
            return False
        
        print("\n" + "=" * 50)
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å –ø–ª–∞–Ω–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        return True

def test_api_endpoints():
    """–¢–µ—Å—Ç API endpoints"""
    print("\nüåê –¢–ï–°–¢ API ENDPOINTS")
    print("=" * 30)
    
    with app.test_client() as client:
        # –¢–µ—Å—Ç health check
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç /api/calendar-plan/health...")
        response = client.get('/api/calendar-plan/health')
        if response.status_code == 200:
            data = response.get_json()
            print(f"‚úÖ Health check: {data.get('status', 'unknown')}")
        else:
            print(f"‚ùå Health check failed: {response.status_code}")
        
        # –¢–µ—Å—Ç detailed plan
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç /api/calendar-plan/detailed-plan...")
        response = client.get('/api/calendar-plan/detailed-plan?target_minutes=30')
        if response.status_code == 200:
            data = response.get_json()
            if data.get('success'):
                print("‚úÖ Detailed plan API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                plan = data.get('plan', {})
                print(f"   üìä –í—Ä–µ–º—è: {plan.get('summary', {}).get('total_time', 0)} –º–∏–Ω")
            else:
                print(f"‚ùå API error: {data.get('error')}")
        else:
            print(f"‚ùå API failed: {response.status_code}")
        
        # –¢–µ—Å—Ç statistics
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç /api/calendar-plan/statistics...")
        response = client.get('/api/calendar-plan/statistics')
        if response.status_code == 200:
            data = response.get_json()
            if data.get('success'):
                print("‚úÖ Statistics API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                stats = data.get('statistics', {})
                print(f"   üìà –°–µ—Å—Å–∏–π: {stats.get('total_sessions', 0)}")
            else:
                print(f"‚ùå API error: {data.get('error')}")
        else:
            print(f"‚ùå API failed: {response.status_code}")

if __name__ == "__main__":
    try:
        success = test_calendar_integration()
        if success:
            test_api_endpoints()
        print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc() 