#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞–ø–ø–∏–Ω–≥–∞ –¥–æ–º–µ–Ω–æ–≤
–ü–µ—Ä–µ–Ω–æ—Å–∏—Ç –≤–æ–ø—Ä–æ—Å—ã FARMACOLOGIE –∏ PHARMA –≤ –¥–æ–º–µ–Ω PHARMACOLOGY
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app import app
from models import BIGDomain, Question
from extensions import db

def fix_pharmacology_mapping():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –º–∞–ø–ø–∏–Ω–≥ —Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –¥–æ–º–µ–Ω–æ–≤"""
    
    print('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ê–ü–ü–ò–ù–ì–ê –§–ê–†–ú–ê–ö–û–õ–û–ì–ò–ß–ï–°–ö–ò–• –î–û–ú–ï–ù–û–í')
    print('=' * 60)
    
    with app.app_context():
        # –ù–∞–π–¥–µ–º –¥–æ–º–µ–Ω PHARMACOLOGY
        pharma_domain = BIGDomain.query.filter_by(code='PHARMACOLOGY').first()
        
        if not pharma_domain:
            print('‚ùå –î–æ–º–µ–Ω PHARMACOLOGY –Ω–µ –Ω–∞–π–¥–µ–Ω')
            return False
        
        print(f'üìä –ù–∞–π–¥–µ–Ω –¥–æ–º–µ–Ω PHARMACOLOGY (ID: {pharma_domain.id})')
        print(f'   –ù–∞–∑–≤–∞–Ω–∏–µ: {pharma_domain.name}')
        
        # –ù–∞–π–¥–µ–º –≤–æ–ø—Ä–æ—Å—ã —Å domain="FARMACOLOGIE"
        farma_questions = Question.query.filter_by(domain='FARMACOLOGIE').all()
        print(f'\nüîç –ù–∞–π–¥–µ–Ω–æ {len(farma_questions)} –≤–æ–ø—Ä–æ—Å–æ–≤ —Å domain="FARMACOLOGIE"')
        
        # –ù–∞–π–¥–µ–º –≤–æ–ø—Ä–æ—Å—ã —Å domain="PHARMA"
        pharma_questions = Question.query.filter_by(domain='PHARMA').all()
        print(f'üîç –ù–∞–π–¥–µ–Ω–æ {len(pharma_questions)} –≤–æ–ø—Ä–æ—Å–æ–≤ —Å domain="PHARMA"')
        
        total_questions_to_fix = len(farma_questions) + len(pharma_questions)
        
        if total_questions_to_fix == 0:
            print('‚úÖ –ù–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è')
            return True
        
        print(f'\nüìù –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ê–ü–ü–ò–ù–ì–ê:')
        
        fixed_count = 0
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å—ã FARMACOLOGIE
        for question in farma_questions:
            old_domain_id = question.big_domain_id
            question.big_domain_id = pharma_domain.id
            fixed_count += 1
            print(f'   ‚úÖ –í–æ–ø—Ä–æ—Å {question.id}: FARMACOLOGIE -> PHARMACOLOGY (–±—ã–ª–æ: {old_domain_id})')
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å—ã PHARMA
        for question in pharma_questions:
            old_domain_id = question.big_domain_id
            question.big_domain_id = pharma_domain.id
            fixed_count += 1
            print(f'   ‚úÖ –í–æ–ø—Ä–æ—Å {question.id}: PHARMA -> PHARMACOLOGY (–±—ã–ª–æ: {old_domain_id})')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        try:
            db.session.commit()
            print(f'\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:')
            print(f'   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {fixed_count}')
            print(f'   FARMACOLOGIE: {len(farma_questions)}')
            print(f'   PHARMA: {len(pharma_questions)}')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            final_count = Question.query.filter_by(big_domain_id=pharma_domain.id).count()
            print(f'   –í—Å–µ–≥–æ –≤ PHARMACOLOGY: {final_count}')
            
            return True
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}')
            db.session.rollback()
            return False

def verify_fix():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    
    print('\nüîç –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê')
    print('=' * 40)
    
    with app.app_context():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–º–µ–Ω PHARMACOLOGY
        pharma_domain = BIGDomain.query.filter_by(code='PHARMACOLOGY').first()
        if pharma_domain:
            questions = Question.query.filter_by(big_domain_id=pharma_domain.id).all()
            print(f'üìä –î–æ–º–µ–Ω PHARMACOLOGY: {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –≤–æ–ø—Ä–æ—Å—ã —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ domain
            farma_remaining = Question.query.filter_by(domain='FARMACOLOGIE').count()
            pharma_remaining = Question.query.filter_by(domain='PHARMA').count()
            
            print(f'üîç –û—Å—Ç–∞–ª–æ—Å—å –≤–æ–ø—Ä–æ—Å–æ–≤ —Å domain="FARMACOLOGIE": {farma_remaining}')
            print(f'üîç –û—Å—Ç–∞–ª–æ—Å—å –≤–æ–ø—Ä–æ—Å–æ–≤ —Å domain="PHARMA": {pharma_remaining}')
            
            if farma_remaining == 0 and pharma_remaining == 0:
                print('‚úÖ –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã!')
            else:
                print('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–µ –±—ã–ª–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã')
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –¥–æ–º–µ–Ω–∞–º
        print(f'\nüìà –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –î–û–ú–ï–ù–û–í:')
        domains = BIGDomain.query.filter_by(is_active=True).order_by(BIGDomain.code).all()
        
        for domain in domains:
            questions_count = Question.query.filter_by(big_domain_id=domain.id).count()
            if questions_count > 0:
                print(f'   ‚Ä¢ {domain.code}: {questions_count} –≤–æ–ø—Ä–æ—Å–æ–≤')

if __name__ == '__main__':
    print('üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞–ø–ø–∏–Ω–≥–∞ –¥–æ–º–µ–Ω–æ–≤...')
    
    success = fix_pharmacology_mapping()
    
    if success:
        verify_fix()
        print('\n‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
    else:
        print('\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!')


