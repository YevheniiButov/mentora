#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
"""

import os
import sys
from datetime import datetime

def create_tracking_tables():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π"""
    print("üîß Creating tracking tables...")
    
    try:
        project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        sys.path.insert(0, project_root)
        
        from app import app
        from extensions import db
        
        with app.app_context():
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                db.session.execute(db.text("SELECT 1"))
                print("‚úÖ Database connection successful")
            except Exception as e:
                print(f"‚ùå Database connection failed: {str(e)}")
                return False
            
            try:
                # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
                db.create_all()
                print("‚úÖ All tables created successfully")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
                from models import RegistrationVisitor, RegistrationAnalytics
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º RegistrationVisitor
                result = db.session.execute(db.text("SELECT COUNT(*) FROM registration_visitors")).scalar()
                print(f"‚úÖ RegistrationVisitor table exists (records: {result})")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º RegistrationAnalytics
                result = db.session.execute(db.text("SELECT COUNT(*) FROM registration_analytics")).scalar()
                print(f"‚úÖ RegistrationAnalytics table exists (records: {result})")
                
                return True
                
            except Exception as e:
                print(f"‚ùå Error creating tables: {str(e)}")
                import traceback
                traceback.print_exc()
                return False
                
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ Create Tracking Tables Script")
    print("=" * 50)
    
    success = create_tracking_tables()
    
    if success:
        print("‚úÖ Script completed successfully!")
        sys.exit(0)
    else:
        print("‚ùå Script failed!")
        sys.exit(1)

if __name__ == '__main__':
    main()


