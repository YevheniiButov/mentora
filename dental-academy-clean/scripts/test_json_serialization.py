#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è JSON —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏
"""
import os
import sys
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from app import app
from models import db, User, WebsiteVisit, UserSession

def test_json_serialization():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç JSON —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤"""
    
    with app.app_context():
        try:
            print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï JSON –°–ï–†–ò–ê–õ–ò–ó–ê–¶–ò–ò")
            print("=" * 50)
            
            # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
            simple_data = {
                'online_users': 5,
                'new_users_today': 2,
                'active_sessions_today': 3,
                'visits_today': 10
            }
            
            try:
                json.dumps(simple_data)
                print("‚úÖ –ü—Ä–æ—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ - OK")
            except Exception as e:
                print(f"‚ùå –ü—Ä–æ—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ - –û–®–ò–ë–ö–ê: {e}")
            
            # –¢–µ—Å—Ç 2: –î–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
            try:
                users = User.query.limit(3).all()
                user_data = []
                for user in users:
                    user_data.append({
                        'id': user.id,
                        'email': user.email,
                        'first_name': user.first_name,
                        'last_name': user.last_name,
                        'role': user.role,
                        'is_active': user.is_active,
                        'created_at': user.created_at.isoformat() if user.created_at else None,
                        'last_login': user.last_login.isoformat() if user.last_login else None
                    })
                
                json.dumps(user_data)
                print("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - OK")
            except Exception as e:
                print(f"‚ùå –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –û–®–ò–ë–ö–ê: {e}")
            
            # –¢–µ—Å—Ç 3: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            try:
                stats = {
                    'total_users': User.query.count(),
                    'active_users': User.query.filter_by(is_active=True).count(),
                    'admin_users': User.query.filter_by(role='admin').count(),
                    'online_users': 0  # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                }
                
                json.dumps(stats)
                print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - OK")
            except Exception as e:
                print(f"‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –û–®–ò–ë–ö–ê: {e}")
            
            # –¢–µ—Å—Ç 4: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º)
            try:
                popular_pages = []
                # –ò–º–∏—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –ë–î
                popular_pages.append({
                    'page_url': '/',
                    'visits': 10,
                    'unique_visitors': 5
                })
                
                json.dumps(popular_pages)
                print("‚úÖ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã - OK")
            except Exception as e:
                print(f"‚ùå –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –û–®–ò–ë–ö–ê: {e}")
            
            print("\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {str(e)}")
            import traceback
            traceback.print_exc()
            sys.exit(1)

if __name__ == "__main__":
    test_json_serialization()
