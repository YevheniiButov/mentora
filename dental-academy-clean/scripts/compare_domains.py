#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–æ–º–µ–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –¥–æ–º–µ–Ω–∞–º–∏ –≤ —Ñ–∞–π–ª–µ 160_2.json
"""

import json
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app import app
from models import BIGDomain, Question
from extensions import db

def load_160_2_domains():
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–º–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ 160_2.json"""
    
    file_path = os.path.join(os.path.dirname(__file__), '160_2.json')
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–æ–º–µ–Ω—ã
        domains_in_file = set()
        domain_question_counts = {}
        
        for question in data:
            domain = question.get('domain')
            if domain:
                domains_in_file.add(domain)
                domain_question_counts[domain] = domain_question_counts.get(domain, 0) + 1
        
        return domains_in_file, domain_question_counts
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ 160_2.json: {e}")
        return set(), {}

def get_database_domains():
    """–ü–æ–ª—É—á–∏—Ç—å –¥–æ–º–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    with app.app_context():
        domains = BIGDomain.query.filter_by(is_active=True).all()
        
        domain_codes = set()
        domain_stats = {}
        
        for domain in domains:
            domain_codes.add(domain.code)
            questions_count = Question.query.filter_by(big_domain_id=domain.id).count()
            
            domain_stats[domain.code] = {
                'id': domain.id,
                'name': domain.name,
                'questions_count': questions_count,
                'weight': domain.weight_percentage
            }
        
        return domain_codes, domain_stats

def compare_domains():
    """–°—Ä–∞–≤–Ω–∏—Ç—å –¥–æ–º–µ–Ω—ã –º–µ–∂–¥—É —Ñ–∞–π–ª–æ–º –∏ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    
    print('üîç –°–†–ê–í–ù–ï–ù–ò–ï –î–û–ú–ï–ù–û–í: 160_2.JSON vs –ë–ê–ó–ê –î–ê–ù–ù–´–•')
    print('=' * 70)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–º–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞
    file_domains, file_question_counts = load_160_2_domains()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–º–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_domains, db_domain_stats = get_database_domains()
    
    print(f'\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:')
    print(f'   –î–æ–º–µ–Ω–æ–≤ –≤ 160_2.json: {len(file_domains)}')
    print(f'   –î–æ–º–µ–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {len(db_domains)}')
    
    # –î–æ–º–µ–Ω—ã —Ç–æ–ª—å–∫–æ –≤ —Ñ–∞–π–ª–µ
    only_in_file = file_domains - db_domains
    print(f'   –î–æ–º–µ–Ω–æ–≤ —Ç–æ–ª—å–∫–æ –≤ —Ñ–∞–π–ª–µ: {len(only_in_file)}')
    
    # –î–æ–º–µ–Ω—ã —Ç–æ–ª—å–∫–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    only_in_db = db_domains - file_domains
    print(f'   –î–æ–º–µ–Ω–æ–≤ —Ç–æ–ª—å–∫–æ –≤ –ë–î: {len(only_in_db)}')
    
    # –û–±—â–∏–µ –¥–æ–º–µ–Ω—ã
    common_domains = file_domains & db_domains
    print(f'   –û–±—â–∏—Ö –¥–æ–º–µ–Ω–æ–≤: {len(common_domains)}')
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    print(f'\nüìã –î–û–ú–ï–ù–´ –¢–û–õ–¨–ö–û –í –§–ê–ô–õ–ï 160_2.JSON:')
    if only_in_file:
        for domain in sorted(only_in_file):
            questions = file_question_counts.get(domain, 0)
            print(f'   ‚Ä¢ {domain}: {questions} –≤–æ–ø—Ä–æ—Å–æ–≤')
    else:
        print('   –ù–µ—Ç')
    
    print(f'\nüìã –î–û–ú–ï–ù–´ –¢–û–õ–¨–ö–û –í –ë–ê–ó–ï –î–ê–ù–ù–´–•:')
    if only_in_db:
        for domain in sorted(only_in_db):
            stats = db_domain_stats[domain]
            print(f'   ‚Ä¢ {domain}: {stats["questions_count"]} –≤–æ–ø—Ä–æ—Å–æ–≤ (–≤–µ—Å: {stats["weight"]}%)')
    else:
        print('   –ù–µ—Ç')
    
    print(f'\nüìã –û–ë–©–ò–ï –î–û–ú–ï–ù–´:')
    if common_domains:
        print(f'   {"–ö–æ–¥":<20} {"–í —Ñ–∞–π–ª–µ":<10} {"–í –ë–î":<10} {"–†–∞–∑–Ω–∏—Ü–∞":<10}')
        print('   ' + '-' * 50)
        
        for domain in sorted(common_domains):
            file_count = file_question_counts.get(domain, 0)
            db_count = db_domain_stats[domain]['questions_count']
            difference = db_count - file_count
            
            status = "‚úÖ" if difference == 0 else "‚ö†Ô∏è" if difference > 0 else "‚ùå"
            print(f'   {status} {domain:<17} {file_count:<10} {db_count:<10} {difference:+<10}')
    else:
        print('   –ù–µ—Ç')
    
    # –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
    print(f'\nüéØ –ê–ù–ê–õ–ò–ó –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø:')
    
    if len(only_in_file) == 0 and len(only_in_db) == 0:
        print('   ‚úÖ –ò–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ - –≤—Å–µ –¥–æ–º–µ–Ω—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç')
    elif len(only_in_file) == 0:
        print('   ‚úÖ –í—Å–µ –¥–æ–º–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ –µ—Å—Ç—å –≤ –ë–î')
        print(f'   ‚ö†Ô∏è  –í –ë–î –µ—Å—Ç—å {len(only_in_db)} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤')
    elif len(only_in_db) == 0:
        print('   ‚ùå –í –ë–î –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–æ–º–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞')
        print(f'   ‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç {len(only_in_file)} –¥–æ–º–µ–Ω–æ–≤')
    else:
        print('   ‚ö†Ô∏è  –ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ')
        print(f'   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ë–î: {len(only_in_file)} –¥–æ–º–µ–Ω–æ–≤')
        print(f'   ‚ö†Ô∏è  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤ –ë–î: {len(only_in_db)} –¥–æ–º–µ–Ω–æ–≤')

if __name__ == '__main__':
    compare_domains()


