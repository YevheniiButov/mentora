#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—É—Å—Ç—ã—Ö –¥–æ–º–µ–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app import app
from models import BIGDomain, Question
from extensions import db

def check_empty_domains():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–º–µ–Ω—ã –±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤"""
    
    print('üîç –ü–†–û–í–ï–†–ö–ê –ü–£–°–¢–´–• –î–û–ú–ï–ù–û–í')
    print('=' * 50)
    
    with app.app_context():
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–æ–º–µ–Ω—ã
        domains = BIGDomain.query.filter_by(is_active=True).order_by(BIGDomain.code).all()
        
        print(f'üìä –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {len(domains)}')
        
        empty_domains = []
        domains_with_questions = []
        total_questions = 0
        
        for domain in domains:
            questions_count = Question.query.filter_by(big_domain_id=domain.id).count()
            total_questions += questions_count
            
            if questions_count == 0:
                empty_domains.append({
                    'code': domain.code,
                    'name': domain.name,
                    'weight': domain.weight_percentage,
                    'id': domain.id
                })
            else:
                domains_with_questions.append({
                    'code': domain.code,
                    'name': domain.name,
                    'questions': questions_count,
                    'weight': domain.weight_percentage,
                    'id': domain.id
                })
        
        print(f'\nüìã –ü–£–°–¢–´–ï –î–û–ú–ï–ù–´ ({len(empty_domains)}):')
        if empty_domains:
            print(f'   {"–ö–æ–¥":<20} {"–ù–∞–∑–≤–∞–Ω–∏–µ":<30} {"–í–µ—Å":<8} {"ID":<6}')
            print('   ' + '-' * 70)
            
            for domain in empty_domains:
                print(f'   {domain["code"]:<20} {domain["name"]:<30} {domain["weight"]:<8} {domain["id"]:<6}')
        else:
            print('   ‚úÖ –ù–µ—Ç –ø—É—Å—Ç—ã—Ö –¥–æ–º–µ–Ω–æ–≤!')
        
        print(f'\nüìã –î–û–ú–ï–ù–´ –° –í–û–ü–†–û–°–ê–ú–ò ({len(domains_with_questions)}):')
        print(f'   {"–ö–æ–¥":<20} {"–ù–∞–∑–≤–∞–Ω–∏–µ":<30} {"–í–æ–ø—Ä–æ—Å–æ–≤":<10} {"–í–µ—Å":<8} {"ID":<6}')
        print('   ' + '-' * 80)
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤–æ–ø—Ä–æ—Å–æ–≤ (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
        domains_with_questions.sort(key=lambda x: x['questions'], reverse=True)
        
        for domain in domains_with_questions:
            print(f'   {domain["code"]:<20} {domain["name"]:<30} {domain["questions"]:<10} {domain["weight"]:<8} {domain["id"]:<6}')
        
        print(f'\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:')
        print(f'   –í—Å–µ–≥–æ –¥–æ–º–µ–Ω–æ–≤: {len(domains)}')
        print(f'   –î–æ–º–µ–Ω–æ–≤ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏: {len(domains_with_questions)}')
        print(f'   –ü—É—Å—Ç—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {len(empty_domains)}')
        print(f'   –í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {total_questions}')
        
        if empty_domains:
            print(f'\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω–æ {len(empty_domains)} –ø—É—Å—Ç—ã—Ö –¥–æ–º–µ–Ω–æ–≤!')
            print('   –≠—Ç–∏ –¥–æ–º–µ–Ω—ã –º–æ–≥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ.')
        else:
            print(f'\n‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –¥–æ–º–µ–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –≤–æ–ø—Ä–æ—Å—ã.')

if __name__ == '__main__':
    check_empty_domains()


