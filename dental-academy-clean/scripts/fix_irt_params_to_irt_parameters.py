#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è irt_params –Ω–∞ irt_parameters –≤ JSON —Ñ–∞–π–ª–∞—Ö
"""

import json
import os
import glob
from pathlib import Path

def fix_json_file(file_path):
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å irt_params –Ω–∞ irt_parameters –≤ JSON —Ñ–∞–π–ª–µ"""
    
    print(f"üîß –ò—Å–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª: {file_path}")
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # –°—á–µ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        changes_count = 0
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–∞—Å—Å–∏–≤ –≤–æ–ø—Ä–æ—Å–æ–≤
        if isinstance(data, list):
            for question in data:
                if isinstance(question, dict) and 'irt_params' in question:
                    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –∫–ª—é—á
                    question['irt_parameters'] = question.pop('irt_params')
                    changes_count += 1
                    print(f"  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –≤–æ–ø—Ä–æ—Å ID: {question.get('id', 'unknown')}")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
        elif isinstance(data, dict):
            if 'questions' in data and isinstance(data['questions'], list):
                for question in data['questions']:
                    if isinstance(question, dict) and 'irt_params' in question:
                        question['irt_parameters'] = question.pop('irt_params')
                        changes_count += 1
                        print(f"  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –≤–æ–ø—Ä–æ—Å ID: {question.get('id', 'unknown')}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if changes_count > 0:
            with open(file_path, 'w', encoding='utf-8') as f:
                json.dump(data, f, ensure_ascii=False, indent=2)
            print(f"  üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {changes_count} –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        else:
            print(f"  ‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
        return changes_count
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")
        return 0

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï irt_params ‚Üí irt_parameters")
    print("=" * 50)
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ JSON —Ñ–∞–π–ª—ã –≤ scripts/
    scripts_dir = Path("scripts")
    json_files = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –∏–∑ scripts/
    json_files.extend(glob.glob("scripts/*.json"))
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –∏–∑ –ø–æ–¥–ø–∞–ø–æ–∫ scripts/
    json_files.extend(glob.glob("scripts/*/*.json"))
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –∏–∑ cards/
    json_files.extend(glob.glob("cards/*/*.json"))
    
    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ {len(json_files)} JSON —Ñ–∞–π–ª–æ–≤")
    print()
    
    total_changes = 0
    processed_files = 0
    
    for file_path in json_files:
        if os.path.exists(file_path):
            changes = fix_json_file(file_path)
            total_changes += changes
            processed_files += 1
            print()
    
    print("=" * 50)
    print(f"‚úÖ –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
    print(f"üìÅ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {processed_files}")
    print(f"üîß –í—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {total_changes}")
    
    if total_changes > 0:
        print("\nüéâ –í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    else:
        print("\n‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ - –≤–æ–∑–º–æ–∂–Ω–æ, —Ñ–∞–π–ª—ã —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")

if __name__ == "__main__":
    main() 