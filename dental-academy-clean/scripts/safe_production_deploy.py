#!/usr/bin/env python3
"""
–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–µ–ø–ª–æ–π –≤ production —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º
"""
import os
import sys
import json
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from app import app
from models import db, User, Contact, Profession

def backup_users():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    try:
        print("üíæ –°–û–ó–î–ê–ù–ò–ï –†–ï–ó–ï–†–í–ù–û–ô –ö–û–ü–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
        print("=" * 50)
        
        users = User.query.all()
        backup_data = []
        
        for user in users:
            user_data = {
                'id': user.id,
                'email': user.email,
                'username': user.username,
                'first_name': user.first_name,
                'last_name': user.last_name,
                'role': user.role,
                'is_active': user.is_active,
                'email_confirmed': user.email_confirmed,
                'registration_completed': user.registration_completed,
                'language': user.language,
                'created_at': user.created_at.isoformat() if user.created_at else None,
                'last_login': user.last_login.isoformat() if user.last_login else None,
                'password_hash': user.password_hash  # –í–ê–ñ–ù–û: —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ö–µ—à –ø–∞—Ä–æ–ª—è
            }
            backup_data.append(user_data)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        backup_file = f"backups/users_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
        os.makedirs("backups", exist_ok=True)
        
        with open(backup_file, 'w', encoding='utf-8') as f:
            json.dump(backup_data, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_file}")
        print(f"üìä –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(backup_data)}")
        
        return backup_file, backup_data
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {e}")
        return None, None

def restore_users(backup_file):
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"""
    try:
        print("üîÑ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
        print("=" * 50)
        
        with open(backup_file, 'r', encoding='utf-8') as f:
            backup_data = json.load(f)
        
        restored_count = 0
        for user_data in backup_data:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            existing_user = User.query.filter_by(email=user_data['email']).first()
            if existing_user:
                print(f"‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['email']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                continue
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = User(
                email=user_data['email'],
                username=user_data['username'],
                first_name=user_data['first_name'],
                last_name=user_data['last_name'],
                role=user_data['role'],
                is_active=user_data['is_active'],
                email_confirmed=user_data['email_confirmed'],
                registration_completed=user_data['registration_completed'],
                language=user_data['language']
            )
            
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ö–µ—à –ø–∞—Ä–æ–ª—è
            user.password_hash = user_data['password_hash']
            
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—ã
            if user_data['created_at']:
                user.created_at = datetime.fromisoformat(user_data['created_at'])
            if user_data['last_login']:
                user.last_login = datetime.fromisoformat(user_data['last_login'])
            
            db.session.add(user)
            restored_count += 1
        
        db.session.commit()
        print(f"‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {restored_count}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
        db.session.rollback()
        return False

def safe_production_deploy():
    """–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–µ–ø–ª–æ–π —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    try:
        print("üöÄ –ë–ï–ó–û–ü–ê–°–ù–´–ô PRODUCTION –î–ï–ü–õ–û–ô")
        print("=" * 60)
        
        with app.app_context():
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ë–î
            print("1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø")
            try:
                user_count = User.query.count()
                print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: {user_count}")
                
                if user_count > 0:
                    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
                    backup_file, backup_data = backup_users()
                    if not backup_file:
                        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é!")
                        return False
                else:
                    print("   ‚ö†Ô∏è  –ë–î –ø—É—Å—Ç–∞, —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ –Ω—É–∂–Ω–∞")
                    backup_file = None
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}")
                return False
            
            # 2. –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
            print("\n2Ô∏è‚É£ –í–´–ü–û–õ–ù–ï–ù–ò–ï –ú–ò–ì–†–ê–¶–ò–ô –ë–î")
            try:
                # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
                db.create_all()
                print("   ‚úÖ –¢–∞–±–ª–∏—Ü—ã –ë–î —Å–æ–∑–¥–∞–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
                return False
            
            # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–π
            print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï –ú–ò–ì–†–ê–¶–ò–ô")
            try:
                user_count_after = User.query.count()
                print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–π: {user_count_after}")
                
                if user_count > 0 and user_count_after == 0:
                    print("   üö® –î–ê–ù–ù–´–ï –ü–û–¢–ï–†–Ø–ù–´! –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...")
                    
                    if backup_file and os.path.exists(backup_file):
                        if restore_users(backup_file):
                            print("   ‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
                        else:
                            print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ!")
                            return False
                    else:
                        print("   ‚ùå –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                        return False
                        
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
                return False
            
            # 4. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–¥–º–∏–Ω–∞
            print("\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
            try:
                admins = User.query.filter_by(role='admin').all()
                print(f"   üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {len(admins)}")
                
                if len(admins) == 0:
                    print("   üî® –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
                    
                    admin = User(
                        email="admin@mentora.com",
                        username="admin@mentora.com",
                        first_name="Admin",
                        last_name="User",
                        role='admin',
                        is_active=True,
                        email_confirmed=True,
                        registration_completed=True,
                        language='en'
                    )
                    admin.set_password("AdminPass123!")
                    db.session.add(admin)
                    db.session.commit()
                    print("   ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω")
                else:
                    print("   ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∞: {e}")
                return False
            
            # 5. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            print("\n5Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê")
            try:
                final_user_count = User.query.count()
                final_admin_count = User.query.filter_by(role='admin').count()
                
                print(f"   üë• –ò—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {final_user_count}")
                print(f"   üëë –ò—Ç–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {final_admin_count}")
                
                if final_admin_count > 0:
                    print("   ‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                    return True
                else:
                    print("   ‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
                    return False
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
                return False
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –î–ï–ü–õ–û–Ø: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = safe_production_deploy()
    if not success:
        print("‚ùå –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ò–õ–°–Ø –° –û–®–ò–ë–ö–û–ô")
        sys.exit(1)
    else:
        print("‚úÖ –î–ï–ü–õ–û–ô –í–´–ü–û–õ–ù–ï–ù –£–°–ü–ï–®–ù–û")