"""Add missing columns to learning_path

Revision ID: a712e229aab8
Revises: d4129d49b4ba
Create Date: 2025-08-06 18:11:30.002398

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'a712e229aab8'
down_revision = 'd4129d49b4ba'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_learning_path')
    with op.batch_alter_table('learning_path', schema=None) as batch_op:
        batch_op.add_column(sa.Column('irt_difficulty_range', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('irt_discrimination_range', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('target_ability_levels', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('adaptive_routing', sa.JSON(), nullable=True))
        batch_op.alter_column('id',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)

    with op.batch_alter_table('lessons', schema=None) as batch_op:
        batch_op.drop_index('ix_lessons_difficulty')

    with op.batch_alter_table('personal_learning_plan', schema=None) as batch_op:
        batch_op.alter_column('diagnostic_reminder_sent',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text("'false'"))
        batch_op.create_foreign_key('fk_personal_learning_plan_diagnostic_session', 'diagnostic_session', ['diagnostic_session_id'], ['id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('requires_diagnostic',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text("'true'"))

    with op.batch_alter_table('user_learning_progress', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_foreign_key('fk_user_learning_progress_learning_path', 'learning_path', ['learning_path_id'], ['id'])
        batch_op.create_foreign_key('fk_user_learning_progress_user', 'user', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_learning_progress', schema=None) as batch_op:
        batch_op.drop_constraint('fk_user_learning_progress_user', type_='foreignkey')
        batch_op.drop_constraint('fk_user_learning_progress_learning_path', type_='foreignkey')
        batch_op.create_foreign_key('fk_user_learning_progress_user_old', 'user', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_user_learning_progress_learning_path_old', 'learning_path', ['learning_path_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('requires_diagnostic',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text("'true'"))

    with op.batch_alter_table('personal_learning_plan', schema=None) as batch_op:
        batch_op.drop_constraint('fk_personal_learning_plan_diagnostic_session', type_='foreignkey')
        batch_op.alter_column('diagnostic_reminder_sent',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text("'false'"))

    with op.batch_alter_table('lessons', schema=None) as batch_op:
        batch_op.create_index('ix_lessons_difficulty', ['difficulty'], unique=False)

    with op.batch_alter_table('learning_path', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.drop_column('adaptive_routing')
        batch_op.drop_column('target_ability_levels')
        batch_op.drop_column('irt_discrimination_range')
        batch_op.drop_column('irt_difficulty_range')

    op.create_table('_alembic_tmp_learning_path',
    sa.Column('id', sa.VARCHAR(length=50), nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('name_nl', sa.VARCHAR(length=200), nullable=True),
    sa.Column('name_ru', sa.VARCHAR(length=200), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('exam_component', sa.VARCHAR(length=20), nullable=False),
    sa.Column('exam_weight', sa.FLOAT(), nullable=False),
    sa.Column('exam_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('duration_weeks', sa.INTEGER(), nullable=True),
    sa.Column('total_estimated_hours', sa.INTEGER(), nullable=True),
    sa.Column('prerequisites', sqlite.JSON(), nullable=True),
    sa.Column('modules', sqlite.JSON(), nullable=True),
    sa.Column('assessment', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('(TRUE)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
