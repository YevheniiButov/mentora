#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä—É–º–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Ç–µ–º—ã –∏ –ø–æ—Å—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import psycopg2
from urllib.parse import urlparse

def get_production_db_connection():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ DATABASE_URL"""
    try:
        database_url = os.environ.get('DATABASE_URL')
        
        if not database_url:
            print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
            return None
        
        print(f"üîó –ò—Å–ø–æ–ª—å–∑—É–µ–º DATABASE_URL: {database_url[:50]}...")
        
        conn = psycopg2.connect(database_url, sslmode='require')
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return conn
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def check_forum_data(conn):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä—É–º–∞"""
    cursor = conn.cursor()
    
    print("\nüìä –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –§–û–†–£–ú–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\nüìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–æ—Ä—É–º–∞:")
    cursor.execute("SELECT id, name, slug, is_active FROM forum_categories ORDER BY id")
    categories = cursor.fetchall()
    
    if categories:
        for cat in categories:
            cat_id, name, slug, is_active = cat
            print(f"   ‚úÖ ID: {cat_id}, –ù–∞–∑–≤–∞–Ω–∏–µ: {name}, Slug: {slug}, –ê–∫—Ç–∏–≤–Ω–∞: {is_active}")
    else:
        print("   ‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–º—ã
    print("\nüí¨ –¢–µ–º—ã —Ñ–æ—Ä—É–º–∞:")
    cursor.execute("""
        SELECT ft.id, ft.title, ft.category_id, ft.author_id, ft.views_count, ft.replies_count, ft.created_at,
               u.first_name, u.last_name
        FROM forum_topics ft
        LEFT JOIN "user" u ON ft.author_id = u.id
        ORDER BY ft.id
    """)
    topics = cursor.fetchall()
    
    if topics:
        for topic in topics:
            topic_id, title, cat_id, author_id, views, replies, created_at, first_name, last_name = topic
            author_name = f"{first_name} {last_name}" if first_name and last_name else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            print(f"   ‚úÖ ID: {topic_id}")
            print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {title[:50]}...")
            print(f"      –ê–≤—Ç–æ—Ä: {author_name} (ID: {author_id})")
            print(f"      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {cat_id}")
            print(f"      –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {views}, –û—Ç–≤–µ—Ç—ã: {replies}")
            print(f"      –°–æ–∑–¥–∞–Ω–æ: {created_at}")
            print()
    else:
        print("   ‚ùå –¢–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç—ã
    print("\nüìù –ü–æ—Å—Ç—ã —Ñ–æ—Ä—É–º–∞:")
    cursor.execute("""
        SELECT fp.id, fp.topic_id, fp.author_id, fp.content, fp.created_at,
               u.first_name, u.last_name
        FROM forum_posts fp
        LEFT JOIN "user" u ON fp.author_id = u.id
        ORDER BY fp.topic_id, fp.created_at
    """)
    posts = cursor.fetchall()
    
    if posts:
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
        current_topic = None
        
        for post in posts:
            post_id, topic_id, author_id, content, created_at, first_name, last_name = post
            author_name = f"{first_name} {last_name}" if first_name and last_name else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            
            if current_topic != topic_id:
                print(f"\n   üìã –¢–µ–º–∞ ID {topic_id}:")
                current_topic = topic_id
            
            print(f"      üìù –ü–æ—Å—Ç ID {post_id}: {content[:50]}...")
            print(f"         –ê–≤—Ç–æ—Ä: {author_name}, –í—Ä–µ–º—è: {created_at}")
    else:
        print("   ‚ùå –ü–æ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å @example.com:")
    cursor.execute('SELECT id, first_name, last_name, email FROM "user" WHERE email LIKE \'%@example.com\' ORDER BY id')
    users = cursor.fetchall()
    
    if users:
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        for user in users:
            user_id, first_name, last_name, email = user
            print(f"      üë§ ID: {user_id}, –ò–º—è: {first_name} {last_name}, Email: {email}")
    else:
        print("   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –§–û–†–£–ú–ê –ù–ê –ü–†–û–î–ê–ö–®–ï–ù–ï")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not os.environ.get('DATABASE_URL'):
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return False
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = get_production_db_connection()
    if not conn:
        return False
    
    try:
        check_forum_data(conn)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
        
    finally:
        conn.close()
        print("\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.")

if __name__ == "__main__":
    main()
