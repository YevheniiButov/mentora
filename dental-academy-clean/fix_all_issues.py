#!/usr/bin/env python3
"""
üîß –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º
"""

import os
import re

def fix_ukrainian_encoding():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π –≤ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º —Ñ–∞–π–ª–µ"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–∏...")
    
    try:
        with open('translations/uk.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏
        original_content = content
        
        # –ó–∞–º–µ–Ω—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ HTML-–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã
        content = content.replace('&#39;', "'")
        content = content.replace('&apos;', "'")
        content = content.replace('&quot;', '"')
        
        # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –≤—Å–µ –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã
        content = re.sub(r"–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π", "–æ–±–æ–≤\\'—è–∑–∫–æ–≤–∏–π", content)
        content = re.sub(r"–æ–±–æ–≤'—è–∑–∫–æ–≤—ñ", "–æ–±–æ–≤\\'—è–∑–∫–æ–≤—ñ", content)
        content = re.sub(r"–æ–±–æ–≤'—è–∑–∫–æ–≤–∞", "–æ–±–æ–≤\\'—è–∑–∫–æ–≤–∞", content)
        
        if content != original_content:
            with open('translations/uk.py', 'w', encoding='utf-8') as f:
                f.write(content)
            print("‚úÖ –£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
        else:
            print("‚úÖ –£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–∫—Ä–∞–∏–Ω—Å–∫–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–∏: {e}")
        return False

def create_production_config():
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è production"""
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    config_content = '''# Production Configuration
# –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞

import os

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è production (–ù–ï–ë–ï–ó–û–ü–ê–°–ù–û - —Ç–æ–ª—å–∫–æ –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è)
PRODUCTION_TEMP_CONFIG = {
    'SECRET_KEY': 'mentora-production-temp-key-2024',
    'MAIL_USERNAME': 'MS_uUzJtfkAxyPn@mentora.mlsender.net',
    'MAIL_PASSWORD': 'mssp.eTIPhpXlO2nu.e6t7xgcGA1kl.Bw3hiAB80JpM',
    'MAIL_DEFAULT_SENDER': 'Mentora <noreply@mentora.com>',
    'MAIL_SUPPRESS_SEND': True
}

def get_production_temp_config():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è production"""
    return PRODUCTION_TEMP_CONFIG
'''
    
    with open('production_temp_config.py', 'w', encoding='utf-8') as f:
        f.write(config_content)
    
    print("‚úÖ Production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞")
    return True

def create_emergency_deployment_script():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è"""
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è...")
    
    script_content = '''#!/bin/bash
# üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –¥–µ–ø–ª–æ–π –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞

echo "üö® –≠–ö–°–¢–†–ï–ù–ù–´–ô –î–ï–ü–õ–û–ô - –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –†–ê–ë–û–¢–´ –°–ï–†–í–ï–†–ê"
echo "=================================================="

# 1. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å
echo "1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
systemctl stop your-app-service

# 2. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
cd /path/to/your/app

# 3. –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
echo "2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
git pull origin main

# 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip3 install -r requirements.txt

# 5. –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
echo "4. –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
cat > .env << EOF
SECRET_KEY=mentora-production-temp-key-2024
FLASK_ENV=production
FLASK_DEBUG=0
MAIL_USERNAME=MS_uUzJtfkAxyPn@mentora.mlsender.net
MAIL_PASSWORD=mssp.eTIPhpXlO2nu.e6t7xgcGA1kl.Bw3hiAB80JpM
MAIL_DEFAULT_SENDER=Mentora <noreply@mentora.com>
MAIL_SUPPRESS_SEND=true
DATABASE_URL=your-production-database-url
EOF

# 6. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
chmod 600 .env

# 7. –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
echo "5. –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î..."
python3 -c "
import os
os.environ['FLASK_APP'] = 'app.py'
from flask_migrate import upgrade
from app import create_app
app = create_app()
with app.app_context():
    upgrade()
"

# 8. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
echo "6. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
systemctl start your-app-service

# 9. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
sleep 5
systemctl status your-app-service --no-pager

echo "‚úÖ –≠–ö–°–¢–†–ï–ù–ù–´–ô –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù"
echo "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç: https://www.mentora.com.in"
'''
    
    with open('emergency_deploy.sh', 'w') as f:
        f.write(script_content)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod('emergency_deploy.sh', 0o755)
    
    print("‚úÖ –°–∫—Ä–∏–ø—Ç —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è —Å–æ–∑–¥–∞–Ω: emergency_deploy.sh")
    return True

def test_application():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    try:
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞
        import sys
        sys.path.insert(0, '.')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
        from app import create_app
        app = create_app()
        
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ü–û–õ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú")
    print("=" * 50)
    
    success_count = 0
    total_tasks = 0
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —É–∫—Ä–∞–∏–Ω—Å–∫—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É
    total_tasks += 1
    if fix_ukrainian_encoding():
        success_count += 1
    
    # –°–æ–∑–¥–∞–µ–º production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    total_tasks += 1
    if create_production_config():
        success_count += 1
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è
    total_tasks += 1
    if create_emergency_deployment_script():
        success_count += 1
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    total_tasks += 1
    if test_application():
        success_count += 1
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 50)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢: {success_count}/{total_tasks} –∑–∞–¥–∞—á –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
    
    if success_count == total_tasks:
        print("üéâ –í–°–ï –ü–†–û–ë–õ–ï–ú–´ –ò–°–ü–†–ê–í–õ–ï–ù–´!")
        print("\n‚úÖ –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:")
        print("  - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞")
        print("  - –î–æ–±–∞–≤–ª–µ–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è production")
        print("  - –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è")
        print("  - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        
        print("\nüö® –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ó–∞–ø—É—à–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Git")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ emergency_deploy.sh –Ω–∞ production —Å–µ—Ä–≤–µ—Ä–µ")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞")
        print("4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        
        return True
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –ó–ê–î–ê–ß–ò –ù–ï –í–´–ü–û–õ–ù–ï–ù–´!")
        return False

if __name__ == "__main__":
    main()
